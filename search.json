[{"title":"C# Qrcode製作","url":"/c_/C-Qrcodemake/","content":"<p>Qrcode 製作介紹</p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>現代人人手一支手機，因此只要有手機就能將Qrcode的內容，呈現在使用者的手機上，這樣不用使用者慢慢key網址，節省很多時間。</p>\n<h1 id=\"流程圖\"><a href=\"#流程圖\" class=\"headerlink\" title=\"流程圖\"></a>流程圖</h1><p><img src=\"/../image/c_/qrcodemake_1.png\" alt=\"result\" title=\"result\"></p>\n<p>撰寫產生Qrcode的程式</p>\n<p>使用者掃Qrcode</p>\n<p>將內容傳給使用者</p>\n<span id=\"more\"></span>\n<h1 id=\"前置準備\"><a href=\"#前置準備\" class=\"headerlink\" title=\"前置準備\"></a>前置準備</h1><p>要使用的程序庫</p>\n<p>nuget抓取Zxing</p>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><h2 style=\"color:red\">使用程式庫</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> ZXing.QrCode;</span><br><span class=\"line\"><span class=\"keyword\">using</span> ZXing;</span><br><span class=\"line\"><span class=\"keyword\">using</span> ZXing.Common;</span><br><span class=\"line\"><span class=\"keyword\">using</span> ZXing.Rendering;</span><br></pre></td></tr></table></figure>\n\n<h2 style=\"color:red\">內容</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">class</span> <span class=\"title\">Qrcode</span> : <span class=\"title\">Form</span></span><br><span class=\"line\">&#123;        </span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> imagePath = <span class=\"string\">@&quot;&#123;圖片位置&#125;&quot;</span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Qrcode</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            InitializeComponent();</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.pictureBox1.Image = GetQRCodeByZXingNet(<span class=\"string\">&quot;https://dotblogs.com.tw/neil_coding&quot;</span>, <span class=\"number\">200</span>, <span class=\"number\">200</span>);</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">&quot;1122222222222&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> Bitmap <span class=\"title\">GetQRCodeByZXingNet</span>(<span class=\"params\">String strMessage, Int32 width, Int32 height</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Bitmap result = <span class=\"literal\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">try</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                BarcodeWriter barCodeWriter = <span class=\"keyword\">new</span> BarcodeWriter();</span><br><span class=\"line\">                barCodeWriter.Format = BarcodeFormat.QR_CODE; <span class=\"comment\">//barcode格式</span></span><br><span class=\"line\">                barCodeWriter.Options.Hints.Add(EncodeHintType.CHARACTER_SET, <span class=\"string\">&quot;UTF-8&quot;</span>);  <span class=\"comment\">//編碼字元utf-8</span></span><br><span class=\"line\">                barCodeWriter.Options.Hints.Add(EncodeHintType.ERROR_CORRECTION, ZXing.QrCode.Internal.ErrorCorrectionLevel.H); <span class=\"comment\">//錯誤校正等級</span></span><br><span class=\"line\">                barCodeWriter.Options.Height = height; <span class=\"comment\">//高度</span></span><br><span class=\"line\">                barCodeWriter.Options.Width = width; <span class=\"comment\">//寬度</span></span><br><span class=\"line\">                barCodeWriter.Options.Margin = <span class=\"number\">0</span>; <span class=\"comment\">//外邊距</span></span><br><span class=\"line\">                ZXing.Common.BitMatrix bm = barCodeWriter.Encode(strMessage); <span class=\"comment\">//將訊息寫入</span></span><br><span class=\"line\">                result = barCodeWriter.Write(bm);</span><br><span class=\"line\">                </span><br><span class=\"line\">                Bitmap overlay = <span class=\"keyword\">new</span> Bitmap(imagePath); <span class=\"comment\">//載入圖片</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"built_in\">int</span> deltaHeigth = result.Height - overlay.Height; <span class=\"comment\">//圖片y</span></span><br><span class=\"line\">                <span class=\"built_in\">int</span> deltaWidth = result.Width - overlay.Width; <span class=\"comment\">//圖片x</span></span><br><span class=\"line\"></span><br><span class=\"line\">                Graphics g = Graphics.FromImage(result); <span class=\"comment\">//圖型</span></span><br><span class=\"line\">                g.DrawImage(overlay, <span class=\"keyword\">new</span> Point(deltaWidth / <span class=\"number\">2</span>, deltaHeigth / <span class=\"number\">2</span>)); <span class=\"comment\">//畫出圖片</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span> (Exception ex)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                MessageBox.Show(ex.ToString());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Result\"><a href=\"#Result\" class=\"headerlink\" title=\"Result\"></a>Result</h1><p><img src=\"/../image/c_/qrcodemake_2.png\" alt=\"result\" title=\"result\"></p>\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><p>利用Zxing程式庫就可以製作出客製化的Qrcode，讓使用者去掃描</p>\n","categories":["C#"],"tags":["C#","QrCode","winform","Zxing"]},{"title":"C# 抓取中央氣象API","url":"/c_/C-getweatherapi/","content":"<p>介紹如何使用C#抓取API</p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>我們要出去玩時，都會出門前會看一下今天天氣，這時我們就會去APP看今天天氣，突然有個想法，想自己寫一個天氣網頁</p>\n<span id=\"more\"></span>\n<h1 id=\"流程圖\"><a href=\"#流程圖\" class=\"headerlink\" title=\"流程圖\"></a>流程圖</h1><p><img src=\"/../image/c_/getweatherapi_1.png\" alt=\"result\" title=\"result\"></p>\n<p>1.接收client需求</p>\n<p>2.發送request去跟API要資料</p>\n<p>3.處理respone裡面的資料</p>\n<p>4.呈現資料給client</p>\n<h1 id=\"前置作業\"><a href=\"#前置作業\" class=\"headerlink\" title=\"前置作業\"></a>前置作業</h1><p>首先我們要先去下載C#處理json格式的程式庫</p>\n<p>json net</p>\n<p>官網:<a href=\"https://www.newtonsoft.com/json\">https://www.newtonsoft.com/json</a></p>\n<p>我們也可以在 micsoft visual studio 裡面的Nuget下載</p>\n<p><img src=\"/../image/c_/getweatherapi_2.png\" alt=\"result\" title=\"result\"></p>\n<p>中央氣象局API:<a href=\"https://opendata.cwb.gov.tw/dist/opendata-swagger.html\">https://opendata.cwb.gov.tw/dist/opendata-swagger.html</a></p>\n<p>使用一般天氣預報-今明 36 小時天氣預報API當作範例</p>\n<p>API:<a href=\"https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?locationName=%E6%96%B0%E5%8C%97%E5%B8%82&Authorization=CWB-69332FDE-EB99-479F-8433-DA88413FE5BB\">https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?Authorization=</a>授權碼</p>\n<p>中央氣象局開放平台:<a href=\"https://opendata.cwb.gov.tw/index\">https://opendata.cwb.gov.tw/index</a></p>\n<p>1.會員登入</p>\n<p>2.取得API授權碼</p>\n<p><img src=\"/../image/c_/getweatherapi_3.png\" alt=\"result\" title=\"result\"></p>\n<p>前置作業處理完後就來撰寫我們的程式碼</p>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><h2 id=\"首先要先引入JSON程式庫和HTTP請求程式庫和讀取資料流的程式庫\"><a href=\"#首先要先引入JSON程式庫和HTTP請求程式庫和讀取資料流的程式庫\" class=\"headerlink\" title=\"首先要先引入JSON程式庫和HTTP請求程式庫和讀取資料流的程式庫\"></a>首先要先引入JSON程式庫和HTTP請求程式庫和讀取資料流的程式庫</h2><figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Newtonsoft.Json;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Newtonsoft.Json.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Net;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.IO;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"再來我們要寫一個webrequet的請求\"><a href=\"#再來我們要寫一個webrequet的請求\" class=\"headerlink\" title=\"再來我們要寫一個webrequet的請求\"></a>再來我們要寫一個webrequet的請求</h2><figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">public</span> JArray <span class=\"title\">getJson</span>(<span class=\"params\"><span class=\"built_in\">string</span> uri</span>)</span></span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">        HttpWebRequest req = (HttpWebRequest)WebRequest.Create(uri); <span class=\"comment\">//request請求</span></span><br><span class=\"line\">        req.Timeout = <span class=\"number\">10000</span>; <span class=\"comment\">//request逾時時間</span></span><br><span class=\"line\">        req.Method = <span class=\"string\">&quot;GET&quot;</span>; <span class=\"comment\">//request方式</span></span><br><span class=\"line\">        HttpWebResponse respone = (HttpWebResponse)req.GetResponse(); <span class=\"comment\">//接收respone</span></span><br><span class=\"line\">        StreamReader streamReader = <span class=\"keyword\">new</span> StreamReader(respone.GetResponseStream(), Encoding.UTF8); <span class=\"comment\">//讀取respone資料</span></span><br><span class=\"line\">        <span class=\"built_in\">string</span> result = streamReader.ReadToEnd(); <span class=\"comment\">//讀取到最後一行</span></span><br><span class=\"line\">        respone.Close();</span><br><span class=\"line\">        streamReader.Close();</span><br><span class=\"line\">        JObject jsondata = JsonConvert.DeserializeObject&lt;JObject&gt;(result); <span class=\"comment\">//將資料轉為json物件</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (JArray)jsondata[<span class=\"string\">&quot;records&quot;</span>][<span class=\"string\">&quot;location&quot;</span>]; <span class=\"comment\">//回傳json陣列</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"接著呼叫API傳回資料，c-處理資料資料格式為json\"><a href=\"#接著呼叫API傳回資料，c-處理資料資料格式為json\" class=\"headerlink\" title=\"接著呼叫API傳回資料，c#處理資料資料格式為json\"></a>接著呼叫API傳回資料，c#處理資料資料格式為json</h2><h2 id=\"json-online-editor-https-jsoneditoronline-org\"><a href=\"#json-online-editor-https-jsoneditoronline-org\" class=\"headerlink\" title=\"json online editor:https://jsoneditoronline.org/\"></a>json online editor:<a href=\"https://jsoneditoronline.org/\">https://jsoneditoronline.org/</a></h2><h2 style=\"color:red\">回傳新北市json資料</h2>\n\n<p><img src=\"/../image/c_/getweatherapi_4.png\" alt=\"result\" title=\"result\"></p>\n<h2 style=\"color:red\">用json online editor 觀看JSON資料</h2>\n\n<p><img src=\"/../image/c_/getweatherapi_5.png\" alt=\"result\" title=\"result\"></p>\n<h2 style=\"color:red\">C#程式處理資料</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//呼叫API</span></span><br><span class=\"line\">    JArray jsondata=getJson(<span class=\"string\">&quot;https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001?&amp;Authorization=&#123;API授權碼&#125;&quot;</span>);</span><br><span class=\"line\">       </span><br><span class=\"line\">     <span class=\"keyword\">foreach</span>(JObject  data <span class=\"keyword\">in</span> jsondata)</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">          <span class=\"built_in\">string</span> loactionname = (<span class=\"built_in\">string</span>)data[<span class=\"string\">&quot;locationName&quot;</span>]; <span class=\"comment\">//地名</span></span><br><span class=\"line\">          <span class=\"built_in\">string</span> weathdescrible = (<span class=\"built_in\">string</span>)data[<span class=\"string\">&quot;weatherElement&quot;</span>][<span class=\"number\">0</span>][<span class=\"string\">&quot;time&quot;</span>][<span class=\"number\">0</span>][<span class=\"string\">&quot;parameter&quot;</span>][<span class=\"string\">&quot;parameterName&quot;</span>]; <span class=\"comment\">//天氣狀況</span></span><br><span class=\"line\">          <span class=\"built_in\">string</span> pop = (<span class=\"built_in\">string</span>)data[<span class=\"string\">&quot;weatherElement&quot;</span>][<span class=\"number\">1</span>][<span class=\"string\">&quot;time&quot;</span>][<span class=\"number\">0</span>][<span class=\"string\">&quot;parameter&quot;</span>][<span class=\"string\">&quot;parameterName&quot;</span>];  <span class=\"comment\">//降雨機率</span></span><br><span class=\"line\">          <span class=\"built_in\">string</span> mintemperature = (<span class=\"built_in\">string</span>)data[<span class=\"string\">&quot;weatherElement&quot;</span>][<span class=\"number\">2</span>][<span class=\"string\">&quot;time&quot;</span>][<span class=\"number\">0</span>][<span class=\"string\">&quot;parameter&quot;</span>][<span class=\"string\">&quot;parameterName&quot;</span>]; <span class=\"comment\">//最低溫度</span></span><br><span class=\"line\">          <span class=\"built_in\">string</span> maxtemperature = (<span class=\"built_in\">string</span>)data[<span class=\"string\">&quot;weatherElement&quot;</span>][<span class=\"number\">4</span>][<span class=\"string\">&quot;time&quot;</span>][<span class=\"number\">0</span>][<span class=\"string\">&quot;parameter&quot;</span>][<span class=\"string\">&quot;parameterName&quot;</span>]; <span class=\"comment\">//最高溫度</span></span><br><span class=\"line\">          Console.WriteLine(loactionname + <span class=\"string\">&quot; 天氣:&quot;</span> + weathdescrible + <span class=\"string\">&quot; 溫度:&quot;</span> + mintemperature + <span class=\"string\">&quot;°c-&quot;</span> + maxtemperature + <span class=\"string\">&quot;°c 降雨機率:&quot;</span> + pop + <span class=\"string\">&quot;%&quot;</span>);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     Console.ReadLine();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"result\"><a href=\"#result\" class=\"headerlink\" title=\"result\"></a>result</h1><p><img src=\"/../image/c_/getweatherapi_6.png\" alt=\"result\" title=\"result\"></p>\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><p>利用中央氣象局的免費api我們就可以自己製作自己的天氣網頁或是天氣app，以後就不用看新聞的天氣預報。</p>\n","categories":["C#"],"tags":["C#","weather","api","json"]},{"title":"Thread Pooling(執行緒池)","url":"/c_/threadpool/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>線程池是在多線程應用程式初始化期間創建線程集合的過程，然後在需要時將這些線程重用於新任務，而不是創建新線程。然後，每個進程都有一些固定數量的線程，具體取決於可用的內存量，這些線程是應用程式的需要，但我們可以自由地增加線程數。池中的每個線程都有一個特定的給定任務。線程返回到池，並在給定任務完成後等待下一個分配。</p>\n<p>通常，當我們創建了許多線程來執行許多任務時，線程池是必需的，在此佇列中組織。通常，我們的任務比線程多。一旦線程完成其任務，它將從佇列中請求下一個任務，直到所有任務都已完成。然後，線程可以終止或休眠，直到有新任務可用。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"架構圖\"><a href=\"#架構圖\" class=\"headerlink\" title=\"架構圖\"></a>架構圖</h1><p><img src=\"/../image/c_/threadpool.png\" alt=\"result\" title=\"result\"></p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><h2 style=\"color:red\">thread 和 threadpool區別</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Threading;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Example</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Thread th = <span class=\"keyword\">new</span> Thread(thread);</span><br><span class=\"line\">            th.Start();</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ThreadPool.QueueUserWorkItem(t =&gt; threadpool());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Console.ReadLine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">threadpool</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">&quot;ThreadPool:&quot;</span>+Thread.CurrentThread.ManagedThreadId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">thread</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">&quot;Thread:&quot;</span>+Thread.CurrentThread.ManagedThreadId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"結果\"><a href=\"#結果\" class=\"headerlink\" title=\"結果\"></a>結果</h1><p><img src=\"/../image/c_/threadpool_2.PNG\" alt=\"result\" title=\"result\"></p>\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><p>Thread和Threadpool 的區別：</p>\n<p>1.區別：DeadThread 10個線程，但是沒有被GC回收，每次開啟都需要消耗一個線程。</p>\n<p>2.threadpool解決同樣的問題，沒有死線程，而且都是預設初始化的</p>\n","categories":["C#"],"tags":["C#","Thread"]},{"title":"圖解 CSS Flex排版介紹","url":"/css/cssflex/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>網頁排版分為Flex、Grid還有早期的float，這篇我們要來介紹Flex的排版，Flex中分為外容器和內元件，<br>下圖解釋兩種的差異</p>\n<p><img src=\"/../image/css/flex/cssflex.png\" alt=\"flexcontainer\" title=\"flexcontainer\"></p>\n<span id=\"more\"></span>\n\n<h1 id=\"Flex布局是甚麼\"><a href=\"#Flex布局是甚麼\" class=\"headerlink\" title=\"Flex布局是甚麼\"></a>Flex布局是甚麼</h1><p>Flex(Flexible Box)縮寫，意為彈性布局，為盒子提供最大的靈活性，任何一個容器都可使用Flex布局<br>如下例子</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.box&#123;</span><br><span class=\"line\">  display: flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>也可使用行內元素</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.box&#123;</span><br><span class=\"line\">  display: inline-flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 style=\"color:red\">注意:設為flex布局時，float和clear及vertical-align屬性將失效</h3>\n\n<h1 id=\"flex-布局屬性\"><a href=\"#flex-布局屬性\" class=\"headerlink\" title=\"flex 布局屬性\"></a>flex 布局屬性</h1><h2 id=\"外容器\"><a href=\"#外容器\" class=\"headerlink\" title=\"外容器\"></a>外容器</h2><ul>\n<li>display</li>\n<li>flex-flow<ul>\n<li>flex-direction</li>\n<li>flex-wrap</li>\n</ul>\n</li>\n<li>justify-content</li>\n<li>align-items</li>\n</ul>\n<h2 id=\"內元件\"><a href=\"#內元件\" class=\"headerlink\" title=\"內元件\"></a>內元件</h2><ul>\n<li>flex<ul>\n<li>flex-grow</li>\n<li>flex-shrink</li>\n<li>flex-basis</li>\n</ul>\n</li>\n<li>order</li>\n<li>align-self</li>\n</ul>\n<h1 id=\"外容器介紹\"><a href=\"#外容器介紹\" class=\"headerlink\" title=\"外容器介紹\"></a>外容器介紹</h1><h3 id=\"display\"><a href=\"#display\" class=\"headerlink\" title=\"display\"></a>display</h3><p>首先要用flex布局之前，要把display設為flex或inline-flex。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.flex-container &#123;</span><br><span class=\"line\">  display: flex | inline-flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"flex-direction\"><a href=\"#flex-direction\" class=\"headerlink\" title=\"flex-direction\"></a>flex-direction</h3><p>Flex 決定內元件排序方向的重要屬性，這也直接影響了 flex 的軸線 (主軸及交錯軸)，flex 中的對齊屬性都與此有很大的相關聯，下圖中是預設狀態的軸線方向。</p>\n<p><img src=\"/../image/css/flex/flex-axis.png\" alt=\"flex_direction\" title=\"flex_direction\"></p>\n<p>這個屬性決定了flex主軸的方向</p>\n<p><img src=\"/../image/css/flex/flex_direction.png\" alt=\"flex_direction\" title=\"flex_direction\"></p>\n<p>圖上排列</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.flex-container&#123;</span><br><span class=\"line\">  flex-direction:column-reverse | column | row | row-reverse;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">row(默認值): 主軸水平排列，起點由左往右</span><br><span class=\"line\"></span><br><span class=\"line\">row-reverse: 主軸水平排列，起點由右向左</span><br><span class=\"line\"></span><br><span class=\"line\">column: 主軸垂直排列，起點由上到下</span><br><span class=\"line\"></span><br><span class=\"line\">row-reverse: 主軸垂直排列，起點由下到上</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"flex-wrap\"><a href=\"#flex-wrap\" class=\"headerlink\" title=\"flex-wrap\"></a>flex-wrap</h3><p>默認情況下當內容物超過主體寬度時並不會換行，要讓內容物換行時須定義flex-wrap並把屬性值設定為wrap</p>\n<p><img src=\"/../image/css/flex/flex-wrap.png\" alt=\"flex-wrap\" title=\"flex-wrap\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.flex-container&#123;</span><br><span class=\"line\">  flex-wrap:nowrap | wrap | wrap-reverse;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>nowrap(默認狀態)<br><img src=\"/../image/css/flex/flex_wrap_nowrap.png\" alt=\"flex-nowrap\" title=\"flex-nowrap\"></p>\n<p>wrap(內容物換行)<br><img src=\"/../image/css/flex/flex_wrap_wrap.jpg\" alt=\"flex-wrap\" title=\"flex-wrap\"></p>\n<p>wrap-reverse(內容物換行，第一行再下方)<br><img src=\"/../image/css/flex/flex_wrap_reverse.jpg\" alt=\"flex-wrap\" title=\"flex-wrap\"></p>\n<h3 id=\"flex-flow\"><a href=\"#flex-flow\" class=\"headerlink\" title=\"flex-flow\"></a>flex-flow</h3><p>flex-flow為flex-direction和flex-wrap的簡寫，默認值為row nowrap</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.flex-container&#123;</span><br><span class=\"line\">  flex-flow:&lt;flex-direction&gt; &lt;flex-wrap&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"justify-content\"><a href=\"#justify-content\" class=\"headerlink\" title=\"justify-content\"></a>justify-content</h3><p>主軸對齊方式</p>\n<p><img src=\"/../image/css/flex/flex_justify_content.png\" alt=\"justify-content\" title=\"justify-content\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.flex-container&#123;</span><br><span class=\"line\">  justify-content:flex-start | flex-end | center | space-between | space-around;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">flex-start(默認值):主軸起點對齊</span><br><span class=\"line\"></span><br><span class=\"line\">flex-end:主軸終點對齊</span><br><span class=\"line\"></span><br><span class=\"line\">center:主軸的中心點對齊</span><br><span class=\"line\"></span><br><span class=\"line\">space-between:兩端靠齊，項目之間的間隔相等</span><br><span class=\"line\"></span><br><span class=\"line\">space-around:項目之間的間隔相等，中間的項目間隔由於是兩個項目間隔合再一起會大一倍</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"align-items\"><a href=\"#align-items\" class=\"headerlink\" title=\"align-items\"></a>align-items</h3><p>交錯軸對齊方式</p>\n<p><img src=\"/../image/css/flex/flex_align_items.png\" alt=\"align_items\" title=\"align_items\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.flex-container&#123;</span><br><span class=\"line\">  align-items:flex-start | flex-end | center | stretch | baseline;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">stretch(默認):如果項目未設定高度或auto，將占滿整個容器的高度</span><br><span class=\"line\"></span><br><span class=\"line\">flex-start: 交錯軸的起點對齊</span><br><span class=\"line\"></span><br><span class=\"line\">flex-end: 交錯軸的終點對齊</span><br><span class=\"line\"></span><br><span class=\"line\">center: 交錯軸的中心點對齊</span><br><span class=\"line\"></span><br><span class=\"line\">baseline:項目的第一行文字設為基礎線對齊</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"align-content\"><a href=\"#align-content\" class=\"headerlink\" title=\"align-content\"></a>align-content</h3><p>多根軸線的對齊方式，當只有一個軸線時，該屬性不起作用</p>\n<p><img src=\"/../image/css/flex/flex_align_content.png\" alt=\"align-content\" title=\"align-content\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.flex-container&#123;</span><br><span class=\"line\">  align-content:flex-start | flex-end | center | stretch | space-between | space-around; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">stretch（默認值）：軸線佔滿整個交錯軸</span><br><span class=\"line\"></span><br><span class=\"line\">flex-start: 交錯軸的起點對齊</span><br><span class=\"line\"></span><br><span class=\"line\">flex-end: 交錯軸的終點對齊</span><br><span class=\"line\"></span><br><span class=\"line\">center: 交錯軸中心點對齊</span><br><span class=\"line\"></span><br><span class=\"line\">space-between:與交錯軸兩端對齊，軸線之間的間隔平均分布</span><br><span class=\"line\"></span><br><span class=\"line\">space-around:軸線兩側的間隔相等，軸線中間的間隔比軸線與邊的間隔大一倍</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"內元件介紹\"><a href=\"#內元件介紹\" class=\"headerlink\" title=\"內元件介紹\"></a>內元件介紹</h1><h3 id=\"flex\"><a href=\"#flex\" class=\"headerlink\" title=\"flex\"></a>flex</h3><p>flex為縮寫，裡面包合flex-grow、flex-shrink、flex-basis，如果只設定一個則是flex-grow。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.flex-item&#123;</span><br><span class=\"line\">  flex:&lt;flex-grow&gt; &lt;flex-shrink&gt; &lt;flex-basis&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>flex-grow:項目的伸展性，是一個數值，當空間分配還有剩餘空間時，預設值為0，當伸展性為0時。則不會縮放</li>\n</ul>\n<p><img src=\"/../image/css/flex/flex-grow.png\" alt=\"flex-grow\" title=\"flex-grow\"></p>\n<ul>\n<li>flex-shrink:項目的收縮性，是一個數值，當空間分配還有剩餘空間時，預設值為1，當收縮性為0時。則不會縮放</li>\n</ul>\n<p><img src=\"/../image/css/flex/flex-shrink.jpg\" alt=\"flex-shrink\" title=\"flex-shrink\"></p>\n<ul>\n<li>flex-basis:項目的基準值，可使用不同單位</li>\n</ul>\n<h3 id=\"order\"><a href=\"#order\" class=\"headerlink\" title=\"order\"></a>order</h3><p>項目的排列順序，數值越小，排列越前面，默認為0</p>\n<p><img src=\"/../image/css/flex/flex_order.png\" alt=\"flex_order\" title=\"flex_order\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.flex-item&#123;</span><br><span class=\"line\">  order: &lt;integer&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"align-self\"><a href=\"#align-self\" class=\"headerlink\" title=\"align-self\"></a>align-self</h3><p>允許單個項目與其他項目不一樣的對齊方式，可覆蓋align-items的屬性，預設值為auto，自動繼承父元素的align-items</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.flex-item&#123;</span><br><span class=\"line\">  align-item:auto | flex-start | flex-end | center | stretch | baseline;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../image/css/flex/flex-align-item.png\" alt=\"flex_order\" title=\"flex_order\"></p>\n<p>該屬性6個值，除了auto，其他值都與align-items對齊方式一樣</p>\n<h1 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h1><p><a href=\"https://www.runoob.com/w3cnote/flex-grammar.html\">https://www.runoob.com/w3cnote/flex-grammar.html</a></p>\n<p><a href=\"https://www.casper.tw/css/2017/07/21/css-flex/\">https://www.casper.tw/css/2017/07/21/css-flex/</a></p>\n","categories":["Css"],"tags":["Css","Flex"]},{"title":"Css linear-gradient","url":"/css/csslinear-gradient/","content":"<h1 id=\"漸層-background-linear-gradient\"><a href=\"#漸層-background-linear-gradient\" class=\"headerlink\" title=\"漸層 background linear-gradient\"></a>漸層 background linear-gradient</h1><p>css background:linear-gradient(direction, color-stop1, color-stop2, …);</p>\n<p>direction角度 可設為 to top,to left,to right,to left 或是 (-∞~∞deg) 預設是由0deg 由下而上</p>\n<span id=\"more\"></span>\n\n<h2 id=\"範例一\"><a href=\"#範例一\" class=\"headerlink\" title=\"範例一\"></a>範例一</h2><div class=\"exmaple1\">&nbsp;</div>\n</br>\n\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">background</span>:<span class=\"built_in\">linear-gradient</span>(to top,red,yellow);</span><br></pre></td></tr></table></figure>\n<p>linear-gradient  有一個特性為 repeat-linear-gradient 重複貼上直到填滿為止</p>\n<h2 id=\"範例二\"><a href=\"#範例二\" class=\"headerlink\" title=\"範例二\"></a>範例二</h2><div class=\"exmaple2_1\">&nbsp;</div>\n</br>\n<div class=\"exmaple2_2\">&nbsp;</div>\n\n\n</br>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.exmaple2_1</span>  <span class=\"comment\">/*first style */</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"attribute\">width</span>:<span class=\"number\">100%</span>;</span><br><span class=\"line\"><span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>:<span class=\"built_in\">repeating-linear-gradient</span>(<span class=\"number\">90deg</span>,black <span class=\"number\">0%</span>,black <span class=\"number\">5%</span>,transparent <span class=\"number\">5%</span>,transparent <span class=\"number\">10%</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.exmaple2_2</span> <span class=\"comment\">/*second style */</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"attribute\">width</span>:<span class=\"number\">100%</span>;</span><br><span class=\"line\"><span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>:<span class=\"built_in\">repeating-linear-gradient</span>(<span class=\"number\">135deg</span>,red <span class=\"number\">0%</span>,red <span class=\"number\">5%</span>,transparent <span class=\"number\">5%</span>,transparent <span class=\"number\">10%</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>結合上面方法做出特殊圖案</p>\n<h2 id=\"範例三\"><a href=\"#範例三\" class=\"headerlink\" title=\"範例三\"></a>範例三</h2><div id=\"exmaple3\">&nbsp;</div>\n</br>\n\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#exmaple3</span> &#123;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">300px</span>;</span><br><span class=\"line\">   <span class=\"attribute\">background</span>:<span class=\"built_in\">linear-gradient</span>(<span class=\"number\">45deg</span>,<span class=\"number\">#ff8000</span> <span class=\"number\">50%</span>,transparent <span class=\"number\">50%</span>),<span class=\"built_in\">linear-gradient</span>(<span class=\"number\">135deg</span>,<span class=\"number\">#f9ff21</span> <span class=\"number\">100%</span>,transparent <span class=\"number\">100%</span>),<span class=\"built_in\">linear-gradient</span>(<span class=\"number\">135deg</span>, <span class=\"number\">#12e6c8</span> <span class=\"number\">50%</span>, transparent <span class=\"number\">50%</span>) <span class=\"number\">100%</span> <span class=\"number\">0%</span>,<span class=\"built_in\">linear-gradient</span>(<span class=\"number\">45deg</span>, <span class=\"number\">#0000ff</span> <span class=\"number\">100%</span>, transparent <span class=\"number\">100%</span>) <span class=\"number\">100%</span> <span class=\"number\">0%</span>,<span class=\"built_in\">linear-gradient</span>(<span class=\"number\">135deg</span>,<span class=\"number\">#dcb5ff</span> <span class=\"number\">50%</span>,transparent <span class=\"number\">50%</span>) <span class=\"number\">0%</span> <span class=\"number\">100%</span>,<span class=\"built_in\">linear-gradient</span>(<span class=\"number\">135deg</span>,<span class=\"number\">#ff5da2</span> <span class=\"number\">100%</span>,transparent <span class=\"number\">100%</span>) <span class=\"number\">0%</span> <span class=\"number\">100%</span>,<span class=\"built_in\">linear-gradient</span>(<span class=\"number\">45deg</span>, <span class=\"number\">#8b104e</span> <span class=\"number\">50%</span>, transparent <span class=\"number\">50%</span>) <span class=\"number\">100%</span> <span class=\"number\">100%</span>,<span class=\"built_in\">linear-gradient</span>(<span class=\"number\">135deg</span>, <span class=\"number\">#77529e</span> <span class=\"number\">100%</span>, transparent <span class=\"number\">100%</span>) <span class=\"number\">100%</span> <span class=\"number\">100%</span>;</span><br><span class=\"line\">   <span class=\"attribute\">background-size</span>:<span class=\"number\">50%</span> <span class=\"number\">50%</span>;</span><br><span class=\"line\">   <span class=\"attribute\">background-repeat</span>:no-repeat;</span><br><span class=\"line\">   <span class=\"attribute\">border-radius</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">   <span class=\"attribute\">border</span>:<span class=\"number\">10px</span> solid <span class=\"number\">#ff1f5a</span>;</span><br><span class=\"line\">   <span class=\"attribute\">box-sizing</span>:border-box;</span><br><span class=\"line\">   <span class=\"attribute\">transition</span>:<span class=\"number\">0.5s</span> all;</span><br><span class=\"line\">   <span class=\"attribute\">box-shadow</span>:<span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">10px</span> gray;</span><br><span class=\"line\">   <span class=\"attribute\">position</span>:relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#exmaple3</span><span class=\"selector-pseudo\">::after</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>:<span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>:absolute;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>:block;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#ff1f5a</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">10%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>:<span class=\"number\">10%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>:<span class=\"built_in\">translate</span>(-<span class=\"number\">50%</span>,-<span class=\"number\">50%</span>);</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>:inset <span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">5px</span> white;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#exmaple3</span><span class=\"selector-pseudo\">:hover</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>:<span class=\"built_in\">rotate</span>(<span class=\"number\">360deg</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<style>\n.exmaple1 {\n   background:linear-gradient(to top,red,yellow);\n}\n.exmaple2_1  /*first style */\n{\nwidth:100%;\nheight:100px;\n  background:repeating-linear-gradient(90deg,black 0%,black 5%,transparent 5%,transparent 10%);\n}\n.exmaple2_2 /*second style */\n{\nwidth:100%;\nheight:100px;\n  background:repeating-linear-gradient(135deg,red 0%,red 5%,transparent 5%,transparent 10%);\n}\n#exmaple3 {  \n    height: 300px;\nwidth:300px;\n   background:linear-gradient(45deg,#ff8000 50%,transparent 50%),linear-gradient(135deg,#f9ff21 100%,transparent 100%),linear-gradient(135deg, #12e6c8 50%, transparent 50%) 100% 0%,linear-gradient(45deg, #0000ff 100%, transparent 100%) 100% 0%,linear-gradient(135deg,#dcb5ff 50%,transparent 50%) 0% 100%,linear-gradient(135deg,#ff5da2 100%,transparent 100%) 0% 100%,linear-gradient(45deg, #8b104e 50%, transparent 50%) 100% 100%,linear-gradient(135deg, #77529e 100%, transparent 100%) 100% 100%;\n   background-size:50% 50%;\n   background-repeat:no-repeat;\n   border-radius:50%;\n   border:10px solid #ff1f5a;\n   box-sizing:border-box;\n   transition:0.5s all;\n   box-shadow:0px 0px 10px gray;\n   position:relative;\n}\n#exmaple3::after\n{\n  content:'';\n  position:absolute;\n  display:block;\n  border:1px solid #ff1f5a;\n  width:10%;\n  height:10%;\n  left:50%;\n  top:50%;\n  border-radius:50%;\n  transform:translate(-50%,-50%);\n  box-shadow:inset 0px 0px 5px white;\n}\n#exmaple3:hover\n{\n  transform:rotate(360deg);\n}\n</style>","categories":["Css"],"tags":["Css","linear-gradient"]},{"title":"設計模式 Design Pattern (四) 建造者模式(Builder Pattern)","url":"/designpattern/designpattern-builder/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>甚麼是創建者模式，將一個複雜對象的構建與他的表示分離，使得同樣的構建過程可以創建不同的表示。 一步一步創建一個複雜的對象，它允許用戶只通過指定複雜對象的類型和內容就可以建構它們，用戶不需要知道內部的具體建構細節。<br>建造者模式客戶端返回的不是一個簡單的產品，而是一個由多個部件組成的複雜產品。</p>\n<span id=\"more\"></span>\n\n\n<h1 id=\"組成\"><a href=\"#組成\" class=\"headerlink\" title=\"組成\"></a>組成</h1><p> 1.抽象建造者(Builder)：為創建具體產品的具體建造者提供接口<br> 2.具體建造者(ConcreteBuilder)：建造具體產品<br> 3.指揮者(Director)：調用Builder接口來創建產品對象<br> 4.產品角色(Product)：具體產品</p>\n<h1 id=\"實作創建者模式\"><a href=\"#實作創建者模式\" class=\"headerlink\" title=\"實作創建者模式\"></a>實作創建者模式</h1><h1 id=\"程式碼呈現\"><a href=\"#程式碼呈現\" class=\"headerlink\" title=\"程式碼呈現\"></a>程式碼呈現</h1><h2 style=\"color:red\">自動測試class</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">sealed</span> <span class=\"keyword\">class</span> <span class=\"title\">AutoTest</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;<span class=\"built_in\">string</span>&gt; allCases = <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">string</span>&gt;()</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addClass</span>(<span class=\"params\"><span class=\"built_in\">string</span> type</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        allCases.Add(type);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">TestAll</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">&quot;============ 開始執行測驗用例 ============&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> allCases)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Console.WriteLine(item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">&quot;============ 執行測驗用例結束 ============&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 style=\"color:red\">Builder class</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title\">Builder</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span>  AutoTest autoTest = <span class=\"keyword\">new</span> AutoTest();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">BuildTestCaseA</span>()</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">BuildTestCaseB</span>()</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"keyword\">public</span>  AutoTest <span class=\"title\">GetAutoTest</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> autoTest;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">IntelTestCaseBuilder</span> : <span class=\"title\">Builder</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">BuildTestCaseA</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        autoTest.addClass(<span class=\"string\">&quot;Intel測試A&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">BuildTestCaseB</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        autoTest.addClass(<span class=\"string\">&quot;Intel測試B&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">LenovoTestCaseBuilder</span> : <span class=\"title\">Builder</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">BuildTestCaseA</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        autoTest.addClass(<span class=\"string\">&quot;Lenovo測試A&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">BuildTestCaseB</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        autoTest.addClass(<span class=\"string\">&quot;Lenovo測試B&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 style=\"color:red\">Director class</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Director</span> &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Construct</span>(<span class=\"params\">Builder builder</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        builder.BuildTestCaseA();</span><br><span class=\"line\">        builder.BuildTestCaseB();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 style=\"color:red\">產生兩個品牌測試</h3>\n\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    IntelTestCaseBuilder intelbuilder = <span class=\"keyword\">new</span> IntelTestCaseBuilder();</span><br><span class=\"line\">    LenovoTestCaseBuilder lenovobuilder = <span class=\"keyword\">new</span> LenovoTestCaseBuilder();</span><br><span class=\"line\">    Director director = <span class=\"keyword\">new</span> Director();</span><br><span class=\"line\">    director.Construct(intelbuilder);</span><br><span class=\"line\">    director.Construct(lenovobuilder);</span><br><span class=\"line\">    AutoTest autoTest = intelbuilder.GetAutoTest();</span><br><span class=\"line\">    AutoTest autoTest1 = lenovobuilder.GetAutoTest()</span><br><span class=\"line\">    autoTest.TestAll();</span><br><span class=\"line\">    autoTest1.TestAll();</span><br><span class=\"line\">    Console.ReadLine();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 style=\"color:red\">顯示結果</h3>\n\n<p><img src=\"/../image/designpattern/designpattern_builder.PNG\" alt=\"result\" title=\"result\"></p>\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><h2 id=\"優點：\"><a href=\"#優點：\" class=\"headerlink\" title=\"優點：\"></a>優點：</h2><p>1.建造者獨立，易擴展。</p>\n<p>2.便於控制細節風險。</p>\n<h2 id=\"缺點：\"><a href=\"#缺點：\" class=\"headerlink\" title=\"缺點：\"></a>缺點：</h2><p>​1. 產品必須有共同點，範圍有限制。</p>\n<p>​2. 如內部變化複雜，會有很多的建造類。</p>\n","categories":["C#","Design Pattern"],"tags":["C#","Design Pattern","oop","建造者模式","創建模式"]},{"title":"SOLID 原則","url":"/designpattern/solid/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>SOLID 是5大原則的簡稱，分別為：<br>S &#x3D; Single-responsibility principle (SRP) &#x3D; 單一職責原則<br>O &#x3D; Open–closed principle (OCP) &#x3D; 開放封閉原則<br>L &#x3D;Liskov substitution principle (LSP) &#x3D; 里氏替換原則<br>I &#x3D; Interface segregation principle (ISP) &#x3D; 介面隔離原則<br>D &#x3D; Dependency inversion principle (DIP) &#x3D; 依賴反向原則</p>\n<span id=\"more\"></span>\n<h1 id=\"單一職責原則-SRP\"><a href=\"#單一職責原則-SRP\" class=\"headerlink\" title=\"單一職責原則(SRP)\"></a>單一職責原則(SRP)</h1><p>所謂單一職責就是一個類別只負責做同類型的事情。</p>\n<blockquote>\n<p>例:車子控制模組只負責控制車子的功能項目，如前進、後退、左右、煞車、開啟冷氣….等等，並不會去改變車子的大小或是顏色</p>\n</blockquote>\n<h1 id=\"開放封閉原則-OCP\"><a href=\"#開放封閉原則-OCP\" class=\"headerlink\" title=\"開放封閉原則(OCP)\"></a>開放封閉原則(OCP)</h1><p>物件導向最重要的就是開放(擴充)封閉(修改)原則，當軟體程式裡的耦合性太高時，就會發生改A錯B改B錯A的情況，如何避免這種事情發生，就要遵守開放封閉原則，降低程式之間的耦合性，當擴充功能時不會去動到繼承的父程式或是使用到的函示庫的程式，就可避免牽一髮動全身的情況。</p>\n<blockquote>\n<p>例:小明要去一家水果店買水果，原本水果店只賣蘋果、香蕉、西瓜，但小明想買草莓時，這時就會有需要進草莓(擴充)來賣的需求，在不修改賣其他的蘋果、香蕉、西瓜(封閉修改)的功能下。</p>\n</blockquote>\n<h1 id=\"里氏替換原則-LSP\"><a href=\"#里氏替換原則-LSP\" class=\"headerlink\" title=\"里氏替換原則(LSP)\"></a>里氏替換原則(LSP)</h1><p>在一個系統中的物件，在不改變程式的正確性的前提下被它的子類別所替換的概念。</p>\n<blockquote>\n<p>例:父類別為car有個功能為(run)，子類別繼承父類別，子類別分別為:跑車、樂高積木車子、電動車，此時小強要開一台去超市買菜，選中了樂高積木的車子，但積木車沒辦法在run，這種情況就不符合Liskov替換原則，子類別應該可以執行父類別想做的事情。</p>\n</blockquote>\n<h1 id=\"介面隔離原則-ISP\"><a href=\"#介面隔離原則-ISP\" class=\"headerlink\" title=\"介面隔離原則(ISP)\"></a>介面隔離原則(ISP)</h1><p>當用戶的需求很多時，我們可將需求分類並用各個介面完成需求，降低程式之間的耦合性</p>\n<blockquote>\n<p>例:開放封閉原則是大方向，介面隔離比較像實作的指示，android手機的充電孔和耳機孔兩者功能不太一樣，外型也不同，所以實際上也不會插錯，如果程式之間也使用介面(interface)方式來實作，就可避免錯誤使用的情況。</p>\n</blockquote>\n<h1 id=\"依賴反向原則-DIP\"><a href=\"#依賴反向原則-DIP\" class=\"headerlink\" title=\"依賴反向原則(DIP)\"></a>依賴反向原則(DIP)</h1><p>高階模組不應該依賴低階模組，兩個都應該依賴在抽象概念上，抽象概念不依賴細節，而細節依賴在抽象概念上，白話文翻譯就是「話不能說的太死，盡量講一些概念性的東西」。</p>\n<blockquote>\n<p>例:如果依賴反轉做得好的話，你不會在意資料使用的是mysql還是mssql或是nosql及firebase等等，總之你做了一個介面，並且丟進去一個可以透過該介面撈到資料的服務。</p>\n</blockquote>\n","categories":["C#","Solid"],"tags":["C#","oop","Solid"]},{"title":"設計模式 Design Pattern (一) 工廠模式(Factory Pattern)_工廠模式","url":"/designpattern/designpattern-factory-2/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>工廠模式介紹，以RPG遊戲建立各個職業來實作工廠模式<br>工廠模式是很常見的設計模式，工廠模式分為工廠和要製造的商品，工廠主要負責生產商品，商品主要是呈現有哪些功能和特性，就以RPG的職業為例子來實作工廠模式</p>\n<span id=\"more\"></span>\n\n\n<h1 id=\"實作工廠模式\"><a href=\"#實作工廠模式\" class=\"headerlink\" title=\"實作工廠模式\"></a>實作工廠模式</h1><h1 id=\"流程介紹\"><a href=\"#流程介紹\" class=\"headerlink\" title=\"流程介紹\"></a>流程介紹</h1><p><img src=\"/../image/designpattern/designpattern_factory_2_1.PNG\" alt=\"result\" title=\"result\"></p>\n<p>1.建立character的interface</p>\n<p>2.實作戰士和法師這個兩職業</p>\n<p>3.建立工廠的interface</p>\n<p>4.建立產生戰士的工廠和產生法師的工廠</p>\n<p>5.產出這兩個職業</p>\n<h1 id=\"程式碼呈現\"><a href=\"#程式碼呈現\" class=\"headerlink\" title=\"程式碼呈現\"></a>程式碼呈現</h1><h2 style=\"color:red\">腳色interface</h2>\n\n\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">Icharacter</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        <span class=\"built_in\">int</span> Strength &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        <span class=\"built_in\">int</span> Magic &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">skill</span>()</span> &#123; &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">attack</span>()</span> &#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 style=\"color:red\">法師腳色</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Mage</span> : <span class=\"title\">Icharacter</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Strength &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Magic &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Mage</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Name = <span class=\"string\">&quot;法師&quot;</span>;</span><br><span class=\"line\">            Strength = <span class=\"number\">1</span>;</span><br><span class=\"line\">            Magic = <span class=\"number\">5</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">skill</span>()</span> &#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">&quot;十字展造成&quot;</span> + Strength*<span class=\"number\">5</span>+<span class=\"string\">&quot;傷害&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">attack</span>()</span> &#123;</span><br><span class=\"line\">            Console.WriteLine(Name + <span class=\"string\">&quot;攻擊造成&quot;</span> + Strength + <span class=\"string\">&quot;傷害&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 style=\"color:red\">戰士腳色</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Warrior</span> : <span class=\"title\">Icharacter</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Strength &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Magic &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Warrior</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Name = <span class=\"string\">&quot;戰士&quot;</span>;</span><br><span class=\"line\">            Strength = <span class=\"number\">5</span>;</span><br><span class=\"line\">            Magic = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">skill</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">&quot;隕石術造成&quot;</span>+Magic*<span class=\"number\">10</span>+ <span class=\"string\">&quot;傷害&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">attack</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Console.WriteLine(Name + <span class=\"string\">&quot;攻擊造成&quot;</span> + Magic + <span class=\"string\">&quot;傷害&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 style=\"color:red\">工廠interface</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title\">IFactory</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Icharacter <span class=\"title\">CreateCharacter</span>()</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 style=\"color:red\">產生戰士工廠</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">WarriorFactory</span> : <span class=\"title\">IFactory</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Icharacter <span class=\"title\">CreateCharacter</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Warrior();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 style=\"color:red\">產生法師工廠</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">MageFactory</span> : <span class=\"title\">IFactory</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Icharacter <span class=\"title\">CreateCharacter</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Mage();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 style=\"color:red\">產生兩個職業</h3>\n\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    WarriorFactory warriorFactory = <span class=\"keyword\">new</span> WarriorFactory();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> warrior = warriorFactory.CreateCharacter();</span><br><span class=\"line\">    MageFactory mageFactory = <span class=\"keyword\">new</span> MageFactory();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> mage = mageFactory.CreateCharacter();</span><br><span class=\"line\">    warrior.attack();</span><br><span class=\"line\">    warrior.skill();</span><br><span class=\"line\">    mage.attack();</span><br><span class=\"line\">    mage.skill();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 style=\"color:red\">顯示結果</h3>\n\n<p><img src=\"/../image/designpattern/designpattern_factory_2_2.PNG\" alt=\"result\" title=\"result\"></p>\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><h2 id=\"優點：\"><a href=\"#優點：\" class=\"headerlink\" title=\"優點：\"></a>優點：</h2><p>1.一個調用者想創建一個對象，只要它的名字就可以了。 </p>\n<p>2.擴展性高如果想增加一個產品，只要擴展一個工廠類就可以。</p>\n<p>3.屏蔽產品的具體實現，調用者可以只涉及產品的接口。</p>\n<h2 id=\"缺點：\"><a href=\"#缺點：\" class=\"headerlink\" title=\"缺點：\"></a>缺點：</h2><p>每次增加一個產品時，都需要增加一個具體類和對象實現工廠，使得系統中類的個數成倍增加，在一定程度上增加了系統的複雜度，同時也增加了系統具體類的依賴。這並不是什麼好事</p>\n","categories":["C#","Design Pattern"],"tags":["C#","Design Pattern","oop","創建模式","工廠模式"]},{"title":"Docker介紹","url":"/docker/docker/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>甚麼是Docker?<br>Docker是一種軟體平台，可讓您快速地建立，測試和部屬應用程式。<br>Docker將軟體封裝到名為容器的標準化單位，其中包合程式庫、系統工具、程式碼和執行時間等執行軟體許需的所有項目。<br>使用Docker可以快速部屬到各種環境並加以擴充，而且知道程式碼是可執行的。</p>\n<span id=\"more\"></span>\n\n\n<h1 id=\"Docker的運作方式\"><a href=\"#Docker的運作方式\" class=\"headerlink\" title=\"Docker的運作方式\"></a>Docker的運作方式</h1><p>Docker透過提供執行程式碼的標準方法進行運作。<br>Docker是容器的作業系統，與虛擬機器虛擬化(免除直接管理的需要)伺服器硬體的方法相似，容器可虛擬化伺服器的作業系統。<br>Docker安裝在每部伺服器上，並提供簡單的命令讓您使用已建立、啟動或停止容器。</p>\n<p><img src=\"/../image/docker/dockervsvm.png\" alt=\"Docker\" title=\"Docker\"></p>\n<h1 id=\"Docker和Vm的差異\"><a href=\"#Docker和Vm的差異\" class=\"headerlink\" title=\"Docker和Vm的差異\"></a>Docker和Vm的差異</h1><p>VirtualBox:</p>\n<ul>\n<li>需要安裝執行程式的作業系統</li>\n<li>VM裡面的作業系統開機需要花時間</li>\n<li>佔用硬碟的容量較大</li>\n<li>完全的把系統的硬體資源分離</li>\n</ul>\n<p>Docker:</p>\n<ul>\n<li>直接從 Docker Hub Pull 作業系統的 Image</li>\n<li>不用開機，啟動速度比 VM 快</li>\n<li>底層還是使用作業系統的 Kernel</li>\n<li>占用硬碟的容量較小</li>\n</ul>\n<p>Docker 和 VM 不只可以單獨的使用，也可以搭配的拿來使用。<br>要確保整體系統完整的虛擬化就先用 VM 安裝作業系統，然後在 VM 的作業系統上使用 Docker 啟動需要執行的 container。<br>這可以按照使用者的使用情境決定要如何的安排使用 VM 和 Docker。</p>\n<h1 id=\"Docker基本概念\"><a href=\"#Docker基本概念\" class=\"headerlink\" title=\"Docker基本概念\"></a>Docker基本概念</h1><p>映像檔(Image)</p>\n<ul>\n<li>Docker映像檔是個唯讀的模板</li>\n<li>映像檔可建立Docker容器</li>\n</ul>\n<p>容器(Cotainer)</p>\n<ul>\n<li>將映像檔執行實例</li>\n<li>可被啟動、開始、停止、刪除</li>\n<li>可將容器間互相連結</li>\n</ul>\n<p>倉庫(Repository)</p>\n<ul>\n<li>映像檔的存放場所</li>\n<li>push、pull的方式上傳和下載</li>\n</ul>\n","categories":["Docker"],"tags":["Docker","VirtualBox"]},{"title":"如何使用 Hexo + GitHub Pages 架設個人部落格","url":"/hexo/hexoandgithub/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>本篇主要介紹如何使用 Hexo 並搭配 GitHub 來快速架設網誌。從介紹什麼是 Hexo 框架，該如何安裝、建立環境，接著介紹一些常用指令，以及如何部署到 GitHub 上。</p>\n<h1 id=\"文章大綱：\"><a href=\"#文章大綱：\" class=\"headerlink\" title=\"文章大綱：\"></a>文章大綱：</h1><ul>\n<li><a href=\"#%E5%89%8D%E7%BD%AE%E4%BD%9C%E6%A5%AD\">前置作業</a><ul>\n<li>Node.js</li>\n<li>VsCode</li>\n<li>Git</li>\n</ul>\n</li>\n<li><a href=\"#github-pages-%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE\"> 建立 GitHub Pages 環境</a></li>\n<li><a href=\"#hexo-%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE\">Hexo 環境建置</a></li>\n<li>常用指令</li>\n<li>部署到 GitHub<ul>\n<li>建立 GitHub 專案</li>\n<li>將檔案發布到 GitHub<span id=\"more\"></span></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"什麼是Hexo-？\"><a href=\"#什麼是Hexo-？\" class=\"headerlink\" title=\"什麼是Hexo ？\"></a>什麼是Hexo ？</h1><p>引用官網介紹：A fast, simple &amp; powerful blog framework, powered by Node.js.</p>\n<p>Hexo 其實就是一個基於 Node.js 開發的網誌框架，具有下列幾項特點：</p>\n<p>編譯速度非常快<br>能夠支援 Markdown 語法解析文章，並透過主題渲染靜態檔案<br>具有豐富的外掛套件<br>支援一鍵部署到 GitHub Pages 或 Heroku 等支援靜態網頁的空間</p>\n<h1 id=\"前置作業\"><a href=\"#前置作業\" class=\"headerlink\" title=\"前置作業\"></a>前置作業</h1><p>在開始安裝 Hexo 之前，必須先在電腦安裝下列工具：</p>\n<p><a href=\"https://www.mdeditor.tw/\">Node.js</a>：提供 npm 來安裝所需的套件。這裡可選擇安裝左側 16.16.0 LTS 版本<br>Hexo 官網建議使用 Node.js 10.0 及以上版本，若不確定下載哪個版本，可在終端機輸入 npm versin 查看版本號。<br><img src=\"/../image/hexo/nodeDownload.PNG\" alt=\"node.js\" title=\"node.js\"></p>\n<p><a href=\"%22https://code.visualstudio.com/%22\">Visual Studio Code</a>（簡稱 VS Code）:是一款由微軟開發且跨平台的免費原始碼編輯器。該軟體支援語法突顯、程式碼自動補全（又稱 IntelliSense）、程式碼重構功能，並且內建了命令列工具和 Git 版本控制系統。使用者可以更改佈景主題和鍵盤捷徑實現個人化設定，也可以透過內建的擴充元件程式商店安裝擴充元件以加強軟體功能。</p>\n<p><img src=\"/../image/hexo/vscodedownload.PNG\" alt=\"vsocde\" title=\"vsocde\"></p>\n<p><a href=\"%22https://git-scm.com/%22\">Git</a>: 版本控制是一種記錄一個或若干文件內容變化，以便將來查閱特定版本修訂情況的系統。 在本書的範例中，你將會學到如何對軟體的原始碼做版本控制。當然，你實際上可以對電腦上任意型態的檔案做版本控制。</p>\n<p><img src=\"/../image/hexo/gitdownload.PNG\" alt=\"git\" title=\"git\"></p>\n<h1 id=\"GitHub-Pages-環境建置\"><a href=\"#GitHub-Pages-環境建置\" class=\"headerlink\" title=\"GitHub Pages 環境建置\"></a>GitHub Pages 環境建置</h1><p>1.註冊 Github 帳號<br><a href=\"https://github.com/\">github</a></p>\n<p>2.建立 Github Pages</p>\n<p>靜態網頁的好夥伴：Github Pages，它可以給我們託管在 GitHub 上的靜態網頁。在申請完 Github 帳號之後，點一下畫面New的按鈕</p>\n<p><img src=\"/../image/hexo/githubnewButton.PNG\" alt=\"markdown\" title=\"markdown\"></p>\n<p>接著將專案名稱取名為 username.github.io 並按下最下方的 Create repository</p>\n<p>註： <strong>username 指的是你的 GitHub 帳號</strong>，在旁邊 Owner 的地方就會顯示你的帳號。例如我的帳號是 xdxd123，那麼專案名稱就取名為 xdxd123.github.io。</p>\n<p><img src=\"/../image/hexo/githubnewRepositories.PNG\" alt=\"markdown\" title=\"markdown\"></p>\n<p>接著進入專案<br>1.進入Settings 頁面<br>2.點選左側Pages<br>3.選擇 Choose a theme<br><img src=\"/../image/hexo/githubpage.PNG\" alt=\"markdown\" title=\"markdown\"></p>\n<p>接著進入Choose a theme畫面，官方提供多個模板選擇，先隨意選個模板按下 Select theme <font color=#fcc>(這時候的樣板只是暫時，之後才會部署自己的 Hexo 部落格上來)</font> </p>\n<p><img src=\"/../image/hexo/gitselectpage.PNG\" alt=\"markdown\" title=\"markdown\"></p>\n<p>最後在網址列輸入 <a href=\"https://username.github.io/\">https://username.github.io/</a> (username 是自己的 GitHub 帳號)，就能看到自己剛架好的 Github Pages 了唷！</p>\n<p><img src=\"/../image/hexo/githubthemepage.PNG\" alt=\"markdown\" title=\"markdown\"></p>\n<h1 id=\"Hexo-環境建置\"><a href=\"#Hexo-環境建置\" class=\"headerlink\" title=\"Hexo 環境建置\"></a>Hexo 環境建置</h1><p>待續….</p>\n","categories":["Hexo"],"tags":["Hexo","github"]},{"title":"設計模式 Design Pattern (三) 單例模式(Singleton Pattern)","url":"/designpattern/designpattern-singlemode/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>甚麼是單例模式，單例對象的類必須保證只有一個實例存在，並提供全域的訪問<br>單例模式屬於創建模式，從單例模式的定義中，當我們的系統中某個物件只需要一個實例的情況。<br>例如:作業系統的工作管理員、存取ＩＯ和資料庫等資源。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"實作單例模式\"><a href=\"#實作單例模式\" class=\"headerlink\" title=\"實作單例模式\"></a>實作單例模式</h1><h1 id=\"程式碼呈現\"><a href=\"#程式碼呈現\" class=\"headerlink\" title=\"程式碼呈現\"></a>程式碼呈現</h1><h2 style=\"color:red\">單例模式_懶散模式(Lazy)</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Singleton</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Singleton singleton;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">Singleton</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Singleton <span class=\"title\">GetSingleton</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (singleton == <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            singleton = <span class=\"keyword\">new</span> Singleton();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> singleton;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面的單例模式在單執行緒的下是沒問題的，但是在多執行緒的情況下會得到多個Singleton例項，因為兩個執行緒在同時執行GetSingleton()方法時，此時兩個執行緒判斷(singleton&#x3D;&#x3D;null)這個條件時返回都為真，此時兩個執行緒就建立了兩個Singleton例項，這樣就違背單例模式的初衷了，既然上面的實現會執行多個執行緒執行，那我們對於多執行緒的解決方案自然就是使GetSingleton()方法在同一時間只執行一個執行緒執行就好了,也就是我們執行緒同步的問題了。</p>\n<h2 style=\"color:red\">單例模式_懶散模式(Lazy)多執行緒</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Singleton</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">volatile</span>  Singleton singleton;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span>  <span class=\"built_in\">object</span> locker=<span class=\"keyword\">new</span> <span class=\"built_in\">object</span>();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">Singleton</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Singleton <span class=\"title\">GetSingleton</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(instance == <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">lock</span>(locker)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (singleton == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    singleton = <span class=\"keyword\">new</span> Singleton();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> singleton;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><p>單例模式在多執行緒的應用場合下必須小心使用。如果當唯一實例尚未創建時，有兩個執行緒同時調用創建方法，那麼它們同時沒有檢測到唯一實例的存在，從而同時各自創建了一個實例，這樣就有兩個實例被構造出來，從而違反了單例模式中實例唯一的原則。 解決這個問題的辦法是為指示類是否已經實例化的變量提供一個互斥鎖（雖然這樣會降低效率）。</p>\n","categories":["C#","Design Pattern"],"tags":["C#","Design Pattern","oop","創建模式","單例模式"]},{"title":"前端login RSA加密","url":"/javascript/javascriptras/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>由於前端資訊不安全，需透過RSA加密方式將密碼傳給後端並進行解密，RSA是一種非對稱加密演算法，在公開金鑰加密和電子商業中被廣泛使用。</p>\n<span id=\"more\"></span>\n<h1 id=\"傳統加密\"><a href=\"#傳統加密\" class=\"headerlink\" title=\"傳統加密\"></a>傳統加密</h1><p>在傳統的加密算法中，通信的雙方會採用一個共享的密鑰進行加密和解密，前端進行加密後傳給後端，後端接收後進行解密，由於加密和解密採用的密鑰是相同的，這種算法又稱為對稱加密<br>如下圖所示：<br><img src=\"/../image/javascript/stmmetric.png\" alt=\"result\" title=\"result\"><br>圖片來源：<a href=\"https://www.twilio.com/blog/what-is-public-key-cryptography\">twillo</a><br>非對稱加密算法中，通信的雙方會採用一個公鑰和一個私鑰進行加密和解密，由於前端的資訊不安全通常只放公鑰在前端進行加密，在由後端利用私鑰進行解密<br>如下圖所示：<br><img src=\"/../image/javascript/publictoprivate.png\" alt=\"result\" title=\"result\"><br>圖片來源：<a href=\"https://www.twilio.com/blog/what-is-public-key-cryptography\">twillo</a></p>\n<h1 id=\"RSA加密與解密\"><a href=\"#RSA加密與解密\" class=\"headerlink\" title=\"RSA加密與解密\"></a>RSA加密與解密</h1><p>1.使用公鑰加密的數據,利用私鑰進行解密<br>2.使用私鑰加密的數據,利用公鑰進行解密</p>\n<h1 id=\"RSA秘鑰生成方式\"><a href=\"#RSA秘鑰生成方式\" class=\"headerlink\" title=\"RSA秘鑰生成方式\"></a>RSA秘鑰生成方式</h1><p>Mac系統內置OpenSSL(開源加密庫),所以可以直接在終端上使用命令。<br>Windows系統可以使用git命令行工具<br>單擊鼠標右鍵——git bash here 調出git bash<br>生成私鑰，密鑰長度為1024bit</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ openssl genrsa -out private.pem 1024</span><br><span class=\"line\">Generating RSA private key, 1024 bit long modulus (2 primes)</span><br><span class=\"line\">...+++++</span><br><span class=\"line\">.............................+++++</span><br><span class=\"line\">e is 65537 (0x010001)</span><br></pre></td></tr></table></figure>\n<p>從私鑰中提取公鑰</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ openssl rsa -in private.pem -pubout -out public.pem</span><br><span class=\"line\">writing RSA key</span><br></pre></td></tr></table></figure>\n<p>這樣就生成了private.pem 和 public.pem兩個文件</p>\n<h1 id=\"jsencrypt介绍\"><a href=\"#jsencrypt介绍\" class=\"headerlink\" title=\"jsencrypt介绍\"></a>jsencrypt介绍</h1><p>jsencrypt是一個基於rsa加解密的js庫</p>\n<p>安裝</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install jsencrypt </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"vue環境下的程式碼\"><a href=\"#vue環境下的程式碼\" class=\"headerlink\" title=\"vue環境下的程式碼\"></a>vue環境下的程式碼</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;hello&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  </span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">import</span> <span class=\"title class_\">JSEncrypt</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;jsencrypt&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;HelloWorld&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">let</span> content=<span class=\"string\">&quot;要加密的内容&quot;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;加密前:&quot;</span>+content);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">var</span> encryptor = <span class=\"keyword\">new</span> <span class=\"title class_\">JSEncrypt</span>() </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">var</span> pubKey = <span class=\"string\">`MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQD4oPAzFTGWT8MZMKDNw9BBaOOL</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\"><span class=\"language-xml\">LQeRsBAA8KmqCDB8l5SWpae+nG5D73bz7cbOY/JgdCGD31ZX8mtvlKslJLQ7Y2BJ</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\"><span class=\"language-xml\">GZkObJSxryVRy7PoVohQuX/63QtdXivmsIQNo2PjZzjiljTkEiQrP27WmgBIDo0D</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\"><span class=\"language-xml\">B9MEOtgwa2nxwbywwwIDAQAB`</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    encryptor.<span class=\"title function_\">setPublicKey</span>(pubKey)<span class=\"comment\">//設置公鑰</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">var</span> rsaPassWord = encryptor.<span class=\"title function_\">encrypt</span>(content);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;加密內容:&quot;</span>+rsaPassWord);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">var</span> decrypt = <span class=\"keyword\">new</span> <span class=\"title class_\">JSEncrypt</span>()</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">var</span> priKey = <span class=\"string\">`MIICWwIBAAKBgQD4oPAzFTGWT8MZMKDNw9BBaOOLLQeRsBAA8KmqCDB8l5SWpae+</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\"><span class=\"language-xml\">nG5D73bz7cbOY/JgdCGD31ZX8mtvlKslJLQ7Y2BJGZkObJSxryVRy7PoVohQuX/6</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\"><span class=\"language-xml\">3QtdXivmsIQNo2PjZzjiljTkEiQrP27WmgBIDo0DB9MEOtgwa2nxwbywwwIDAQAB</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\"><span class=\"language-xml\">AoGAAnZNiqP2Fr/5daFmpkL/J/aq8jDi901gCzJW68ki+cjifs9rJtcTvHZ9nhLH</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\"><span class=\"language-xml\">ujmBJ/Vec5jdmQdciwFU5IxFgKAPF+YDeaQEnEBvWoIdJ8Yv66HkS+xOeesNobrc</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\"><span class=\"language-xml\">46uaDSWFdbCypTlE9KgvYm/8mLOOEHNp19UsgEjdKwiT1tkCQQD+RlZU5mUXG5zA</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\"><span class=\"language-xml\">TK0MAsLr8CrxgoZ6ifd0HfXXknKY+eiiOVDwbpAAP/6Zb/MCVk17QHttPYCHLuNO</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\"><span class=\"language-xml\">aQIrVXPFAkEA+lDLR+dClOGBY8KTmloEJa990XwlppacI9J2xDAdBDZnzp7YMUdY</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\"><span class=\"language-xml\">cUc2D0xZyCsWhZXlS5PW7Lmv+hz7hX3y5wJAS/DL1d1dcbJQdWoxAHZOqtJ2sNxv</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\"><span class=\"language-xml\">t2c/HVHZW4GkciWpIdIGZ1hN75UtP7wckqUdzOKsOir1GOqa/o8EE9cYlQJAeaJl</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\"><span class=\"language-xml\">BW2k9v+Vhkp4uxpexYk/VFpFWWv6N5X/zFms3+0oCEk7uMZ4faMi69AoGJKHgSZT</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\"><span class=\"language-xml\">o6QVXjblAl6vAjEvpQJAGDiLg173MOTcLDAy+7yMGGKDfumHCdTkN1hH79gbICgd</span></span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"language-javascript\"><span class=\"language-xml\">bn5i62SpyiHRzh+tL2DSxCYbLW5KOU6CoxRfw/o55A==`</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    decrypt.<span class=\"title function_\">setPrivateKey</span>(priKey)<span class=\"comment\">//設置私鑰</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">var</span> uncrypted = decrypt.<span class=\"title function_\">decrypt</span>(rsaPassWord)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;解密:&quot;</span>+uncrypted);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"> </span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"result\"><a href=\"#result\" class=\"headerlink\" title=\"result\"></a>result</h1><p><img src=\"/../image/javascript/result.PNG\" alt=\"result\" title=\"result\"></p>\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><p>1.RSA與一般對稱加密安全許多</p>\n<p>2.NIST建議的RSA密鑰長度為至少2048位元[8]。</p>\n<p>3.比起AES、3DES和其它對稱演算法來說，RSA要慢得多。實際的運用（如TLS）一般結合了對稱加密（如AES）和非對稱加密（如RSA）兩者。</p>\n","categories":["JavaScript"],"tags":["JavaScript","RSA加密","Login","Vue"]},{"title":"[探討]JavaScript Hoisting 是什麼？","url":"/javascript/javascriptHoisting/","content":"<h1 id=\"Hoisting-是甚麼\"><a href=\"#Hoisting-是甚麼\" class=\"headerlink\" title=\"Hoisting 是甚麼?\"></a>Hoisting 是甚麼?</h1><p>先看下面的程式碼</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n<p>在尚未宣告 a 變數之下，呼叫 a 變數會得到「a 還沒被宣告」這樣的錯誤：</p>\n<p><img src=\"/../image/jshosting/hostingerror.PNG\" alt=\"error\" title=\"error\"></p>\n<p> Javascript 是一行一行依序執行的語言，如果我把宣告 a 變數這行加在 console 下面，照理說還沒有跑到定義那一行，又呼叫 a ，應該會出現一樣的錯誤：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n\n<p>結果卻是回傳了 undefined：</p>\n<p>如果是函式，一樣在宣告函式之前呼叫他：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">name</span>();</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">name</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Neil&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>也回傳了正確的值：Neil</p>\n<p>以上的現象，就是 Hoisting，我喜歡用一句話記憶 Hoisting 的概念：「幫你留位子」，因為 Hoisting 就是 Javascript 在執行任何程式碼之前，先把宣告的變數和函式放進記憶體空間裡，就像是事先幫他們留個位子的感覺。而變數和函數的 Hoisting 略有不同，以下來看幾個 Hoisting 的特性：</p>\n<h2 id=\"1-變數的宣告-Declarations-會被提升\"><a href=\"#1-變數的宣告-Declarations-會被提升\" class=\"headerlink\" title=\"1.變數的宣告 (Declarations) 會被提升\"></a>1.變數的宣告 (Declarations) 會被提升</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">a=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在這裡我們在 console 的下面才宣告 a，但是因為宣告會被提升，在執行任何程式碼之前，Javascript 就幫他留了位子，所以其實執行起來就像是這樣：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a;</span><br><span class=\"line\">a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// 1</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-變數的初始化不會提升\"><a href=\"#2-變數的初始化不會提升\" class=\"headerlink\" title=\"2.變數的初始化不會提升\"></a>2.變數的初始化不會提升</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a=<span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p>從這裡我們就可以看出賦值沒有被提升，只有變數宣告被提升</p>\n<p>undefined 跟 is not defined 是不一樣的意思<br>undefined是 有宣告沒賦值<br>is not defined 是沒宣告也沒賦值</p>\n<h2 id=\"3-函式陳述式-function-declaration-會被提升\"><a href=\"#3-函式陳述式-function-declaration-會被提升\" class=\"headerlink\" title=\"3.函式陳述式 (function declaration) 會被提升\"></a>3.函式陳述式 (function declaration) 會被提升</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">test</span>();<span class=\"comment\">// hello world</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;hello world&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>函數陳述式宣告前呼叫函數，可以成功執行</p>\n<h2 id=\"4-函式運算式-function-expression-不會被提升\"><a href=\"#4-函式運算式-function-expression-不會被提升\" class=\"headerlink\" title=\"4.函式運算式 (function expression) 不會被提升\"></a>4.函式運算式 (function expression) 不會被提升</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">test</span>(); </span><br><span class=\"line\"><span class=\"keyword\">var</span> test=<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;hello world&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/../image/jshosting/hostingfnerror.PNG\" alt=\"error\" title=\"error\"></p>\n<p>變數有被提升，但賦值沒被提升所以會跳出<br><font color=\"#dd00\">test is not a function</font></p>\n<h2 id=\"5-函式與變數同名，函式優先\"><a href=\"#5-函式與變數同名，函式優先\" class=\"headerlink\" title=\"5.函式與變數同名，函式優先\"></a>5.函式與變數同名，函式優先</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(test); <span class=\"comment\">//fn test()&#123;&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> test=<span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;hello world&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果變數和函數同名時，函數和變數都會提升，函數優先級較高會覆蓋原本的變數，若是多個函數同名的話，後會覆蓋前</p>\n<h2 id=\"6-函式內的變數只會函數內的範疇提升\"><a href=\"#6-函式內的變數只會函數內的範疇提升\" class=\"headerlink\" title=\"6.函式內的變數只會函數內的範疇提升\"></a>6.函式內的變數只會函數內的範疇提升</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">test</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a); <span class=\"comment\">//a is not define</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">test</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);  <span class=\"comment\">// undefined</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> a=<span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/../image/jshosting/hostinginlinefnerror.PNG\" alt=\"error\" title=\"error\"></p>\n<p>函數外的a跳出錯誤<font color=\"#dd00\">a is not define</font>，函數內的a因為只有變數a提升但沒賦值所以印出undefined</p>\n<h1 id=\"let-const-and-Hoisting\"><a href=\"#let-const-and-Hoisting\" class=\"headerlink\" title=\"let, const and Hoisting\"></a>let, const and Hoisting</h1><p>在 W3C 中是這樣說的：</p>\n<blockquote>\n<p>Variables and constants declared with let or const are not hoisted!<br>由 let 和 const 宣告的變數不會被提升</p>\n</blockquote>\n<p>你可能會想說：「哦～所以 let 沒有變數提升！」，那你就太天真了，其實在 let&#x2F;const 中也存在變數提升的，並且會提升到區塊作用域的頂部，但是他還有另一個概念就是「暫時死區」，也就是如果在宣告變數之前使用變數，這個變數就是存在「暫時死區」中無法存取！這時候使用它就會報錯 ReferenceError。</p>\n<p>暫時死區的好處<br>暫時死區的特性可以幫助我們養成在變數還沒宣告之前不要使用他的好習慣，讓程式碼可讀性提高！更好理解，這也是建議使用 let&#x2F;const 宣告變數的原因之一哦！</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(name); <span class=\"comment\">// Uncaught ReferenceError: Cannot access &#x27;name&#x27; before initialization</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> name;</span><br></pre></td></tr></table></figure>\n","categories":["JavaScript"],"tags":["JavaScript","Hoisting"]},{"title":"前端撰寫老鼠走迷宮","url":"/javascript/maze/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>了解了遞迴的用法我們就可以用遞迴幫忙我們解出迷宮的走法</p>\n<span id=\"more\"></span>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> map = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#map&quot;</span>); <span class=\"comment\">//抓取地圖</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> n = <span class=\"number\">10</span>; <span class=\"comment\">//地圖大小</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maparray = []; <span class=\"comment\">//地圖陣列</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> index = <span class=\"number\">0</span>; <span class=\"comment\">//正確路徑索引</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mouses = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#mouse&quot;</span>); <span class=\"comment\">//第一隻老鼠</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mouse1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#mouse1&quot;</span>);<span class=\"comment\">//第二隻老鼠</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> rotatechange = <span class=\"number\">0</span>; <span class=\"comment\">//判定第一次轉</span></span><br><span class=\"line\"><span class=\"comment\">//老鼠物件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mouse = &#123;</span><br><span class=\"line\">    <span class=\"attr\">mousepath</span>: [],<span class=\"comment\">//紀錄老鼠走過路徑</span></span><br><span class=\"line\">    <span class=\"attr\">direction</span>: <span class=\"number\">0</span>, <span class=\"comment\">//紀錄老鼠方向</span></span><br><span class=\"line\">    <span class=\"attr\">x</span>: <span class=\"number\">1</span>, <span class=\"comment\">//老鼠x座標</span></span><br><span class=\"line\">    <span class=\"attr\">y</span>: <span class=\"number\">1</span>, <span class=\"comment\">//老鼠y座標</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//地圖 牆壁為0 可走通道1 </span></span><br><span class=\"line\">maparray = [[<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">[<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">[<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">[<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">createmap</span>(n); <span class=\"comment\">//建立迷宮</span></span><br><span class=\"line\"><span class=\"title function_\">mousemove</span>(mouse.<span class=\"property\">x</span>, mouse.<span class=\"property\">y</span>); <span class=\"comment\">//老鼠移動</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> times = <span class=\"built_in\">setInterval</span>(mousemove, <span class=\"number\">200</span>); <span class=\"comment\">//計時器</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//老鼠移動函數</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">mousemove</span>(<span class=\"params\">x, y</span>) &#123;</span><br><span class=\"line\">    x = mouse.<span class=\"property\">x</span>;<span class=\"comment\">//老鼠x座標</span></span><br><span class=\"line\">    y = mouse.<span class=\"property\">y</span>;<span class=\"comment\">//老鼠y座標</span></span><br><span class=\"line\">    maparray[x][y] = <span class=\"number\">2</span>; <span class=\"comment\">//走過路徑設為2</span></span><br><span class=\"line\">    mouses.<span class=\"property\">style</span>.<span class=\"property\">transform</span> = <span class=\"string\">`translate(<span class=\"subst\">$&#123;y * <span class=\"number\">50</span>&#125;</span>px,<span class=\"subst\">$&#123;x * <span class=\"number\">50</span>&#125;</span>px) rotate(<span class=\"subst\">$&#123;mouse.direction&#125;</span>deg)`</span>; <span class=\"comment\">//老鼠移動到(x,y)座標上</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">iswalk</span>())<span class=\"comment\">//判定老鼠是否還在移動</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        mouse.<span class=\"property\">mousepath</span>.<span class=\"title function_\">push</span>(&#123; x, y &#125;); <span class=\"comment\">//老鼠路徑  \t    </span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">normalmove</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> path = mouse.<span class=\"property\">mousepath</span>; <span class=\"comment\">//設為正確路徑</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mouse.<span class=\"property\">mousepath</span>[index]) &#123;</span><br><span class=\"line\">            maparray[path[index].<span class=\"property\">x</span>][path[index].<span class=\"property\">y</span>] = <span class=\"number\">3</span>;</span><br><span class=\"line\">            mouse1.<span class=\"property\">style</span>.<span class=\"property\">transform</span> = <span class=\"string\">`translate(<span class=\"subst\">$&#123;path[index].y * <span class=\"number\">50</span>&#125;</span>px,<span class=\"subst\">$&#123;path[index].x * <span class=\"number\">50</span>&#125;</span>px)`</span>; <span class=\"comment\">//老鼠1移動到(x,y)座標上</span></span><br><span class=\"line\">            index++; <span class=\"comment\">//索引+1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"title function_\">createmap</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">iswalk</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> walk = <span class=\"literal\">true</span>; <span class=\"comment\">//判斷老鼠是否無路可走</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (maparray[<span class=\"number\">8</span>][<span class=\"number\">8</span>] == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"built_in\">clearInterval</span>(times); <span class=\"comment\">//計時器關掉</span></span><br><span class=\"line\">            <span class=\"built_in\">setInterval</span>(normalmove, <span class=\"number\">100</span>); <span class=\"comment\">//啟動老鼠1計時器</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (maparray[x][y + <span class=\"number\">1</span>] === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            mouse.<span class=\"property\">direction</span> = <span class=\"number\">270</span>;<span class=\"comment\">//方向向右</span></span><br><span class=\"line\">            mouse.<span class=\"property\">y</span>++; <span class=\"comment\">//向右</span></span><br><span class=\"line\">            rotatechange = <span class=\"number\">0</span>;<span class=\"comment\">//改變歸零</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (maparray[x + <span class=\"number\">1</span>][y] === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            mouse.<span class=\"property\">direction</span> = <span class=\"number\">0</span>; <span class=\"comment\">//方向向下</span></span><br><span class=\"line\">            mouse.<span class=\"property\">x</span>++; <span class=\"comment\">//向下</span></span><br><span class=\"line\">            rotatechange = <span class=\"number\">0</span>;<span class=\"comment\">//改變歸零</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (maparray[x][y - <span class=\"number\">1</span>] === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            mouse.<span class=\"property\">direction</span> = <span class=\"number\">90</span>; <span class=\"comment\">//方向向左</span></span><br><span class=\"line\">            mouse.<span class=\"property\">y</span>--; <span class=\"comment\">//向左</span></span><br><span class=\"line\">            rotatechange = <span class=\"number\">0</span>;<span class=\"comment\">//改變歸零</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (maparray[x - <span class=\"number\">1</span>][y] === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            mouse.<span class=\"property\">direction</span> = <span class=\"number\">180</span>; <span class=\"comment\">//方向向上</span></span><br><span class=\"line\">            mouse.<span class=\"property\">x</span>--; <span class=\"comment\">//向上</span></span><br><span class=\"line\">            rotatechange = <span class=\"number\">0</span>;<span class=\"comment\">//改變歸零</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (rotatechange == <span class=\"number\">0</span>) <span class=\"comment\">//改變第一次</span></span><br><span class=\"line\">                mouse.<span class=\"property\">direction</span> -= <span class=\"number\">180</span>;<span class=\"comment\">//反轉180</span></span><br><span class=\"line\"></span><br><span class=\"line\">            rotatechange++; <span class=\"comment\">//改變++</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> len = mouse.<span class=\"property\">mousepath</span>.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">            mouse.<span class=\"property\">x</span> = mouse.<span class=\"property\">mousepath</span>[len].<span class=\"property\">x</span>;</span><br><span class=\"line\">            mouse.<span class=\"property\">y</span> = mouse.<span class=\"property\">mousepath</span>[len].<span class=\"property\">y</span>;</span><br><span class=\"line\">            mouse.<span class=\"property\">mousepath</span>.<span class=\"title function_\">pop</span>(); <span class=\"comment\">//刪除路徑</span></span><br><span class=\"line\">            walk = <span class=\"literal\">false</span>; <span class=\"comment\">//無路可走反回原路</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> walk;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//迷宮建造函數</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">createmap</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> div = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;div&quot;</span>);</span><br><span class=\"line\">            div.<span class=\"property\">classList</span>.<span class=\"title function_\">add</span>(<span class=\"string\">&quot;cell&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (maparray[i][j] == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                div.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;white&quot;</span>;</span><br><span class=\"line\">                div.<span class=\"property\">style</span>.<span class=\"property\">top</span> = i * <span class=\"number\">50</span> + <span class=\"string\">&quot;px&quot;</span>;</span><br><span class=\"line\">                div.<span class=\"property\">style</span>.<span class=\"property\">left</span> = j * <span class=\"number\">50</span> + <span class=\"string\">&quot;px&quot;</span>;</span><br><span class=\"line\">                map.<span class=\"title function_\">appendChild</span>(div);</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (maparray[i][j] == <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">                div.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;yellow&quot;</span>;</span><br><span class=\"line\">                div.<span class=\"property\">style</span>.<span class=\"property\">top</span> = i * <span class=\"number\">50</span> + <span class=\"string\">&quot;px&quot;</span>;</span><br><span class=\"line\">                div.<span class=\"property\">style</span>.<span class=\"property\">left</span> = j * <span class=\"number\">50</span> + <span class=\"string\">&quot;px&quot;</span>;</span><br><span class=\"line\">                map.<span class=\"title function_\">appendChild</span>(div);</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (maparray[i][j] == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                div.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&quot;gray&quot;</span>;</span><br><span class=\"line\">                div.<span class=\"property\">style</span>.<span class=\"property\">top</span> = i * <span class=\"number\">50</span> + <span class=\"string\">&quot;px&quot;</span>;</span><br><span class=\"line\">                div.<span class=\"property\">style</span>.<span class=\"property\">left</span> = j * <span class=\"number\">50</span> + <span class=\"string\">&quot;px&quot;</span>;</span><br><span class=\"line\">                map.<span class=\"title function_\">appendChild</span>(div);</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h1><p><a href=\"https://codepen.io/yu-zong-lai/pen/LYmxERd\">demo</a></p>\n","categories":["JavaScript"],"tags":["JavaScript","MAZE"]},{"title":"資料結構連結串列(Linked List)","url":"/datastructure/linklist/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>Linked List(連結串列)是一種常見的資料結構，利用node節點來記錄、表示、儲存資料，且利用每個<br>node的next指向下一個node，以此來連接多個node，並以Null來代表linked List的終點。</p>\n<span id=\"more\"></span>\n\n<p><img src=\"/../image/javascript/linklist.png\" alt=\"markdown\" title=\"markdown\"></p>\n<h1 id=\"單向鏈結串列\"><a href=\"#單向鏈結串列\" class=\"headerlink\" title=\"單向鏈結串列\"></a>單向鏈結串列</h1><h1 id=\"Object-Property-實作\"><a href=\"#Object-Property-實作\" class=\"headerlink\" title=\"Object Property 實作\"></a>Object Property 實作</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Node</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">val</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">val</span> = val;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">next</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> headenode=<span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> second=<span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>(<span class=\"number\">12</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">headenode.<span class=\"property\">next</span>=second;</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><p>優點:<br>1.不需要像Array先定義大小，可自由擴充。</p>\n<p>2.新增和刪除較Array來的容易，只需改動next的值</p>\n<p>缺點:<br>1.由於linklist沒有index在取得某個位置的值時，需要從頭開始找</p>\n<p>2.需要額外的紀體儲存next</p>\n","categories":["JavaScript"],"tags":["JavaScript","LinkedList","Data Structure"]},{"title":"資料結構堆疊(Stack)","url":"/datastructure/stack/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><h1 id=\"什麼是-Stack？\"><a href=\"#什麼是-Stack？\" class=\"headerlink\" title=\"什麼是 Stack？\"></a>什麼是 Stack？</h1><p>stack是一種資料結構，資料像盤子一個一個往上疊，只能從最上面的開始拿取，採取先進後出的概念，即「Last In First Out」縮寫「LIFO」。</p>\n<span id=\"more\"></span>\n\n\n<p><img src=\"/../image/javascript/Lifo_stack.png\" alt=\"markdown\" title=\"markdown\"><br>source: <a href=\"https://en.wikipedia.org/wiki/Stack_(abstract_data_type)\">Stack (abstract data type) - Wikipedia</a></p>\n<h1 id=\"應用\"><a href=\"#應用\" class=\"headerlink\" title=\"應用\"></a>應用</h1><p>Stack 的特性就是取得最新的資料，所以有這種需求的應用會適合用 stack 來處理，例如：</p>\n<p>1.瀏覽器的 call stack<br>2.Undo &#x2F; Redo 功能<br>3.歷史紀錄</p>\n<h1 id=\"Array-實作\"><a href=\"#Array-實作\" class=\"headerlink\" title=\"Array 實作\"></a>Array 實作</h1><p>JavaScript 有Array可以直接實作出stack的資料結構，push將資料堆疊，pop取出最後的資料</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr=[];</span><br><span class=\"line\">arr.<span class=\"title function_\">push</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">arr.<span class=\"title function_\">push</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">arr.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Object-Property-實作\"><a href=\"#Object-Property-實作\" class=\"headerlink\" title=\"Object Property 實作\"></a>Object Property 實作</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Node</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">val</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">val</span> = val;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">next</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Stack</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">top</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">size</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">push</span>(<span class=\"params\">val</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> node = <span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>(val);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">size</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">top</span> = node;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            node.<span class=\"property\">next</span>=<span class=\"variable language_\">this</span>.<span class=\"property\">top</span>;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">top</span>=node;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">size</span>++;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">pop</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">size</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">top</span>=<span class=\"variable language_\">this</span>.<span class=\"property\">top</span>.<span class=\"property\">next</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">size</span>--;</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> stack = <span class=\"keyword\">new</span> <span class=\"title class_\">Stack</span>();</span><br><span class=\"line\">stack.<span class=\"title function_\">push</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">stack.<span class=\"title function_\">push</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">stack.<span class=\"title function_\">push</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\">stack.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">stack.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(stack);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><p>1.以上程式碼利用javascript的Array和Object Property做出stack的資料結構</p>\n<p>2.堆疊常用在動態編成和遞迴中，不過要注意太多堆疊會造成overflow的錯誤</p>\n","categories":["JavaScript"],"tags":["Data Structure","javascript","Stack"]},{"title":"Javascript遊戲製作(一)貪食蛇","url":"/javascript/snack/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>我們可以利用Stack的資料結構做出簡易的貪食蛇</p>\n<span id=\"more\"></span>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> canvas = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;myCanvas&quot;</span>); <span class=\"comment\">//抓取元素 myCanvas dom</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> ctx = canvas.<span class=\"title function_\">getContext</span>(<span class=\"string\">&quot;2d&quot;</span>);<span class=\"comment\">//設置為2D</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> scoretext = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;Score&quot;</span>);<span class=\"comment\">//抓取分數dom</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> snack = &#123; <span class=\"attr\">body</span>: [&#123; <span class=\"attr\">x</span>: <span class=\"number\">180</span>, <span class=\"attr\">y</span>: <span class=\"number\">140</span> &#125;, &#123; <span class=\"attr\">x</span>: <span class=\"number\">170</span>, <span class=\"attr\">y</span>: <span class=\"number\">140</span> &#125;, &#123; <span class=\"attr\">x</span>: <span class=\"number\">160</span>, <span class=\"attr\">y</span>: <span class=\"number\">140</span> &#125;, &#123; <span class=\"attr\">x</span>: <span class=\"number\">150</span>, <span class=\"attr\">y</span>: <span class=\"number\">140</span> &#125;, &#123; <span class=\"attr\">x</span>: <span class=\"number\">140</span>, <span class=\"attr\">y</span>: <span class=\"number\">140</span> &#125;], <span class=\"attr\">bodysize</span>: <span class=\"number\">5</span>, <span class=\"attr\">direct</span>: <span class=\"string\">&quot;right&quot;</span> &#125;;<span class=\"comment\">//設置snack身體 長度 方向</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> apple = &#123;&#125;;<span class=\"comment\">//設置蘋果位置</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> score = <span class=\"number\">0</span>;<span class=\"comment\">//分數</span></span><br><span class=\"line\"><span class=\"title function_\">move</span>();<span class=\"comment\">//蛇移動</span></span><br><span class=\"line\"><span class=\"title function_\">applecreate</span>();<span class=\"comment\">//創造蘋果</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> time = <span class=\"built_in\">setInterval</span>(move, <span class=\"number\">100</span>); <span class=\"comment\">//計時器</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;keydown&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">e</span>) <span class=\"comment\">//監聽按下的鍵盤事件</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (e.<span class=\"property\">keyCode</span> == <span class=\"string\">&quot;37&quot;</span>) &#123;</span><br><span class=\"line\">        snack.<span class=\"property\">direct</span> = <span class=\"string\">&quot;left&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.<span class=\"property\">keyCode</span> == <span class=\"string\">&quot;39&quot;</span>) &#123;</span><br><span class=\"line\">        snack.<span class=\"property\">direct</span> = <span class=\"string\">&quot;right&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.<span class=\"property\">keyCode</span> == <span class=\"string\">&quot;38&quot;</span>) &#123;</span><br><span class=\"line\">        snack.<span class=\"property\">direct</span> = <span class=\"string\">&quot;top&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.<span class=\"property\">keyCode</span> == <span class=\"string\">&quot;40&quot;</span>) &#123;</span><br><span class=\"line\">        snack.<span class=\"property\">direct</span> = <span class=\"string\">&quot;down&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//snackmove</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">move</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">updatescore</span>(); <span class=\"comment\">//更新分數</span></span><br><span class=\"line\">    ctx.<span class=\"title function_\">clearRect</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, canvas.<span class=\"property\">width</span>, canvas.<span class=\"property\">height</span>); <span class=\"comment\">//清理畫布</span></span><br><span class=\"line\">    ctx.<span class=\"property\">fillStyle</span> = <span class=\"string\">&quot;#9fe8fa&quot;</span>; <span class=\"comment\">//填充顏色</span></span><br><span class=\"line\">    ctx.<span class=\"title function_\">fillRect</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>);</span><br><span class=\"line\">    ctx.<span class=\"property\">fillStyle</span> = <span class=\"string\">&quot;#26baee&quot;</span>; <span class=\"comment\">//填充顏色</span></span><br><span class=\"line\">    ctx.<span class=\"title function_\">fillRect</span>(apple.<span class=\"property\">x</span>, apple.<span class=\"property\">y</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">    ctx.<span class=\"property\">fillStyle</span> = <span class=\"string\">&quot;#FFE&quot;</span>; <span class=\"comment\">//填充顏色</span></span><br><span class=\"line\">    ctx.<span class=\"property\">strokeStyle</span> = <span class=\"string\">&quot;#26baee&quot;</span>; <span class=\"comment\">//填充邊框顏色</span></span><br><span class=\"line\">    ctx.<span class=\"property\">lineWidth</span> = <span class=\"number\">1</span>; <span class=\"comment\">//邊框大小</span></span><br><span class=\"line\">    <span class=\"title function_\">direction</span>(); <span class=\"comment\">//判定方向</span></span><br><span class=\"line\">    <span class=\"comment\">//畫出蛇身體</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; snack.<span class=\"property\">body</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        ctx.<span class=\"title function_\">fillRect</span>(snack.<span class=\"property\">body</span>[i].<span class=\"property\">x</span>, snack.<span class=\"property\">body</span>[i].<span class=\"property\">y</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">        ctx.<span class=\"title function_\">strokeRect</span>(snack.<span class=\"property\">body</span>[i].<span class=\"property\">x</span>, snack.<span class=\"property\">body</span>[i].<span class=\"property\">y</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//超過size陣列清掉</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; snack.<span class=\"property\">body</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt;= snack.<span class=\"property\">bodysize</span>)</span><br><span class=\"line\">            snack.<span class=\"property\">body</span>.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//蛇方向</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">direction</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (snack.<span class=\"property\">direct</span> == <span class=\"string\">&quot;left&quot;</span>) &#123;</span><br><span class=\"line\">        snack.<span class=\"property\">body</span>.<span class=\"title function_\">unshift</span>(&#123; <span class=\"attr\">x</span>: snack.<span class=\"property\">body</span>[<span class=\"number\">0</span>].<span class=\"property\">x</span> - <span class=\"number\">10</span>, <span class=\"attr\">y</span>: snack.<span class=\"property\">body</span>[<span class=\"number\">0</span>].<span class=\"property\">y</span> &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (snack.<span class=\"property\">direct</span> == <span class=\"string\">&quot;top&quot;</span>) &#123;</span><br><span class=\"line\">        snack.<span class=\"property\">body</span>.<span class=\"title function_\">unshift</span>(&#123; <span class=\"attr\">x</span>: snack.<span class=\"property\">body</span>[<span class=\"number\">0</span>].<span class=\"property\">x</span>, <span class=\"attr\">y</span>: snack.<span class=\"property\">body</span>[<span class=\"number\">0</span>].<span class=\"property\">y</span> - <span class=\"number\">10</span> &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (snack.<span class=\"property\">direct</span> == <span class=\"string\">&quot;down&quot;</span>) &#123;</span><br><span class=\"line\">        snack.<span class=\"property\">body</span>.<span class=\"title function_\">unshift</span>(&#123; <span class=\"attr\">x</span>: snack.<span class=\"property\">body</span>[<span class=\"number\">0</span>].<span class=\"property\">x</span>, <span class=\"attr\">y</span>: snack.<span class=\"property\">body</span>[<span class=\"number\">0</span>].<span class=\"property\">y</span> + <span class=\"number\">10</span> &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (snack.<span class=\"property\">direct</span> == <span class=\"string\">&quot;right&quot;</span>) &#123;</span><br><span class=\"line\">        snack.<span class=\"property\">body</span>.<span class=\"title function_\">unshift</span>(&#123; <span class=\"attr\">x</span>: snack.<span class=\"property\">body</span>[<span class=\"number\">0</span>].<span class=\"property\">x</span> + <span class=\"number\">10</span>, <span class=\"attr\">y</span>: snack.<span class=\"property\">body</span>[<span class=\"number\">0</span>].<span class=\"property\">y</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">eatapple</span>();</span><br><span class=\"line\">    <span class=\"title function_\">gameover</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//判斷是否死掉</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">gameover</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; snack.<span class=\"property\">body</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (snack.<span class=\"property\">body</span>[<span class=\"number\">0</span>].<span class=\"property\">x</span> == snack.<span class=\"property\">body</span>[i].<span class=\"property\">x</span> &amp;&amp; snack.<span class=\"property\">body</span>[<span class=\"number\">0</span>].<span class=\"property\">y</span> == snack.<span class=\"property\">body</span>[i].<span class=\"property\">y</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">reset</span>();</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (snack.<span class=\"property\">body</span>[<span class=\"number\">0</span>].<span class=\"property\">x</span> &lt; <span class=\"number\">0</span> || snack.<span class=\"property\">body</span>[<span class=\"number\">0</span>].<span class=\"property\">x</span> &gt;= <span class=\"number\">300</span> || snack.<span class=\"property\">body</span>[<span class=\"number\">0</span>].<span class=\"property\">y</span> &gt;= <span class=\"number\">300</span> || snack.<span class=\"property\">body</span>[<span class=\"number\">0</span>].<span class=\"property\">y</span> &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">reset</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//創造蘋果</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">applecreate</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> x = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">30</span>) * <span class=\"number\">10</span>; <span class=\"comment\">//0~29之間在乘10</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> y = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">30</span>) * <span class=\"number\">10</span>; <span class=\"comment\">//0~29之間在乘10</span></span><br><span class=\"line\">    <span class=\"comment\">//檢查蘋果是否在蛇身上</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; snack.<span class=\"property\">body</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x == snack.<span class=\"property\">body</span>[i].<span class=\"property\">x</span> &amp;&amp; y == snack.<span class=\"property\">body</span>[i].<span class=\"property\">y</span>) &#123;</span><br><span class=\"line\">            x = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">30</span>) * <span class=\"number\">10</span>;</span><br><span class=\"line\">            y = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">30</span>) * <span class=\"number\">10</span>;</span><br><span class=\"line\">            i = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    apple.<span class=\"property\">x</span> = x;</span><br><span class=\"line\">    apple.<span class=\"property\">y</span> = y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//吃掉蘋果</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">eatapple</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (snack.<span class=\"property\">body</span>[<span class=\"number\">0</span>].<span class=\"property\">x</span> == apple.<span class=\"property\">x</span> &amp;&amp; snack.<span class=\"property\">body</span>[<span class=\"number\">0</span>].<span class=\"property\">y</span> == apple.<span class=\"property\">y</span>)<span class=\"comment\">//蛇碰到蘋果吃掉</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"title function_\">applecreate</span>();</span><br><span class=\"line\">        snack.<span class=\"property\">bodysize</span>++;</span><br><span class=\"line\">        score += <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//更新分數</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">updatescore</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    scoretext.<span class=\"property\">innerText</span> = score;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//初始化</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">reset</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    snack.<span class=\"property\">body</span> = [&#123; <span class=\"attr\">x</span>: <span class=\"number\">180</span>, <span class=\"attr\">y</span>: <span class=\"number\">140</span> &#125;, &#123; <span class=\"attr\">x</span>: <span class=\"number\">170</span>, <span class=\"attr\">y</span>: <span class=\"number\">140</span> &#125;, &#123; <span class=\"attr\">x</span>: <span class=\"number\">160</span>, <span class=\"attr\">y</span>: <span class=\"number\">140</span> &#125;, &#123; <span class=\"attr\">x</span>: <span class=\"number\">150</span>, <span class=\"attr\">y</span>: <span class=\"number\">140</span> &#125;, &#123; <span class=\"attr\">x</span>: <span class=\"number\">140</span>, <span class=\"attr\">y</span>: <span class=\"number\">140</span> &#125;];</span><br><span class=\"line\">    snack.<span class=\"property\">bodysize</span> = <span class=\"number\">5</span>;</span><br><span class=\"line\">    snack.<span class=\"property\">direct</span> = <span class=\"string\">&quot;right&quot;</span>;</span><br><span class=\"line\">    <span class=\"title function_\">move</span>();</span><br><span class=\"line\">    <span class=\"title function_\">applecreate</span>();</span><br><span class=\"line\">    score = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h1><p><a href=\"https://codepen.io/yu-zong-lai/pen/gOzgbRJ\">demo</a></p>\n","categories":["JavaScript","Game"],"tags":["Canvas","Game","JavaScript","Stack","Sanck"]},{"title":"資料結構隊列(Queue)","url":"/datastructure/queue/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><h1 id=\"何謂Queue\"><a href=\"#何謂Queue\" class=\"headerlink\" title=\"何謂Queue\"></a>何謂Queue</h1><p>Queue是一種先進先出(FIFO, First-In-First-Out)的資料結構，它與堆疊處理資料方式是不大一樣的，亦即資料處理是在不同邊進行，也就是資料由一端加入，由另一端刪除。生活中就有用到隊列的實例，如排隊買飲料第一個購買飲料的人，會先結帳。</p>\n<span id=\"more\"></span>\n\n<p><img src=\"/../image/javascript/queue.png\" alt=\"markdown\" title=\"markdown\"><br>source: <a href=\"https://emn178.pixnet.net/blog/post/93475832-%E4%BD%87%E5%88%97%28queue%29\">Queue(圖片來源)</a></p>\n<h1 id=\"定義\"><a href=\"#定義\" class=\"headerlink\" title=\"定義\"></a>定義</h1><ol>\n<li>一群相同性質元素的組合，即有序串列(Ordered List) 。</li>\n<li>具有 FIFO(First In First Out) 先進先出的性質。</li>\n<li>加入元素的動作發生在 Rear(後)端。</li>\n<li>刪除元素的動作發生在 Front(前)端。</li>\n<li>Add&#x2F;Delete 的動作皆發生在不同兩端</li>\n</ol>\n<h1 id=\"Array實作\"><a href=\"#Array實作\" class=\"headerlink\" title=\"Array實作\"></a>Array實作</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Queue</span>(<span class=\"params\">num</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = num;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">Add</span> = <span class=\"keyword\">function</span> (<span class=\"params\">val</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"variable language_\">this</span>.<span class=\"title class_\">IsFull</span>()) &#123;</span><br><span class=\"line\">            arr.<span class=\"title function_\">push</span>(val);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Queue is Full&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">Delete</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr.<span class=\"title function_\">shift</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">IsEmpty</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr.<span class=\"property\">length</span> == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">IsFull</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr.<span class=\"property\">length</span> == max) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">getQueue</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title class_\">Queue1</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Queue</span>(<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"title class_\">Queue1</span>.<span class=\"title class_\">Add</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"title class_\">Queue1</span>.<span class=\"title class_\">Add</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"title class_\">Queue1</span>.<span class=\"title class_\">Add</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"title class_\">Queue1</span>.<span class=\"title class_\">Add</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"title class_\">Queue1</span>.<span class=\"title class_\">Add</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"title class_\">Queue1</span>.<span class=\"title class_\">Add</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"title class_\">Queue1</span>.<span class=\"title function_\">getQueue</span>();</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Object-Property-實作\"><a href=\"#Object-Property-實作\" class=\"headerlink\" title=\"Object Property 實作\"></a>Object Property 實作</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Node</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">val</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">val</span> = val;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">next</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Queue</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">val</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">fornt</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">rear</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">max</span> = val;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">len</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title class_\">Add</span>(val) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">len</span> &gt; <span class=\"variable language_\">this</span>.<span class=\"property\">max</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> node = <span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>(val);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">fornt</span> == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">fornt</span> = node;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">rear</span> = node;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">rear</span>.<span class=\"property\">next</span> = node;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">rear</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">rear</span>.<span class=\"property\">next</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">len</span>++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title class_\">Delete</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">fornt</span> == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">fornt</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">fornt</span>.<span class=\"property\">next</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">len</span>--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title class_\">GetQueue</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">fornt</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title class_\">IsEmpty</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">fornt</span> == <span class=\"literal\">null</span> ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title class_\">IsFull</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">max</span> == <span class=\"variable language_\">this</span>.<span class=\"property\">len</span> ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> qs = <span class=\"keyword\">new</span> <span class=\"title class_\">Queue</span>(<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(qs.<span class=\"title class_\">IsEmpty</span>());</span><br><span class=\"line\">qs.<span class=\"title class_\">Add</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">qs.<span class=\"title class_\">Add</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">qs.<span class=\"title class_\">Add</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\">qs.<span class=\"title class_\">Add</span>(<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(qs.<span class=\"title class_\">IsFull</span>());</span><br><span class=\"line\">qs.<span class=\"title class_\">Delete</span>(<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(qs.<span class=\"title class_\">IsFull</span>());</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(qs.<span class=\"title class_\">GetQueue</span>());</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><p>1.以上程式碼利用javascript的Array和Object Property做出Queue的資料結構</p>\n<p>2.Queue<br>用大O符號表示的時間複雜度</p>\n<table>\n<thead>\n<tr>\n<th>演算法</th>\n<th>平均</th>\n<th>最差</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>空間</td>\n<td>O(n)</td>\n<td>O(n)</td>\n</tr>\n<tr>\n<td>搜尋</td>\n<td>O(n)</td>\n<td>O(n)</td>\n</tr>\n<tr>\n<td>插入</td>\n<td>O(1)</td>\n<td>O(1)</td>\n</tr>\n<tr>\n<td>刪除</td>\n<td>O(1)</td>\n<td>O(1)</td>\n</tr>\n</tbody></table>\n","categories":["JavaScript"],"tags":["Data Structure","javascript","Queue"]},{"title":"Javascript(Leetcode#1) Two Sum","url":"/leetcode/leetcode1/","content":"<p><strong>Difficulty: Easy</strong></p>\n<h1 id=\"規則\"><a href=\"#規則\" class=\"headerlink\" title=\"規則\"></a>規則</h1><p>Given an array of integers, return indices of the two numbers such that they add up to a specific target.</p>\n<p>You may assume that each input would have exactly one solution, and you may not use the same element twice.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給予一個整數陣列，回傳兩個數組的索引以至於他們加起來為特定的目標</p>\n<p>您可以假設每個輸入都只有一個解決方案，並且不能兩次使用相同的元素。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [2,7,11,15], target = 9</span><br><span class=\"line\">Output: [0,1]</span><br><span class=\"line\">Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [3,2,4], target = 6</span><br><span class=\"line\">Output: [1,2]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [3,3], target = 6</span><br><span class=\"line\">Output: [0,1]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>首先會先得到一個數組和一個target數值，利用迴圈抓取數組內容，target數值減掉數組內容的值，所得到的差值就是我要去匹配其他數組內容是否符合，最終找到符合的回傳兩個值的引索位置。</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> obj=&#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;nums.<span class=\"property\">length</span>;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> sub=target-nums[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(obj[sub]!=<span class=\"literal\">undefined</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [i,obj[sub]];</span><br><span class=\"line\">        </span><br><span class=\"line\">        obj[nums[i]]=i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Code 2 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> map=<span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;nums.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> sub=target-nums[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(map.<span class=\"title function_\">has</span>(sub))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> [map.<span class=\"title function_\">get</span>(sub),i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        map.<span class=\"title function_\">set</span>(nums[i],i);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(Leetcode#10) Regular Expression Matching","url":"/leetcode/leetcode10/","content":"<p><strong>Difficult:Hard</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an input string s and a pattern p, implement regular expression matching with support for ‘.’ and ‘*’ where:</p>\n<p>‘.’ Matches any single character.​​​​<br>‘*’ Matches zero or more of the preceding element.<br>The matching should cover the entire input string (not partial).</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個輸入字符串 s 和一個模式 p，實現支持 ‘.’ 的正則表達式匹配。和 ‘*’ 其中：</p>\n<p>‘。’匹配任意單個字符。​​​​<br>‘*’ 匹配零個或多個前面的元素。<br>匹配應覆蓋整個輸入字符串（不是部分）。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;aa&quot;, p = &quot;a&quot;</span><br><span class=\"line\">Output: false</span><br><span class=\"line\">Explanation: &quot;a&quot; does not match the entire string &quot;aa&quot;.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;aa&quot;, p = &quot;a*&quot;</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: &#x27;*&#x27; means zero or more of the preceding element, &#x27;a&#x27;. Therefore, by repeating &#x27;a&#x27; once, it becomes &quot;aa&quot;.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;ab&quot;, p = &quot;.*&quot;</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: &quot;.*&quot; means &quot;zero or more (*) of any character (.)&quot;.</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>此題給了pattern (p)及string (s)，pattern裡的 . 符號可代表任意字元，而 * 符號可代表空值或前一個字元，要比對p是否可匹配組成s。</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">var</span> isMatch = <span class=\"keyword\">function</span>(<span class=\"params\">s, p</span>) &#123;</span><br><span class=\"line\">    s = <span class=\"string\">&#x27; &#x27;</span> + s</span><br><span class=\"line\">    p = <span class=\"string\">&#x27; &#x27;</span> + p</span><br><span class=\"line\">    <span class=\"keyword\">const</span> S=s.<span class=\"property\">length</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> P=p.<span class=\"property\">length</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp=<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(S).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>).<span class=\"title function_\">map</span>(<span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(P).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">    </span><br><span class=\"line\">    dp[<span class=\"number\">0</span>][<span class=\"number\">0</span>]=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"comment\">// m * s *</span></span><br><span class=\"line\">    <span class=\"comment\">// 0 1 0 1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j=<span class=\"number\">2</span>; j&lt;P; j++) &#123;</span><br><span class=\"line\">       dp[<span class=\"number\">0</span>][j] = dp[<span class=\"number\">0</span>][j-<span class=\"number\">2</span>]&amp;&amp; (p[j]===<span class=\"string\">&#x27;*&#x27;</span>) ? <span class=\"number\">1</span> : <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(dp)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i=<span class=\"number\">1</span>; i&lt;S; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j=<span class=\"number\">1</span>; j&lt; P; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s[i] === p[j] || p[j]===<span class=\"string\">&#x27;.&#x27;</span>) &#123;</span><br><span class=\"line\">                dp[i][j]=dp[i-<span class=\"number\">1</span>][j-<span class=\"number\">1</span>]</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (p[j] === <span class=\"string\">&#x27;*&#x27;</span>) &#123;</span><br><span class=\"line\">                </span><br><span class=\"line\">               <span class=\"comment\">// 1 m i s *</span></span><br><span class=\"line\">                <span class=\"comment\">//m 1 0 0 0</span></span><br><span class=\"line\">                <span class=\"comment\">//i 0 1 0 1</span></span><br><span class=\"line\">                <span class=\"comment\">//s 0 0 1 1</span></span><br><span class=\"line\">                <span class=\"comment\">//s 0 0 0 1</span></span><br><span class=\"line\">               dp[i][j]= dp[i][j-<span class=\"number\">2</span>] || (s[i]===p[j-<span class=\"number\">1</span>]||p[j-<span class=\"number\">1</span>]===<span class=\"string\">&#x27;.&#x27;</span>) &amp;&amp; dp[i-<span class=\"number\">1</span>][j]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[S-<span class=\"number\">1</span>][P-<span class=\"number\">1</span>]==<span class=\"literal\">true</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Code 2 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">isMatch</span> = (<span class=\"params\">s, p</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (p.<span class=\"property\">length</span> === <span class=\"number\">0</span> &amp;&amp; s.<span class=\"property\">length</span> === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (p[<span class=\"number\">1</span>] === <span class=\"string\">&#x27;*&#x27;</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span> &amp;&amp; (p[<span class=\"number\">0</span>] === <span class=\"string\">&#x27;.&#x27;</span> || p[<span class=\"number\">0</span>] === s[i]); i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_\">isMatch</span>(s.<span class=\"title function_\">slice</span>(i + <span class=\"number\">1</span>), p.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>))) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">isMatch</span>(s, p.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.<span class=\"property\">length</span> &amp;&amp; (p[<span class=\"number\">0</span>] === <span class=\"string\">&#x27;.&#x27;</span> || s[<span class=\"number\">0</span>] === p[<span class=\"number\">0</span>]) &amp;&amp; <span class=\"title function_\">isMatch</span>(s.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>), p.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>));</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","categories":["Leetcode","Leetcode Hard"],"tags":["Leetcode","Javascript"]},{"title":"設計模式 Design Pattern (一) 工廠模式(Factory Pattern)_簡單工廠模式","url":"/designpattern/designpattern-factory-1/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>設計模式介紹，以飲料店為實例來實現工廠模式的情境<br>工廠模式是很常見的設計模式，簡單工廠模式有一個工廠，由工廠專門負責製造使用者需要的商品，商品主要是呈現有哪些功能和特性，就以飲料店為例子來實作工廠模式</p>\n<span id=\"more\"></span>\n\n<h1 id=\"實作簡單工廠模式\"><a href=\"#實作簡單工廠模式\" class=\"headerlink\" title=\"實作簡單工廠模式\"></a>實作簡單工廠模式</h1><h1 id=\"流程介紹\"><a href=\"#流程介紹\" class=\"headerlink\" title=\"流程介紹\"></a>流程介紹</h1><p><img src=\"/../image/designpattern/factory_1.png\" alt=\"result\" title=\"result\"><br>1.首先我們要有一個主商品模型</p>\n<p>2.其他次商品繼承主商品的特性在另外擴充(extend)其他特性(Property)</p>\n<p>3.工廠接收客戶(client)需求</p>\n<p>4.產出客戶所要的商品</p>\n<h1 id=\"程式碼呈現\"><a href=\"#程式碼呈現\" class=\"headerlink\" title=\"程式碼呈現\"></a>程式碼呈現</h1><h2 style=\"color:red\">主商品模型</h2>\n\n\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IProduct</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">      <span class=\"built_in\">string</span> Name &#123; <span class=\"keyword\">get</span>; &#125;<span class=\"comment\">//名稱</span></span><br><span class=\"line\">      <span class=\"built_in\">int</span> Accoumt&#123;<span class=\"keyword\">get</span>;&#125;<span class=\"comment\">//數量</span></span><br><span class=\"line\">      <span class=\"built_in\">string</span> Size&#123;<span class=\"keyword\">get</span>;&#125;<span class=\"comment\">//尺寸</span></span><br><span class=\"line\">      <span class=\"built_in\">string</span> Ice&#123;<span class=\"keyword\">get</span>;&#125;<span class=\"comment\">//冰塊</span></span><br><span class=\"line\">      <span class=\"built_in\">string</span> Sugar &#123; <span class=\"keyword\">get</span>; &#125;<span class=\"comment\">//甜度</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">doclientproduct</span>(<span class=\"params\"><span class=\"built_in\">int</span> accoumt, <span class=\"built_in\">string</span> size, <span class=\"built_in\">string</span> ice,<span class=\"built_in\">string</span> sugar=<span class=\"string\">&quot;&quot;</span></span>)</span>;<span class=\"comment\">//客人的需求</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">doproduct</span>()</span>;<span class=\"comment\">//無客製化</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">info</span>()</span>;<span class=\"comment\">//顯示資訊</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 style=\"color:red\">次商品繼承主商品模型</h2>\n\n<h3 style=\"color:red\">商品(一)茶類</h3>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">tea</span>:<span class=\"title\">IProduct</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">int</span> accoumt;<span class=\"comment\">//數量</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> size;<span class=\"comment\">//尺寸</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> ice;<span class=\"comment\">//冰塊</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> sugar;<span class=\"comment\">//甜度</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> name;<span class=\"comment\">//名稱</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">tea</span>()</span>&#123;&#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">tea</span>(<span class=\"params\"><span class=\"built_in\">string</span> name</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Accoumt</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">get</span> </span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">               <span class=\"keyword\">return</span> accoumt;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">set</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                accoumt = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Size</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">get</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> size;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">set</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                size = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Ice</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">get</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> ice;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">set</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                ice = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Sugar</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">get</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> sugar;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">set</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                sugar = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Name</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">get</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">set</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                name = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//客製化商品</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doclientproduct</span>(<span class=\"params\"><span class=\"built_in\">int</span> accoumt, <span class=\"built_in\">string</span> size, <span class=\"built_in\">string</span> ice, <span class=\"built_in\">string</span> sugar</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Accoumt = accoumt;</span><br><span class=\"line\">            Size = size;</span><br><span class=\"line\">            Ice= ice;</span><br><span class=\"line\">            Sugar = sugar;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//預設商品</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doproduct</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Accoumt = <span class=\"number\">1</span>;</span><br><span class=\"line\">            Size = <span class=\"string\">&quot;M&quot;</span>;</span><br><span class=\"line\">            Ice = <span class=\"string\">&quot;正常&quot;</span>;</span><br><span class=\"line\">            Sugar = <span class=\"string\">&quot;正常&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//顯示商品資訊</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">info</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Console.WriteLine(name+<span class=\"string\">&quot; 尺寸:&quot;</span> + size + <span class=\"string\">&quot;,冰塊:&quot;</span> + ice +<span class=\"string\">&quot;,甜度:&quot;</span> +sugar+<span class=\"string\">&quot;,數量:&quot;</span> + accoumt);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 style=\"color:red\">商品(二) 水果類</h3>\n\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">fruit</span>:<span class=\"title\">IProduct</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">int</span> accoumt;<span class=\"comment\">//數量</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> size;<span class=\"comment\">//尺寸</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> ice;<span class=\"comment\">//冰塊</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> sugar;<span class=\"comment\">//不給調甜度</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> name;<span class=\"comment\">//名稱</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">fruit</span>(<span class=\"params\"><span class=\"built_in\">string</span> name</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Name = name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Accoumt</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">get</span>&#123;<span class=\"keyword\">return</span> accoumt;&#125;</span><br><span class=\"line\">            <span class=\"keyword\">set</span>&#123;accoumt = <span class=\"keyword\">value</span>;&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Size</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">get</span>&#123;<span class=\"keyword\">return</span> size;&#125;</span><br><span class=\"line\">            <span class=\"keyword\">set</span>&#123;size = <span class=\"keyword\">value</span>;&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Ice</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">get</span></span><br><span class=\"line\">            &#123;<span class=\"keyword\">return</span> ice;&#125;</span><br><span class=\"line\">            <span class=\"keyword\">set</span>&#123;ice = <span class=\"keyword\">value</span>;&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Name</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">get</span>&#123;<span class=\"keyword\">return</span> name;&#125;</span><br><span class=\"line\">            <span class=\"keyword\">set</span>&#123;name = <span class=\"keyword\">value</span>;&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Sugar</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">get</span>&#123;<span class=\"keyword\">return</span> sugar;&#125;</span><br><span class=\"line\">            <span class=\"keyword\">set</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(<span class=\"keyword\">value</span>==<span class=\"string\">&quot;無糖&quot;</span>)</span><br><span class=\"line\">                sugar = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//客製化商品</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doclientproduct</span>(<span class=\"params\"><span class=\"built_in\">int</span> accoumt, <span class=\"built_in\">string</span> size, <span class=\"built_in\">string</span> ice, <span class=\"built_in\">string</span> sugar=<span class=\"string\">&quot;&quot;</span></span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Accoumt = accoumt;</span><br><span class=\"line\">            Size = size;</span><br><span class=\"line\">            Ice= ice;</span><br><span class=\"line\">            Sugar = <span class=\"string\">&quot;無糖&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//預設商品</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doproduct</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Accoumt = <span class=\"number\">1</span>;</span><br><span class=\"line\">            Size = <span class=\"string\">&quot;M&quot;</span>;</span><br><span class=\"line\">            Ice = <span class=\"string\">&quot;正常&quot;</span>;</span><br><span class=\"line\">            Sugar = <span class=\"string\">&quot;無糖&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//顯示商品</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">info</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Console.WriteLine(name + <span class=\"string\">&quot; 尺寸:&quot;</span> + size + <span class=\"string\">&quot;,冰塊:&quot;</span> + ice + <span class=\"string\">&quot;,甜度:&quot;</span> + sugar + <span class=\"string\">&quot;,數量:&quot;</span> + accoumt);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h3 style=\"color:red\">簡單工廠</h3>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Factory</span> &#123; </span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> IProduct <span class=\"title\">createproduct</span>(<span class=\"params\"><span class=\"built_in\">string</span> type,<span class=\"built_in\">string</span> name</span>)</span></span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (type == <span class=\"string\">&quot;茶類&quot;</span>)</span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">             <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> tea(name);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (type == <span class=\"string\">&quot;水果類&quot;</span>)</span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">             <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> fruit(name);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 style=\"color:red\">接收客戶需求</h3>\n\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">      Factory store = <span class=\"keyword\">new</span> Factory();<span class=\"comment\">//生成工廠</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> client1 = store.createproduct(<span class=\"string\">&quot;茶類&quot;</span>,<span class=\"string\">&quot;紅茶&quot;</span>); <span class=\"comment\">//接收客戶1需求</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> client2 = store.createproduct(<span class=\"string\">&quot;水果類&quot;</span>, <span class=\"string\">&quot;蘋果汁&quot;</span>); <span class=\"comment\">//接收客戶2需求</span></span><br><span class=\"line\">      client1.doproduct(); <span class=\"comment\">//開始製作客戶1的飲料</span></span><br><span class=\"line\">      client2.doclientproduct(<span class=\"number\">1</span>,<span class=\"string\">&quot;M&quot;</span>,<span class=\"string\">&quot;正常&quot;</span>); <span class=\"comment\">//開始製作客戶2的飲料</span></span><br><span class=\"line\">      client1.info(); <span class=\"comment\">//顯示客戶1飲料資訊</span></span><br><span class=\"line\">      client2.info(); <span class=\"comment\">//顯示客戶2飲料資訊</span></span><br><span class=\"line\">      Console.ReadLine();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h3 style=\"color:red\">顯示結果</h3>\n\n<p><img src=\"/../image/designpattern/factory_2.png\" alt=\"result\" title=\"result\"></p>\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><h2 id=\"優點：\"><a href=\"#優點：\" class=\"headerlink\" title=\"優點：\"></a>優點：</h2><p>1.工廠含必要的邏輯判斷，可以決定在什麼時候創建哪一個產品的實例，客戶端可以免除直接創建產品對象的責任。</p>\n<p>2.可以減少使用者的記憶量。</p>\n<p>3.可以在不修改客戶端資料的情況下，變更或新增具體產品，提高了系統的靈活性。</p>\n<h2 id=\"缺點：\"><a href=\"#缺點：\" class=\"headerlink\" title=\"缺點：\"></a>缺點：</h2><p>1.工廠集中所有產品的創建邏輯，一旦無法正常使用，整個系統都受影響。</p>\n<p>2.系統擴展困難，一旦增加新產品就不得不修改工廠邏輯，而在產品多的情況下，可能造成工廠邏輯複雜，不利於系統的擴展與維護。</p>\n","categories":["C#","Design Pattern"],"tags":["C#","Design Pattern","oop","創建模式","工廠模式"]},{"title":"Javascript(leetcode100)   Same Tree","url":"/leetcode/leetcode100/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the roots of two binary trees p and q, write a function to check if they are the same or not.</p>\n<p>Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定兩個二叉樹 p 和 q 的根，編寫一個函數來檢查它們是否相同。</p>\n<p>如果兩個二叉樹在結構上相同並且節點具有相同的值，則它們被認為是相同的。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode100_1.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: p = [1,2,3], q = [1,2,3]</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:<br><img src=\"/../image/leetcode/leetcode100_2.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: p = [1,2], q = [1,null,2]</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:<br><img src=\"/../image/leetcode/leetcode100_3.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: p = [1,2,1], q = [1,1,2]</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用動態規劃<br>2.分析條件</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> isSameTree = <span class=\"keyword\">function</span> (<span class=\"params\">p, q</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">let</span> dp = <span class=\"keyword\">function</span> (<span class=\"params\">p, q</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p == <span class=\"literal\">null</span> &amp;&amp; q == <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p != <span class=\"literal\">null</span> &amp;&amp; q == <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p == <span class=\"literal\">null</span> &amp;&amp; q != <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> p.<span class=\"property\">val</span> === q.<span class=\"property\">val</span> &amp;&amp; <span class=\"title function_\">dp</span>(p.<span class=\"property\">left</span>, q.<span class=\"property\">left</span>) &amp;&amp; <span class=\"title function_\">dp</span>(p.<span class=\"property\">right</span>, q.<span class=\"property\">right</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">dp</span>(p, q);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#102)  Binary Tree Level Order Traversal","url":"/leetcode/leetcode102/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the root of a binary tree, return the level order traversal of its nodes’ values. (i.e., from left to right, level by level).</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定二叉樹的根，返回其節點值的級別順序遍歷。 （即從左到右，逐級）。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode102_1.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [3,9,20,null,null,15,7]</span><br><span class=\"line\">Output: [[3],[9,20],[15,7]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [1]</span><br><span class=\"line\">Output: [[1]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = []</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用遞迴搜尋<br>2.依層級加入陣列裡面</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> levelOrder = <span class=\"keyword\">function</span> (<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> trace = <span class=\"keyword\">function</span> (<span class=\"params\">root, num</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root == <span class=\"literal\">null</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_\">trace</span>(root.<span class=\"property\">left</span>, num + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[num] == <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">            arr[num] = [root.<span class=\"property\">val</span>];</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            arr[num].<span class=\"title function_\">push</span>(root.<span class=\"property\">val</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"title function_\">trace</span>(root.<span class=\"property\">right</span>, num + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">trace</span>(root, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#103)  Binary Tree Zigzag Level Order Traversal","url":"/leetcode/leetcode103/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the root of a binary tree, return the zigzag level order traversal of its nodes’ values. (i.e., from left to right, then right to left for the next level and alternate between).</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定二叉樹的根，返回其節點值的鋸齒形級別順序遍歷。 （即，從左到右，然後從右到左進入下一個級別，並在兩者之間交替）。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode103.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [3,9,20,null,null,15,7]</span><br><span class=\"line\">Output: [[3],[20,9],[15,7]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [1]</span><br><span class=\"line\">Output: [[1]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = []</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用遞迴搜尋<br>2.根據單雙數層級，依push或是unshift方式加入陣列裡面。</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> zigzagLevelOrder = <span class=\"keyword\">function</span> (<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> trace = <span class=\"keyword\">function</span> (<span class=\"params\">root, num</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root == <span class=\"literal\">null</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"title function_\">trace</span>(root.<span class=\"property\">left</span>, num + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"title function_\">trace</span>(root.<span class=\"property\">right</span>, num + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[num] == <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">            arr[num] = [root.<span class=\"property\">val</span>];</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (num % <span class=\"number\">2</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                arr[num].<span class=\"title function_\">unshift</span>(root.<span class=\"property\">val</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                arr[num].<span class=\"title function_\">push</span>(root.<span class=\"property\">val</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">trace</span>(root, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#104)  Maximum Depth of Binary Tree","url":"/leetcode/leetcode104/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the root of a binary tree, return its maximum depth.</p>\n<p>A binary tree’s maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p>\n<span id=\"more\"></span>\n\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定二叉樹的根，返回其最大深度。</p>\n<p>二叉樹的最大深度是從根節點到最遠葉節點的最長路徑上的節點數。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode104.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [3,9,20,null,null,15,7]</span><br><span class=\"line\">Output: 3</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [1,null,2]</span><br><span class=\"line\">Output: 2</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用遞迴搜尋<br>2.找出最大的深度</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> maxDepth = <span class=\"keyword\">function</span> (<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> depth=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> trace = <span class=\"keyword\">function</span> (<span class=\"params\">root, num</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root == <span class=\"literal\">null</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"title function_\">trace</span>(root.<span class=\"property\">left</span>, num + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"title function_\">trace</span>(root.<span class=\"property\">right</span>, num + <span class=\"number\">1</span>);</span><br><span class=\"line\">        depth=<span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(num,depth);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">trace</span>(root, <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> depth;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode101)  Symmetric Tree","url":"/leetcode/leetcode101/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定二叉樹的根，檢查它是否是自身的鏡像（即圍繞其中心對稱）。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode101_1.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [1,2,2,3,4,4,3]</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:<br><img src=\"/../image/leetcode/leetcode101_2.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [1,2,2,null,3,null,3]</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用動態規劃<br>2.分析if條件</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> isSymmetric = <span class=\"keyword\">function</span> (<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = <span class=\"keyword\">function</span> (<span class=\"params\">left, right</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left == <span class=\"literal\">null</span> &amp;&amp; right == <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left != <span class=\"literal\">null</span> &amp;&amp; right == <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left == <span class=\"literal\">null</span> &amp;&amp; right != <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> left.<span class=\"property\">val</span> == right.<span class=\"property\">val</span> &amp;&amp; <span class=\"title function_\">dp</span>(left.<span class=\"property\">left</span>, right.<span class=\"property\">right</span>) &amp;&amp; <span class=\"title function_\">dp</span>(left.<span class=\"property\">right</span>, right.<span class=\"property\">left</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">dp</span>(root.<span class=\"property\">left</span>, root.<span class=\"property\">right</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#105) Construct Binary Tree from Preorder and Inorder Traversal","url":"/leetcode/leetcode105/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given two integer arrays preorder and inorder where preorder is the preorder traversal of a binary tree and inorder is the inorder traversal of the same tree, construct and return the binary tree.</p>\n<span id=\"more\"></span>\n\n\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定兩個整數數組 preorder 和 inorder，其中 preorder 是二叉樹的前序遍歷，inorder 是同一棵樹的中序遍歷，構造並返回二叉樹。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode105.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: preorder = [3,9,20,15,7], inorder = [9,3,15,20,7]</span><br><span class=\"line\">Output: [3,9,20,null,null,15,7]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: preorder = [-1], inorder = [-1]</span><br><span class=\"line\">Output: [-1]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.我們知道預排序數組的第一個索引將是根。<br>2.我們可以在中序數組中找到根的索引。<br>3.中序數組中當前索引左側的所有內容都屬於左子樹。<br>4.右邊的一切都屬於右子樹。</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">helper</span> = (<span class=\"params\">preorder, indexPre, inorder, leftIn, rightIn</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (indexPre &gt; preorder.<span class=\"property\">length</span> - <span class=\"number\">1</span> || leftIn &gt; rightIn) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"keyword\">let</span> root = <span class=\"keyword\">new</span> <span class=\"title class_\">TreeNode</span>(preorder[indexPre]);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> indexOfRoot = inorder.<span class=\"title function_\">indexOf</span>(root.<span class=\"property\">val</span>);   </span><br><span class=\"line\">    <span class=\"keyword\">let</span> nextRightRootIndex = indexPre  - leftIn+indexOfRoot + <span class=\"number\">1</span>;</span><br><span class=\"line\">    root.<span class=\"property\">left</span> = <span class=\"title function_\">helper</span>(preorder, indexPre + <span class=\"number\">1</span>, inorder, leftIn, indexOfRoot - <span class=\"number\">1</span>)</span><br><span class=\"line\">    root.<span class=\"property\">right</span> = <span class=\"title function_\">helper</span>(preorder, nextRightRootIndex, inorder, indexOfRoot + <span class=\"number\">1</span>, rightIn)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> root</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> buildTree = <span class=\"keyword\">function</span>(<span class=\"params\">preorder, inorder</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">helper</span>(preorder, <span class=\"number\">0</span>, inorder, <span class=\"number\">0</span>, inorder.<span class=\"property\">length</span>-<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#11) Container With Most Water","url":"/leetcode/leetcode11/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).</p>\n<p>Find two lines that together with the x-axis form a container, such that the container contains the most water.</p>\n<p>Return the maximum amount of water a container can store.</p>\n<p>Notice that you may not slant the container.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個長度為 n 的整數數組高度。繪製了 n 條垂直線，使得第 i 條線的兩個端點是 (i, 0) 和 (i, height[i])。</p>\n<p>找到兩條線，它們與 x 軸一起形成一個容器，使得容器中的水最多。</p>\n<p>返回容器可以存儲的最大水量。</p>\n<p>請注意，您不能傾斜容器。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<p><img src=\"/../image/leetcode/leetcode11.PNG\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: height = [1,8,6,2,5,4,8,3,7]</span><br><span class=\"line\">Output: 49</span><br><span class=\"line\">Explanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: height = [1,1]</span><br><span class=\"line\">Output: 1</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.兩個變數取最小值為高，兩個變數位置相差為寬<br>2.寬*高&#x3D;面積，取得最大面積<br>3.依上續2點能得到，自身高離比自身高的柱子最大距離就是此柱子的能得到的最大面積</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> water = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> left = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> right = height.<span class=\"property\">length</span> - <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(left &lt; right) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> area = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(height[left], height[right]) * (right - left)</span><br><span class=\"line\">    water = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(area, water)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (height[left] &lt;= height[right]) left++</span><br><span class=\"line\">    <span class=\"keyword\">else</span> right--</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> water</span><br></pre></td></tr></table></figure>\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#12) Integer to Roman","url":"/leetcode/leetcode12/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.</p>\n<p>Symbol       Value<br>I             1<br>V             5<br>X             10<br>L             50<br>C             100<br>D             500<br>M             1000<br>For example, 2 is written as II in Roman numeral, just two one’s added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.</p>\n<p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:</p>\n<p>I can be placed before V (5) and X (10) to make 4 and 9.<br>X can be placed before L (50) and C (100) to make 40 and 90.<br>C can be placed before D (500) and M (1000) to make 400 and 900.<br>Given an integer, convert it to a roman numeral.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>羅馬數字由七個不同的符號表示：I、V、X、L、C、D 和 M。</p>\n<p>Symbol       Value<br>I             1<br>V             5<br>X             10<br>L             50<br>C             100<br>D             500<br>M             1000<br>例如，2 用羅馬數字寫成 II，只是兩個 1 相加。 12寫成XII，就是X+II。數字 27 寫作 XXVII，即 XX + V + II。</p>\n<p>羅馬數字通常從左到右從大到小寫。但是，四的數字不是 IIII。相反，數字四寫為 IV。因為一個在五個之前，所以我們減去它得到四個。同樣的原則也適用於數字九，它寫成 IX。有六個使用減法的實例：</p>\n<p>I 可以放在 V (5) 和 X (10) 之前，組成 4 和 9。<br>X 可以放在 L (50) 和 C (100) 之前，組成 40 和 90。<br>C可以放在D（500）和M（1000）之前，組成400和900。<br>給定一個整數，將其轉換為羅馬數字。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: num = 3</span><br><span class=\"line\">Output: &quot;III&quot;</span><br><span class=\"line\">Explanation: 3 is represented as 3 ones.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: num = 58</span><br><span class=\"line\">Output: &quot;LVIII&quot;</span><br><span class=\"line\">Explanation: L = 50, V = 5, III = 3.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: num = 1994</span><br><span class=\"line\">Output: &quot;MCMXCIV&quot;</span><br><span class=\"line\">Explanation: M = 1000, CM = 900, XC = 90 and IV = 4.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.先把特利的羅馬數字列出來<br>2.依照數字去做組合從大到小</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> intToRoman = <span class=\"keyword\">function</span>(<span class=\"params\">num</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> str=<span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> val=[<span class=\"number\">1000</span>,<span class=\"number\">900</span>,<span class=\"number\">500</span>,<span class=\"number\">400</span>,<span class=\"number\">100</span>,<span class=\"number\">90</span>,<span class=\"number\">50</span>,<span class=\"number\">40</span>,<span class=\"number\">10</span>,<span class=\"number\">9</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"title class_\">Romanstr</span>=[<span class=\"string\">&#x27;M&#x27;</span>,<span class=\"string\">&#x27;CM&#x27;</span>,<span class=\"string\">&#x27;D&#x27;</span>,<span class=\"string\">&#x27;CD&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>,<span class=\"string\">&#x27;XC&#x27;</span>,<span class=\"string\">&#x27;L&#x27;</span>,<span class=\"string\">&#x27;XL&#x27;</span>,<span class=\"string\">&#x27;X&#x27;</span>,<span class=\"string\">&#x27;IX&#x27;</span>,<span class=\"string\">&#x27;V&#x27;</span>,<span class=\"string\">&#x27;IV&#x27;</span>,<span class=\"string\">&#x27;I&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"title class_\">Romanstr</span>.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">       </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(num&gt;=val[i])&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            num-=val[i];</span><br><span class=\"line\">            str+=<span class=\"title class_\">Romanstr</span>[i];</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">       </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> str;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#120) Triangle","url":"/leetcode/leetcode120/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a triangle array, return the minimum path sum from top to bottom.</p>\n<p>For each step, you may move to an adjacent number of the row below. More formally, if you are on index i on the current row, you may move to either index i or index i + 1 on the next row.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個三角形數組，返回從上到下的最小路徑和。</p>\n<p>對於每個步驟，您可以移動到下一行的相鄰編號。 更正式地說，如果您在當前行的索引 i 上，您可以移動到下一行的索引 i 或索引 i + 1。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: triangle = [[2],[3,4],[6,5,7],[4,1,8,3]]</span><br><span class=\"line\">Output: 11</span><br><span class=\"line\">Explanation: The triangle looks like:</span><br><span class=\"line\">   2</span><br><span class=\"line\">  3 4</span><br><span class=\"line\"> 6 5 7</span><br><span class=\"line\">4 1 8 3</span><br><span class=\"line\">The minimum path sum from top to bottom is 2 + 3 + 5 + 1 = 11 (underlined above).</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: triangle = [[-10]]</span><br><span class=\"line\">Output: -10</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用動態規劃，找出規則<br>2.求到規則為<br>  1.j&#x3D;&#x3D;0，新的值會&#x3D;f(i-1,j)+f(i,j);<br>  2.j&#x3D;&#x3D;triangle[i].length - 1，新的值會&#x3D;f(i-1,j)+f(i-1,j-1);<br>  3.其他，新的值會&#x3D;f(i-1,j)+取最小( f(i-1,j-1) OR f(i-1,j) );<br>3 最後在從(triangle.length - 1)陣列中取最小的數字</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> minimumTotal = <span class=\"keyword\">function</span> (<span class=\"params\">triangle</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> min = triangle[<span class=\"number\">0</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; triangle.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; triangle[i].<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (j == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                triangle[i][j] += triangle[i - <span class=\"number\">1</span>][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (j == triangle[i].<span class=\"property\">length</span> - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                triangle[i][j] += triangle[i - <span class=\"number\">1</span>][j - <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                triangle[i][j] += <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(triangle[i - <span class=\"number\">1</span>][j - <span class=\"number\">1</span>], triangle[i - <span class=\"number\">1</span>][j]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i === triangle.<span class=\"property\">length</span> - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            min = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(...triangle[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> min;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#107) Binary Tree Level Order Traversal II","url":"/leetcode/leetcode107/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the root of a binary tree, return the bottom-up level order traversal of its nodes’ values. (i.e., from left to right, level by level from leaf to root).</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定二叉樹的根，返回其節點值的自下而上級別順序遍歷。 （即從左到右，從葉到根逐級）。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p><img src=\"/../image/leetcode/leetcode107.jpg\" alt=\"example\" title=\"example\"><br>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [3,9,20,null,null,15,7]</span><br><span class=\"line\">Output: [[15,7],[9,20],[3]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [1]</span><br><span class=\"line\">Output: [[1]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = []</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.從上到下往下搜尋，將每個層的值塞入自己的層級陣列裡<br>2.由於得到的是從上到下，須將陣列反轉</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> levelOrderBottom = <span class=\"keyword\">function</span> (<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = <span class=\"keyword\">function</span> (<span class=\"params\">root, num</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root == <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[num] == <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">            arr[num] = [root.<span class=\"property\">val</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            arr[num].<span class=\"title function_\">push</span>(root.<span class=\"property\">val</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"title function_\">dp</span>(root.<span class=\"property\">left</span>, num + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"title function_\">dp</span>(root.<span class=\"property\">right</span>, num + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">dp</span>(root, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.<span class=\"title function_\">reverse</span>();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#121) Best Time to Buy and Sell Stock","url":"/leetcode/leetcode121/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>You are given an array prices where prices[i] is the price of a given stock on the ith day.</p>\n<p>You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.</p>\n<p>Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個數組價格，其中價格 [i] 是給定股票在第 i 天的價格。</p>\n<p>您希望通過選擇一天購買一隻股票並選擇未來的另一天出售該股票來最大化您的利潤。</p>\n<p>返回您可以從此交易中獲得的最大利潤。如果您無法獲得任何利潤，則返回 0。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: prices = [7,1,5,3,6,4]</span><br><span class=\"line\">Output: 5</span><br><span class=\"line\">Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.</span><br><span class=\"line\">Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: prices = [7,6,4,3,1]</span><br><span class=\"line\">Output: 0</span><br><span class=\"line\">Explanation: In this case, no transactions are done and the max profit = 0.</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.先定義一個min存放當前的最小值<br>2.若價錢比最小值大時，比較利潤若比max大時改變max<br>3.min遇到比自己小時，更改min的值<br>4.最後返回max</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span> (<span class=\"params\">prices</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> min = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; prices.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (min == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            min = prices[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (min &lt; prices[i]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> val = prices[i] - min;</span><br><span class=\"line\">            max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(max, val);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            min = prices[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#122) Best Time to Buy and Sell Stock II","url":"/leetcode/leetcode122/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>You are given an integer array prices where prices[i] is the price of a given stock on the ith day.</p>\n<p>On each day, you may decide to buy and&#x2F;or sell the stock. You can only hold at most one share of the stock at any time. However, you can buy it then immediately sell it on the same day.</p>\n<p>Find and return the maximum profit you can achieve.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個整數數組價格，其中價格 [i] 是給定股票在第 i 天的價格。</p>\n<p>在每一天，您都可以決定買入和&#x2F;或賣出股票。您在任何時候最多只能持有一股股票。但是，您可以購買它，然後在同一天立即出售。</p>\n<p>找到並返還您可以實現的最大利潤。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: prices = [7,1,5,3,6,4]</span><br><span class=\"line\">Output: 7</span><br><span class=\"line\">Explanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.</span><br><span class=\"line\">Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.</span><br><span class=\"line\">Total profit is 4 + 3 = 7.</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: prices = [1,2,3,4,5]</span><br><span class=\"line\">Output: 4</span><br><span class=\"line\">Explanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.</span><br><span class=\"line\">Total profit is 4.</span><br></pre></td></tr></table></figure>\n\n\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: prices = [7,6,4,3,1]</span><br><span class=\"line\">Output: 0</span><br><span class=\"line\">Explanation: There is no way to make a positive profit, so we never buy the stock to achieve the maximum profit of 0.</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> maxProfit = <span class=\"keyword\">function</span>(<span class=\"params\">prices</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> maxProfit = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> buyPrice = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>( <span class=\"keyword\">let</span> sellPrice = <span class=\"number\">1</span>; sellPrice &lt; prices.<span class=\"property\">length</span>; sellPrice++ )&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( prices[buyPrice] &gt; prices[sellPrice] ) &#123;</span><br><span class=\"line\">            buyPrice = sellPrice</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( prices[buyPrice] &lt; prices[sellPrice] )&#123;</span><br><span class=\"line\">            maxProfit += prices[sellPrice] - prices[buyPrice]</span><br><span class=\"line\">            buyPrice = sellPrice</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> maxProfit</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#125) Valid Palindrome","url":"/leetcode/leetcode125/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.</p>\n<p>Given a string s, return true if it is a palindrome, or false otherwise.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>一個短語是回文，如果在將所有大寫字母轉換為小寫字母並刪除所有非字母數字字符後，它向前和向後讀取相同。 字母數字字符包括字母和數字。</p>\n<p>給定一個字符串 s，如果它是回文則返回 true，否則返回 false。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;A man, a plan, a canal: Panama&quot;</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: &quot;amanaplanacanalpanama&quot; is a palindrome.</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;race a car&quot;</span><br><span class=\"line\">Output: false</span><br><span class=\"line\">Explanation: &quot;raceacar&quot; is not a palindrome.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot; &quot;</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: s is an empty string &quot;&quot; after removing non-alphanumeric characters.</span><br><span class=\"line\">Since an empty string reads the same forward and backward, it is a palindrome.</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.先將非數字及英文字母的符號去掉<br>2.判斷是否為回文</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str=s.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/[^a-z|^A-Z|^\\d]/g</span>,<span class=\"string\">&quot;&quot;</span>).<span class=\"title function_\">toLocaleLowerCase</span>();</span><br><span class=\"line\"><span class=\"keyword\">let</span> start=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> end=str.<span class=\"property\">length</span>-<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(start&lt;end)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(str[start]!=str[end])&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    start++;</span><br><span class=\"line\">    end--;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#13)  Roman to Integer","url":"/leetcode/leetcode13/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.</p>\n<p>Symbol       Value<br>I             1<br>V             5<br>X             10<br>L             50<br>C             100<br>D             500<br>M             1000<br>For example, 2 is written as II in Roman numeral, just two ones added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.</p>\n<p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:</p>\n<p>I can be placed before V (5) and X (10) to make 4 and 9.<br>X can be placed before L (50) and C (100) to make 40 and 90.<br>C can be placed before D (500) and M (1000) to make 400 and 900.<br>Given a roman numeral, convert it to an integer.</p>\n<span id=\"more\"></span>\n\n<p>羅馬數字由七個不同的符號表示：I、V、X、L、C、D 和 M。</p>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>Symbol       Value<br>I             1<br>V             5<br>X             10<br>L             50<br>C             100<br>D             500<br>M             1000</p>\n<p>例如，2 用羅馬數字寫成 II，只是兩個加在一起。 12寫成XII，就是X+II。數字 27 寫作 XXVII，即 XX + V + II。</p>\n<p>羅馬數字通常從左到右從大到小寫。但是，四的數字不是 IIII。相反，數字四寫為 IV。因為一個在五個之前，所以我們減去它得到四個。同樣的原則也適用於數字九，它寫成 IX。有六個使用減法的實例：</p>\n<p>I 可以放在 V (5) 和 X (10) 之前，組成 4 和 9。<br>X 可以放在 L (50) 和 C (100) 之前，組成 40 和 90。<br>C可以放在D（500）和M（1000）之前，組成400和900。<br>給定一個羅馬數字，將其轉換為整數。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;III&quot;</span><br><span class=\"line\">Output: 3</span><br><span class=\"line\">Explanation: III = 3.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;LVIII&quot;</span><br><span class=\"line\">Output: 58</span><br><span class=\"line\">Explanation: L = 50, V= 5, III = 3.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;MCMXCIV&quot;</span><br><span class=\"line\">Output: 1994</span><br><span class=\"line\">Explanation: M = 1000, CM = 900, XC = 90 and IV = 4.</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.先把的羅馬數字規則存到一個物件裡<br>2.特殊規則為後面的羅馬數字大於前面時，須由大減小得到新的數字</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> romanToInt = <span class=\"keyword\">function</span>(<span class=\"params\">str</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">        <span class=\"attr\">I</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"attr\">V</span>: <span class=\"number\">5</span>,</span><br><span class=\"line\">        <span class=\"attr\">X</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">        <span class=\"attr\">L</span>: <span class=\"number\">50</span>,</span><br><span class=\"line\">        <span class=\"attr\">C</span>: <span class=\"number\">100</span>,</span><br><span class=\"line\">        <span class=\"attr\">D</span>: <span class=\"number\">500</span>,</span><br><span class=\"line\">        <span class=\"attr\">M</span>: <span class=\"number\">1000</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; str.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (obj[str[i]] &lt; obj[str[i + <span class=\"number\">1</span>]] &amp;&amp; i != str.<span class=\"property\">length</span> - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            num += obj[str[i + <span class=\"number\">1</span>]] - obj[str[i]];</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            num += obj[str[i]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#130)  Surrounded Regions","url":"/leetcode/leetcode130/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an m x n matrix board containing ‘X’ and ‘O’, capture all regions that are 4-directionally surrounded by ‘X’.</p>\n<p>A region is captured by flipping all ‘O’s into ‘X’s in that surrounded region.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個包含 ‘X’ 和 ‘O’ 的 m x n 矩陣板，捕獲所有被 ‘X’ 4 方向包圍的區域。</p>\n<p>通過將周圍區域中的所有“O”翻轉為“X”來捕獲一個區域。</p>\n<h1 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h1><p><img src=\"/../image/leetcode/leetcode130.jpg\" alt=\"Example\" title=\"Example\"><br>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: board = [[&quot;X&quot;,&quot;X&quot;,&quot;X&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;O&quot;,&quot;O&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;X&quot;,&quot;O&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;O&quot;,&quot;X&quot;,&quot;X&quot;]]</span><br><span class=\"line\">Output: [[&quot;X&quot;,&quot;X&quot;,&quot;X&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;X&quot;,&quot;X&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;X&quot;,&quot;X&quot;,&quot;X&quot;],[&quot;X&quot;,&quot;O&quot;,&quot;X&quot;,&quot;X&quot;]]</span><br><span class=\"line\">Explanation: Notice that an &#x27;O&#x27; should not be flipped if:</span><br><span class=\"line\">- It is on the border, or</span><br><span class=\"line\">- It is adjacent to an &#x27;O&#x27; that should not be flipped.</span><br><span class=\"line\">The bottom &#x27;O&#x27; is on the border, so it is not flipped.</span><br><span class=\"line\">The other three &#x27;O&#x27; form a surrounded region, so they are flipped.</span><br></pre></td></tr></table></figure>\n\n\n<p>Example2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: board = [[&quot;X&quot;]]</span><br><span class=\"line\">Output: [[&quot;X&quot;]]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用遞迴解<br>2.分成小問題<br>3.找出條件<br>  1.上下左右都必須是X,<br>  2.若旁邊為牆壁時返回false<br>  3.若是上下左右是O時則將碰到(i,j)傳進遞迴裡判斷</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> solve = <span class=\"keyword\">function</span> (<span class=\"params\">board</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> listarr = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> jude = <span class=\"keyword\">function</span> (<span class=\"params\">board, arr, i, j</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i - <span class=\"number\">1</span> &lt; <span class=\"number\">0</span> || i + <span class=\"number\">1</span> &gt; board.<span class=\"property\">length</span> - <span class=\"number\">1</span> || j - <span class=\"number\">1</span> &lt; <span class=\"number\">0</span> || j + <span class=\"number\">1</span> &gt; board[i].<span class=\"property\">length</span> - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (board[i + <span class=\"number\">1</span>][j] == <span class=\"string\">&quot;O&quot;</span> &amp;&amp; arr[<span class=\"string\">`<span class=\"subst\">$&#123;i+<span class=\"number\">1</span>&#125;</span>,<span class=\"subst\">$&#123;j&#125;</span>`</span>] == <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">            arr[<span class=\"string\">`<span class=\"subst\">$&#123;i+<span class=\"number\">1</span>&#125;</span>,<span class=\"subst\">$&#123;j&#125;</span>`</span>] = [i + <span class=\"number\">1</span>, j];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_\">jude</span>(board, arr, i + <span class=\"number\">1</span>, j) == <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (board[i - <span class=\"number\">1</span>][j] == <span class=\"string\">&quot;O&quot;</span> &amp;&amp; arr[<span class=\"string\">`<span class=\"subst\">$&#123;i-<span class=\"number\">1</span>&#125;</span>,<span class=\"subst\">$&#123;j&#125;</span>`</span>] == <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">            arr[<span class=\"string\">`<span class=\"subst\">$&#123;i-<span class=\"number\">1</span>&#125;</span>,<span class=\"subst\">$&#123;j&#125;</span>`</span>] = [i - <span class=\"number\">1</span>, j];</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_\">jude</span>(board, arr, i - <span class=\"number\">1</span>, j) == <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (board[i][j - <span class=\"number\">1</span>] == <span class=\"string\">&quot;O&quot;</span> &amp;&amp; arr[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>,<span class=\"subst\">$&#123;j-<span class=\"number\">1</span>&#125;</span>`</span>] == <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">            arr[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>,<span class=\"subst\">$&#123;j-<span class=\"number\">1</span>&#125;</span>`</span>] = [i, j - <span class=\"number\">1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_\">jude</span>(board, arr, i, j - <span class=\"number\">1</span>) == <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (board[i][j + <span class=\"number\">1</span>] == <span class=\"string\">&quot;O&quot;</span> &amp;&amp; arr[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>,<span class=\"subst\">$&#123;j+<span class=\"number\">1</span>&#125;</span>`</span>] == <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">            arr[<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>,<span class=\"subst\">$&#123;j+<span class=\"number\">1</span>&#125;</span>`</span>] = [i, j + <span class=\"number\">1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_\">jude</span>(board, arr, i, j + <span class=\"number\">1</span>) == <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; board.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; board[i].<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (board[i][j] == <span class=\"string\">&quot;O&quot;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> arr = &#123;&#125;;</span><br><span class=\"line\">                arr[i + <span class=\"string\">&quot;,&quot;</span> + j] = [i, j];</span><br><span class=\"line\">                <span class=\"keyword\">let</span> d = <span class=\"title function_\">jude</span>(board, arr, i, j);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (d != <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">                    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(d);</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> d) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">let</span> sp = i.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;,&quot;</span>);</span><br><span class=\"line\">                        board[sp[<span class=\"number\">0</span>]][sp[<span class=\"number\">1</span>]] = <span class=\"string\">&quot;X&quot;</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> board;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#128)  Longest Consecutive Sequence","url":"/leetcode/leetcode128/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.</p>\n<p>You must write an algorithm that runs in O(n) time.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個未排序的整數數組，返回最長連續元素序列的長度。</p>\n<p>您必須編寫一個在 O(n) 時間內運行的算法。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [100,4,200,1,3,2]</span><br><span class=\"line\">Output: 4</span><br><span class=\"line\">Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.</span><br></pre></td></tr></table></figure>\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [0,3,7,2,5,8,4,6,0,1]</span><br><span class=\"line\">Output: 9</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.紀錄每個連續數的長度</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> longestConsecutive = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dict = &#123;&#125;;</span><br><span class=\"line\">    nums.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        dict[item] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ans =<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> seq = <span class=\"number\">0</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">let</span> temp = nums[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(dict[temp]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(dict[temp]) &#123;</span><br><span class=\"line\">                seq = seq + <span class=\"title class_\">Number</span>(dict[temp]);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(dict[temp] &gt; <span class=\"number\">1</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                temp--;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        dict[nums[i]] = seq;</span><br><span class=\"line\">        ans = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(ans, seq);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#134)  Gas Station","url":"/leetcode/leetcode134/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>There are n gas stations along a circular route, where the amount of gas at the ith station is gas[i].</p>\n<p>You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from the ith station to its next (i + 1)th station. You begin the journey with an empty tank at one of the gas stations.</p>\n<p>Given two integer arrays gas and cost, return the starting gas station’s index if you can travel around the circuit once in the clockwise direction, otherwise return -1. If there exists a solution, it is guaranteed to be unique</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>沿環形路線有 n 個加油站，第 i 個加油站的加油量為 gas[i]。</p>\n<p>你有一輛油箱無限的汽車，從第 i 個站到下一個 (i + 1) 個站需要花費 [i] 的汽油。 您從其中一個加油站的空油箱開始旅程。</p>\n<p>給定兩個整數數組 gas 和 cost，如果您可以沿順時針方向繞電路一圈，則返回起始加油站的索引，否則返回 -1。 如果存在解，則保證唯一</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: gas = [1,2,3,4,5], cost = [3,4,5,1,2]</span><br><span class=\"line\">Output: 3</span><br><span class=\"line\">Explanation:</span><br><span class=\"line\">Start at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4</span><br><span class=\"line\">Travel to station 4. Your tank = 4 - 1 + 5 = 8</span><br><span class=\"line\">Travel to station 0. Your tank = 8 - 2 + 1 = 7</span><br><span class=\"line\">Travel to station 1. Your tank = 7 - 3 + 2 = 6</span><br><span class=\"line\">Travel to station 2. Your tank = 6 - 4 + 3 = 5</span><br><span class=\"line\">Travel to station 3. The cost is 5. Your gas is just enough to travel back to station 3.</span><br><span class=\"line\">Therefore, return 3 as the starting index.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: gas = [2,3,4], cost = [3,4,3]</span><br><span class=\"line\">Output: -1</span><br><span class=\"line\">Explanation:</span><br><span class=\"line\">You can&#x27;t start at station 0 or 1, as there is not enough gas to travel to the next station.</span><br><span class=\"line\">Let&#x27;s start at station 2 and fill up with 4 unit of gas. Your tank = 0 + 4 = 4</span><br><span class=\"line\">Travel to station 0. Your tank = 4 - 3 + 2 = 3</span><br><span class=\"line\">Travel to station 1. Your tank = 3 - 3 + 3 = 3</span><br><span class=\"line\">You cannot travel back to station 2, as it requires 4 unit of gas but you only have 3.</span><br><span class=\"line\">Therefore, you can&#x27;t travel around the circuit once no matter where you start.</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.已知返回原位必須經過所有的gas陣列<br>2.total紀錄經過的所有的和<br>3.start紀錄解的位置<br>4.curr紀錄當前的油量是否夠</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> canCompleteCircuit = <span class=\"keyword\">function</span>(<span class=\"params\">gas, cost</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> [curr, total, start] = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; gas.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        total += gas[i] - cost[i];</span><br><span class=\"line\">        curr += gas[i] - cost[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(curr &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            curr = <span class=\"number\">0</span>;</span><br><span class=\"line\">            start = i+<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;   </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> total &gt;= <span class=\"number\">0</span> ? start : -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#136) Single Number","url":"/leetcode/leetcode136/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.</p>\n<p>You must implement a solution with a linear runtime complexity and use only constant extra space.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個非空整數數組 nums，每個元素出現兩次，除了一個。找到那個單一的。</p>\n<p>您必須實現具有線性運行時復雜性的解決方案，並且只使用恆定的額外空間。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [2,2,1]</span><br><span class=\"line\">Output: 1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [4,1,2,1,2]</span><br><span class=\"line\">Output: 4</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [1]</span><br><span class=\"line\">Output: 1</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.先將nums降冪或升冪排列<br>2.start不等於start+1的數就是唯一數</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> singleNumber = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = nums.<span class=\"title function_\">sort</span>();</span><br><span class=\"line\">    <span class=\"keyword\">let</span> start = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (start &lt; arr.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[start] != arr[start + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> arr[start];</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            start += <span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#14)  Longest Common Prefix","url":"/leetcode/leetcode14/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Write a function to find the longest common prefix string amongst an array of strings.</p>\n<p>If there is no common prefix, return an empty string “”.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>編寫一個函數來查找字符串數組中最長的公共前綴字符串。</p>\n<p>如果沒有公共前綴，則返回一個空字符串””</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: strs = [&quot;flower&quot;,&quot;flow&quot;,&quot;flight&quot;]</span><br><span class=\"line\">Output: &quot;fl&quot;</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: strs = [&quot;dog&quot;,&quot;racecar&quot;,&quot;car&quot;]</span><br><span class=\"line\">Output: &quot;&quot;</span><br><span class=\"line\">Explanation: There is no common prefix among the input strings.</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.從第一個陣列第一個字比對後面的陣列</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> longestCommonPrefix = <span class=\"keyword\">function</span> (<span class=\"params\">strs</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (strs.<span class=\"property\">length</span> &lt;= <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> first = strs[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> checkstr = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> len = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; first.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> str = first[i];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> y = <span class=\"number\">0</span>; y &lt; strs.<span class=\"property\">length</span>; y++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (str != strs[y][i]) &#123;</span><br><span class=\"line\">                checkstr = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (checkstr == <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        len += str;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> len;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#15)  3Sum","url":"/leetcode/leetcode15/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i !&#x3D; j, i !&#x3D; k, and j !&#x3D; k, and nums[i] + nums[j] + nums[k] &#x3D;&#x3D; 0.</p>\n<p>Notice that the solution set must not contain duplicate triplets.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個整數數組 nums，返回所有三元組 [nums[i], nums[j], nums[k]] 使得 i !&#x3D; j, i !&#x3D; k, and j !&#x3D; k, and nums[i] + nums[j] + nums[k] &#x3D;&#x3D; 0。</p>\n<p>請注意，解決方案集不得包含重複的三元組。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [-1,0,1,2,-1,-4]</span><br><span class=\"line\">Output: [[-1,-1,2],[-1,0,1]]</span><br><span class=\"line\">Explanation: </span><br><span class=\"line\">nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.</span><br><span class=\"line\">nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.</span><br><span class=\"line\">nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0.</span><br><span class=\"line\">The distinct triplets are [-1,0,1] and [-1,-1,2].</span><br><span class=\"line\">Notice that the order of the output and the order of the triplets does not matter.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [0,1,1]</span><br><span class=\"line\">Output: []</span><br><span class=\"line\">Explanation: The only possible triplet does not sum up to 0.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [0,0,0]</span><br><span class=\"line\">Output: [[0,0,0]]</span><br><span class=\"line\">Explanation: The only possible triplet sums up to 0.</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.先將陣列小到大排列<br>2.避免重複組合 第一個數字判斷數字是否跟上一個數字相同<br>3.總和為0時 記錄起來 避免重複組合 left和right判斷下一個數字是否跟當前數字相同</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> threeSum = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = []</span><br><span class=\"line\">    nums.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> a - b)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[i] === nums[i - <span class=\"number\">1</span>])</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> target = -nums[i]</span><br><span class=\"line\">        <span class=\"keyword\">let</span> left = i + <span class=\"number\">1</span>, right = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (left &lt; right) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[left] + nums[right] === target) &#123;</span><br><span class=\"line\">                res.<span class=\"title function_\">push</span>([nums[left], -target, nums[right]])</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (nums[left] === nums[left + <span class=\"number\">1</span>])</span><br><span class=\"line\">                    left++</span><br><span class=\"line\">                left++</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (nums[right] === nums[right - <span class=\"number\">1</span>])</span><br><span class=\"line\">                    right--</span><br><span class=\"line\">                right--</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nums[left] + nums[right] &gt; target)</span><br><span class=\"line\">                right--</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                left++</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#17) Letter Combinations of a Phone Number","url":"/leetcode/leetcode17/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order.</p>\n<p>A mapping of digits to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.</p>\n<p><img src=\"/../image/leetcode/leetcode17.png\" alt=\"example\" title=\"example\"></p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個包含 2-9 數字的字符串，返回該數字可以表示的所有可能的字母組合。以任意順序返回答案。</p>\n<p>下面給出了數字到字母的映射（就像在電話按鈕上一樣）。請注意，1 不映射到任何字母。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: digits = &quot;23&quot;</span><br><span class=\"line\">Output: [&quot;ad&quot;,&quot;ae&quot;,&quot;af&quot;,&quot;bd&quot;,&quot;be&quot;,&quot;bf&quot;,&quot;cd&quot;,&quot;ce&quot;,&quot;cf&quot;]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: digits = &quot;&quot;</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: digits = &quot;2&quot;</span><br><span class=\"line\">Output: [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.可將組合分解成較小的組合case<br>2.再一較小的組合case一層層增加</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> letterCombinations = <span class=\"keyword\">function</span>(<span class=\"params\">digits</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> obj=&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;2&quot;</span>:<span class=\"string\">&quot;abc&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;3&quot;</span>:<span class=\"string\">&quot;def&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;4&quot;</span>:<span class=\"string\">&quot;ghi&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;5&quot;</span>:<span class=\"string\">&quot;jkl&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;6&quot;</span>:<span class=\"string\">&quot;mno&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;7&quot;</span>:<span class=\"string\">&quot;pqrs&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;8&quot;</span>:<span class=\"string\">&quot;tuv&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;9&quot;</span>:<span class=\"string\">&quot;wxyz&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> combs=digits?[<span class=\"string\">&quot;&quot;</span>]:[];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> digit <span class=\"keyword\">of</span> digits)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> newval=[];</span><br><span class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> comb <span class=\"keyword\">of</span> combs)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> objitem <span class=\"keyword\">of</span> obj[digit])&#123;</span><br><span class=\"line\">            newval.<span class=\"title function_\">push</span>(comb+objitem);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       combs=newval;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> combs;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#16)  3Sum Closest","url":"/leetcode/leetcode16/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target.</p>\n<p>Return the sum of the three integers.</p>\n<p>You may assume that each input would have exactly one solution.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個長度為 n 的整數數組 nums 和一個整數目標，在 nums 中找到三個整數，使得總和最接近目標。</p>\n<p>返回三個整數的和。</p>\n<p>您可以假設每個輸入都只有一個解決方案。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [-1,2,1,-4], target = 1</span><br><span class=\"line\">Output: 2</span><br><span class=\"line\">Explanation: The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [0,0,0], target = 1</span><br><span class=\"line\">Output: 0</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.先將陣列小到大排列<br>2.避免重複組合 第一個數字判斷數字是否跟上一個數字相同<br>3.相差大於min相差時 記錄起來</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> threeSumClosest=<span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">let</span> min=<span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> newarr=nums.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> a-b;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;newarr.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(newarr[i]==newarr[i-<span class=\"number\">1</span>])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> left=i+<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> right=newarr.<span class=\"property\">length</span>-<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(left&lt;right)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> leftval=newarr[left];</span><br><span class=\"line\">                <span class=\"keyword\">let</span> rightval=newarr[right];</span><br><span class=\"line\">                <span class=\"keyword\">let</span> sum=leftval+rightval+newarr[i];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(min==<span class=\"literal\">null</span>||(<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(target-min)&gt;<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(target-sum)))&#123;</span><br><span class=\"line\">                    min=sum;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(target&gt;sum)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">                    left++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    right--;</span><br><span class=\"line\">                &#125;            </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> min;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#18) 4Sum","url":"/leetcode/leetcode18/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an array nums of n integers, return an array of all the unique quadruplets [nums[a], nums[b], nums[c], nums[d]] such that:</p>\n<p>0 &lt;&#x3D; a, b, c, d &lt; n<br>a, b, c, and d are distinct.<br>nums[a] + nums[b] + nums[c] + nums[d] &#x3D;&#x3D; target<br>You may return the answer in any order.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個包含 n 個整數的數組 nums，返回一個包含所有唯一四元組 [nums[a], nums[b], nums[c], nums[d]] 的數組，使得：</p>\n<p>0 &lt;&#x3D; a, b, c, d &lt; n<br>a、b、c 和 d 是不同的。<br>nums[a] + nums[b] + nums[c] + nums[d] &#x3D;&#x3D; 目標<br>您可以按任何順序返回答案。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [1,0,-1,0,-2,2], target = 0</span><br><span class=\"line\">Output: [[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [2,2,2,2,2], target = 8</span><br><span class=\"line\">Output: [[2,2,2,2]]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.先將陣列小到大排列<br>2.避免重複組合 第一個數字判斷數字是否跟上一個數字相同<br>3.總和為target時 記錄起來 避免重複組合 left和right判斷下一個數字是否跟當前數字相同</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fourSum = <span class=\"keyword\">function</span> (<span class=\"params\">nums, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">    nums=nums.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span>a-b);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[i]===nums[i-<span class=\"number\">1</span>]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> val = nums[i];</span><br><span class=\"line\">      </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i + <span class=\"number\">1</span>; j &lt; nums.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[j]===nums[j-<span class=\"number\">1</span>]&amp;&amp;j!=i+<span class=\"number\">1</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> inval = nums[j];</span><br><span class=\"line\">            <span class=\"keyword\">let</span> left = j + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> right = nums.<span class=\"property\">length</span>-<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (left &lt; right) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> sum = val + inval + nums[left] + nums[right];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sum === target) &#123;</span><br><span class=\"line\">                    arr.<span class=\"title function_\">push</span>([val, inval, nums[left], nums[right]]);</span><br><span class=\"line\">                    <span class=\"keyword\">while</span>(nums[left]==nums[left+<span class=\"number\">1</span>]) left++;</span><br><span class=\"line\">                    <span class=\"keyword\">while</span>(nums[right]==nums[right-<span class=\"number\">1</span>]) right--;</span><br><span class=\"line\">                    left++;</span><br><span class=\"line\">                    right--;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sum&gt;target)&#123;</span><br><span class=\"line\">                    right--;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sum&lt;target)&#123;</span><br><span class=\"line\">                    left++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#19) Remove Nth Node From End of List","url":"/leetcode/leetcode19/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the head of a linked list, remove the nth node from the end of the list and return its head.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定鍊錶的頭，從鍊錶的末尾刪除第 n 個節點並返回它的頭。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1<br><img src=\"/../image/leetcode/leetcode19.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1,2,3,4,5], n = 2</span><br><span class=\"line\">Output: [1,2,3,5]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1], n = 1</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1,2], n = 1</span><br><span class=\"line\">Output: [1]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.先計算link list長度<br>2.設pre的node和cur的node<br>3.如果pre和cur都不為空時，將pre.next改為cur.next<br>4.如果pre為空和cur都不為空時，將head改為head.next</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> removeNthFromEnd = <span class=\"keyword\">function</span> (<span class=\"params\">head, n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> headlen = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> t = head;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        t = t.<span class=\"property\">next</span>;</span><br><span class=\"line\">        headlen++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> len = headlen - n + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cur = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> pre = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cur == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            cur = head;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            pre = cur;</span><br><span class=\"line\">            cur = cur.<span class=\"property\">next</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (cur != <span class=\"literal\">null</span> &amp;&amp; pre != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        pre.<span class=\"property\">next</span> = cur.<span class=\"property\">next</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(pre == <span class=\"literal\">null</span> &amp;&amp; cur != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        head = head.<span class=\"property\">next</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(Leetcode#2) Add Two Numbers","url":"/leetcode/leetcode2/","content":"<p><strong>Difficulty: Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p>\n<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>你將獲得兩個非空的鏈接列表，他們代表兩個非負值的整數.  這些數字以相反順序儲存，並且他們的每個節點都包含一個數字 將兩個數字相加並作為鏈接列表返回</p>\n<p>您可以假設兩個數字不包含任何前導零，但數字0本身除外</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4) </span><br><span class=\"line\">Output: 7 -&gt; 0 -&gt; 8 </span><br><span class=\"line\">Explanation: 342 + 465 = 807.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: l1 = [0], l2 = [0]</span><br><span class=\"line\">Output: [0]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]</span><br><span class=\"line\">Output: [8,9,9,9,0,0,0,1]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.用新的link list儲存相加的結果並回傳</p>\n<p>2.兩個相加有可能大於9，需考慮進位問題</p>\n<p>3 要注意l1和l2有可能長度不同</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> addTwoNumbers = <span class=\"keyword\">function</span>(<span class=\"params\">l1, l2</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">let</span> list,curlist;<span class=\"comment\">//linklist的head,curlist 連接後面用的</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> sum;<span class=\"comment\">//存取相加結果</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> temp=<span class=\"number\">0</span>; <span class=\"comment\">//判斷是否進位</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//11及l2都沒值 及temp不用進位</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(l1||l2||temp&gt;<span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(l1!=<span class=\"literal\">null</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                sum+=l1.<span class=\"property\">val</span>;</span><br><span class=\"line\">                l1=l1.<span class=\"property\">next</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(l2!=<span class=\"literal\">null</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                sum+=l2.<span class=\"property\">val</span>;</span><br><span class=\"line\">                l2=l2.<span class=\"property\">next</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            sum+=temp;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(list==<span class=\"literal\">null</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                list=<span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(sum%<span class=\"number\">10</span>);</span><br><span class=\"line\">                curlist=list;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                curlist.<span class=\"property\">next</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(sum%<span class=\"number\">10</span>);</span><br><span class=\"line\">                curlist=curlist.<span class=\"property\">next</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            temp=<span class=\"built_in\">parseInt</span>(sum/<span class=\"number\">10</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> list;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Code 2 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">var</span> addTwoNumbers = <span class=\"keyword\">function</span>(<span class=\"params\">l1, l2</span>) &#123;     </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">add</span>(l1,l2,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add</span>(<span class=\"params\">l1,l2,pre</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(l1==<span class=\"literal\">null</span>&amp;&amp;l2==<span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> pre?&#123;<span class=\"attr\">val</span>:pre,<span class=\"attr\">next</span>:<span class=\"literal\">null</span>&#125;:<span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">        sum=(l1?l1.<span class=\"property\">val</span>:<span class=\"number\">0</span>)+(l2?l2.<span class=\"property\">val</span>:<span class=\"number\">0</span>)+pre;</span><br><span class=\"line\">        l1=l1?l1.<span class=\"property\">next</span>:<span class=\"literal\">null</span>;</span><br><span class=\"line\">        l2=l2?l2.<span class=\"property\">next</span>:<span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;<span class=\"attr\">val</span>:sum%<span class=\"number\">10</span>,<span class=\"attr\">next</span>:<span class=\"title function_\">add</span>(l1,l2,<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(sum/<span class=\"number\">10</span>))&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#21)  Merge Two Sorted Lists","url":"/leetcode/leetcode21/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>You are given the heads of two sorted linked lists list1 and list2.</p>\n<p>Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.</p>\n<p>Return the head of the merged linked list.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給你兩個排序的鍊錶list1 和list2 的頭。</p>\n<p>將兩個列表合併到一個排序列表中。該列表應通過將前兩個列表的節點拼接在一起來製作。</p>\n<p>返回合併鍊錶的頭部。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<p><img src=\"/../image/leetcode/leetcode19.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: list1 = [1,2,4], list2 = [1,3,4]</span><br><span class=\"line\">Output: [1,1,2,3,4,4]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: list1 = [], list2 = []</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: list1 = [], list2 = [0]</span><br><span class=\"line\">Output: [0]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.檢查兩個link list是否為空不是的互相比較值<br>2.再把最後剩餘的list塞到新的list後</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mergeTwoLists = <span class=\"keyword\">function</span>(<span class=\"params\">list1, list2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> newlinklist = <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cur=newlinklist;</span><br><span class=\"line\">     <span class=\"keyword\">while</span>(list1!=<span class=\"literal\">null</span>&amp;&amp;list2!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(list1.<span class=\"property\">val</span>&lt;list2.<span class=\"property\">val</span>)&#123;</span><br><span class=\"line\">            cur.<span class=\"property\">next</span>=list1;</span><br><span class=\"line\">            list1=list1.<span class=\"property\">next</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            cur.<span class=\"property\">next</span>=list2;</span><br><span class=\"line\">            list2=list2.<span class=\"property\">next</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cur=cur.<span class=\"property\">next</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(list1!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        cur.<span class=\"property\">next</span>=list1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(list2!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        cur.<span class=\"property\">next</span>=list2;</span><br><span class=\"line\"> </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newlinklist.<span class=\"property\">next</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#20)  Valid Parentheses","url":"/leetcode/leetcode20/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a string s containing just the characters ‘(‘, ‘)’, ‘{‘, ‘}’, ‘[‘ and ‘]’, determine if the input string is valid.</p>\n<p>An input string is valid if:</p>\n<p>Open brackets must be closed by the same type of brackets.<br>Open brackets must be closed in the correct order.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個僅包含字符 ‘(‘, ‘)’, ‘{‘, ‘}’, ‘[‘ 和 ‘]’ 的字符串 s，確定輸入字符串是否有效。</p>\n<p>輸入字符串在以下情況下有效：</p>\n<p>開括號必須用相同類型的括號閉合。<br>開括號必須以正確的順序閉合。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;()&quot;</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;()[]&#123;&#125;&quot;</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;(]&quot;</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.檢查是否為前墜的字元，是的話放入堆疊中<br>2.不是前墜的字元，跟堆疊中最後一個字比對</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> isValid = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> obj=&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;&#123;&quot;</span>:<span class=\"string\">&quot;&#125;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;[&quot;</span>:<span class=\"string\">&quot;]&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;(&quot;</span>:<span class=\"string\">&quot;)&quot;</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr=[];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;s.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> char=s[i];</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(obj[char])&#123;</span><br><span class=\"line\">         arr.<span class=\"title function_\">push</span>(obj[char]);</span><br><span class=\"line\">       &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">         <span class=\"keyword\">if</span>(arr.<span class=\"title function_\">pop</span>()!=char)&#123;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.<span class=\"property\">length</span>===<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#22) Generate Parentheses","url":"/leetcode/leetcode22/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定 n 對括號，編寫一個函數來生成格式正確的括號的所有組合。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 3</span><br><span class=\"line\">Output: [&quot;((()))&quot;,&quot;(()())&quot;,&quot;(())()&quot;,&quot;()(())&quot;,&quot;()()()&quot;]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 1</span><br><span class=\"line\">Output: [&quot;()&quot;]</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> generateParenthesis = <span class=\"keyword\">function</span> (<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">helper</span>(<span class=\"params\">s, l, r</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (l === <span class=\"number\">0</span> &amp;&amp; r === <span class=\"number\">0</span>) res.<span class=\"title function_\">push</span>(s);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (l &gt; <span class=\"number\">0</span>) <span class=\"title function_\">helper</span>(s + <span class=\"string\">&quot;(&quot;</span>, l - <span class=\"number\">1</span>, r);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (r &gt; l) <span class=\"title function_\">helper</span>(s + <span class=\"string\">&quot;)&quot;</span>, l, r - <span class=\"number\">1</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">helper</span>(<span class=\"string\">&quot;&quot;</span>, n, n);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#23) Merge k Sorted Lists","url":"/leetcode/leetcode23/","content":"<p><strong>Difficult:Hard</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.</p>\n<p>Merge all the linked-lists into one sorted linked-list and return it.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個由 k 個鍊錶組成的數組，每個鍊錶按升序排序。</p>\n<p>將所有鍊錶合併為一個排序的鍊錶並返回。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: lists = [[1,4,5],[1,3,4],[2,6]]</span><br><span class=\"line\">Output: [1,1,2,3,4,4,5,6]</span><br><span class=\"line\">Explanation: The linked-lists are:</span><br><span class=\"line\">[</span><br><span class=\"line\">  1-&gt;4-&gt;5,</span><br><span class=\"line\">  1-&gt;3-&gt;4,</span><br><span class=\"line\">  2-&gt;6</span><br><span class=\"line\">]</span><br><span class=\"line\">merging them into one sorted list:</span><br><span class=\"line\">1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: lists = []</span><br><span class=\"line\">Output: []</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: lists = [[]]</span><br><span class=\"line\">Output: []</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.檢查每個元素的值找到最小的數值<br>2.檢查每個元素是否都為空了<br>3.把最小的元素的link list陣列位置記錄起來<br>4.新的list的next指向最小值node</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mergeKLists = <span class=\"keyword\">function</span> (<span class=\"params\">lists</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> listarr = <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> head = listarr;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> end = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (end) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> min = <span class=\"title class_\">Infinity</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> pos = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; lists.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (lists[i] != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (min &gt; lists[i].<span class=\"property\">val</span>) &#123;</span><br><span class=\"line\">                    pos = i;</span><br><span class=\"line\">                    min = lists[i].<span class=\"property\">val</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (pos != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            head.<span class=\"property\">next</span> = lists[pos];</span><br><span class=\"line\">            lists[pos] = lists[pos].<span class=\"property\">next</span>;</span><br><span class=\"line\">            head = head.<span class=\"property\">next</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (min == <span class=\"title class_\">Infinity</span>) &#123;</span><br><span class=\"line\">            end = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> listarr.<span class=\"property\">next</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Hard"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#24) Swap Nodes in Pairs","url":"/leetcode/leetcode24/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a linked list, swap every two adjacent nodes and return its head. You must solve the problem without modifying the values in the list’s nodes (i.e., only nodes themselves may be changed.)</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個鍊錶，交換每兩個相鄰節點並返回它的頭部。您必須在不修改列表節點中的值的情況下解決問題（即，只能更改節點本身。）</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1<br><img src=\"/../image/leetcode/leetcode24.png\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1,2,3,4]</span><br><span class=\"line\">Output: [2,1,4,3]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = []</span><br><span class=\"line\">Output: []</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1]</span><br><span class=\"line\">Output: [1]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.創一個新的link list<br>2.將節點依序放入</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> swapPairs = <span class=\"keyword\">function</span>(<span class=\"params\">head</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> listnode=<span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> newhead=listnode;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cur=<span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> pre=<span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(head!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(head.<span class=\"property\">next</span>!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">            newhead.<span class=\"property\">next</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(head.<span class=\"property\">next</span>.<span class=\"property\">val</span>);</span><br><span class=\"line\">            newhead=newhead.<span class=\"property\">next</span>;  </span><br><span class=\"line\">           </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(head!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">            newhead.<span class=\"property\">next</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(head.<span class=\"property\">val</span>);</span><br><span class=\"line\">            newhead=newhead.<span class=\"property\">next</span>;</span><br><span class=\"line\">            head=head.<span class=\"property\">next</span>;</span><br><span class=\"line\">         </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(head!=<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">         head=head.<span class=\"property\">next</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> listnode.<span class=\"property\">next</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Code 2:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> swapPairs = <span class=\"keyword\">function</span> (<span class=\"params\">head</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ptr = head, start = <span class=\"literal\">true</span>, pre = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (ptr &amp;&amp; ptr.<span class=\"property\">next</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> cur = ptr;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> next = cur.<span class=\"property\">next</span>;</span><br><span class=\"line\">        cur.<span class=\"property\">next</span> = next.<span class=\"property\">next</span>;</span><br><span class=\"line\">        next.<span class=\"property\">next</span> = cur;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (start == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            head = next;</span><br><span class=\"line\">            start = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            pre.<span class=\"property\">next</span> = next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        pre = cur;</span><br><span class=\"line\">        ptr = cur.<span class=\"property\">next</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#26)  Remove Duplicates from Sorted Array","url":"/leetcode/leetcode26/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. The relative order of the elements should be kept the same.</p>\n<p>Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the first part of the array nums. More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result. It does not matter what you leave beyond the first k elements.</p>\n<p>Return k after placing the final result in the first k slots of nums.</p>\n<p>Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.</p>\n<p>Custom Judge:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">The judge will test your solution with the following code:</span><br><span class=\"line\"></span><br><span class=\"line\">int[] nums = [...]; // Input array</span><br><span class=\"line\">int[] expectedNums = [...]; // The expected answer with correct length</span><br><span class=\"line\"></span><br><span class=\"line\">int k = removeDuplicates(nums); // Calls your implementation</span><br><span class=\"line\"></span><br><span class=\"line\">assert k == expectedNums.length;</span><br><span class=\"line\">for (int i = 0; i &lt; k; i++) &#123;</span><br><span class=\"line\">    assert nums[i] == expectedNums[i];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">If all assertions pass, then your solution will be accepted.</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個按非遞減順序排序的整數數組 nums，就地刪除重複項，使每個唯一元素只出現一次。元素的相對順序應保持不變。</p>\n<p>由於在某些語言中無法更改數組的長度，因此您必須將結果放在數組 nums 的第一部分。更正式地說，如果刪除重複項後有 k 個元素，則 nums 的前 k 個元素應該保存最終結果。在前 k 個元素之外留下什麼並不重要。</p>\n<p>將最終結果放入 nums 的前 k 個槽後返回 k。</p>\n<p>不要為另一個數組分配額外的空間。您必須通過使用 O(1) 額外內存就地修改輸入數組來做到這一點。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [1,1,2]</span><br><span class=\"line\">Output: 2, nums = [1,2,_]</span><br><span class=\"line\">Explanation: Your function should return k = 2, with the first two elements of nums being 1 and 2 respectively.</span><br><span class=\"line\">It does not matter what you leave beyond the returned k (hence they are underscores).</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [0,0,1,1,1,2,2,3,3,4]</span><br><span class=\"line\">Output: 5, nums = [0,1,2,3,4,_,_,_,_,_]</span><br><span class=\"line\">Explanation: Your function should return k = 5, with the first five elements of nums being 0, 1, 2, 3, and 4 respectively.</span><br><span class=\"line\">It does not matter what you leave beyond the returned k (hence they are underscores).</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.找到一樣的把它刪除</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> removeDuplicates = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;nums.<span class=\"property\">length</span>-<span class=\"number\">1</span>;)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[i]==nums[i+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">            nums.<span class=\"title function_\">splice</span>(i,<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> nums.<span class=\"property\">legnth</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#27)  Remove Element","url":"/leetcode/leetcode27/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an integer array nums and an integer val, remove all occurrences of val in nums in-place. The relative order of the elements may be changed.</p>\n<p>Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the first part of the array nums. More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result. It does not matter what you leave beyond the first k elements.</p>\n<p>Return k after placing the final result in the first k slots of nums.</p>\n<p>Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.</p>\n<p>Custom Judge:</p>\n<p>The judge will test your solution with the following code:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">int[] nums = [...]; // Input array</span><br><span class=\"line\">int val = ...; // Value to remove</span><br><span class=\"line\">int[] expectedNums = [...]; // The expected answer with correct length.</span><br><span class=\"line\">                            // It is sorted with no values equaling val.</span><br><span class=\"line\"></span><br><span class=\"line\">int k = removeElement(nums, val); // Calls your implementation</span><br><span class=\"line\"></span><br><span class=\"line\">assert k == expectedNums.length;</span><br><span class=\"line\">sort(nums, 0, k); // Sort the first k elements of nums</span><br><span class=\"line\">for (int i = 0; i &lt; actualLength; i++) &#123;</span><br><span class=\"line\">    assert nums[i] == expectedNums[i];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>If all assertions pass, then your solution will be accepted.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個整數數組 nums 和一個整數 val，就地刪除 nums 中所有出現的 val。元素的相對順序可能會改變。</p>\n<p>由於在某些語言中無法更改數組的長度，因此您必須將結果放在數組 nums 的第一部分。更正式地說，如果刪除重複項後有 k 個元素，則 nums 的前 k 個元素應該保存最終結果。在前 k 個元素之外留下什麼並不重要。</p>\n<p>將最終結果放入 nums 的前 k 個槽後返回 k。</p>\n<p>不要為另一個數組分配額外的空間。您必須通過使用 O(1) 額外內存就地修改輸入數組來做到這一點。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [3,2,2,3], val = 3</span><br><span class=\"line\">Output: 2, nums = [2,2,_,_]</span><br><span class=\"line\">Explanation: Your function should return k = 2, with the first two elements of nums being 2.</span><br><span class=\"line\">It does not matter what you leave beyond the returned k (hence they are underscores).</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [0,1,2,2,3,0,4,2], val = 2</span><br><span class=\"line\">Output: 5, nums = [0,1,4,0,3,_,_,_]</span><br><span class=\"line\">Explanation: Your function should return k = 5, with the first five elements of nums containing 0, 0, 1, 3, and 4.</span><br><span class=\"line\">Note that the five elements can be returned in any order.</span><br><span class=\"line\">It does not matter what you leave beyond the returned k (hence they are underscores).</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.找到跟val一樣的值時，從最後的值不同的值篩進</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> removeElement = <span class=\"keyword\">function</span>(<span class=\"params\">nums, val</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> last=nums.<span class=\"property\">length</span>-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> count=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;nums.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[i]==val)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(nums[last]==val)&#123;</span><br><span class=\"line\">                last--;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            nums[i]=nums[last];</span><br><span class=\"line\">            last--;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            count++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#25) Reverse Nodes in k-Group","url":"/leetcode/leetcode25/","content":"<p><strong>Difficult:Hard</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the head of a linked list, reverse the nodes of the list k at a time, and return the modified list.</p>\n<p>k is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of k then left-out nodes, in the end, should remain as it is.</p>\n<p>You may not alter the values in the list’s nodes, only nodes themselves may be changed.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定鍊錶的頭部，一次反轉鍊錶 k 的節點，並返回修改後的鍊錶。</p>\n<p>k 為正整數，小於等於鍊錶的長度。如果節點的數量不是 k 的倍數，那麼最後剩下的節點應該保持原樣。</p>\n<p>您不能更改列表節點中的值，只能更改節點本身。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1<br><img src=\"/../image/leetcode/leetcode25_1.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1,2,3,4,5], k = 2</span><br><span class=\"line\">Output: [2,1,4,3,5]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2<br><img src=\"/../image/leetcode/leetcode25_2.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1,2,3,4,5], k = 3</span><br><span class=\"line\">Output: [3,2,1,4,5]</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reverseKGroup = <span class=\"keyword\">function</span>(<span class=\"params\">head, k</span>) &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Hard"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#28)  Implement strStr()","url":"/leetcode/leetcode28/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Implement strStr().</p>\n<p>Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.</p>\n<p>Clarification:</p>\n<p>What should we return when needle is an empty string? This is a great question to ask during an interview.</p>\n<p>For the purpose of this problem, we will return 0 when needle is an empty string. This is consistent to C’s strstr() and Java’s indexOf().</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>實現 strStr()。</p>\n<p>給定兩個字符串 needle 和 haystack，返回 haystack 中第一次出現 needle 的索引，如果 needle 不是 haystack 的一部分，則返回 -1。</p>\n<p>澄清：</p>\n<p>當 needle 為空字符串時，我們應該返回什麼？這是面試時問的好問題。</p>\n<p>為了解決這個問題，當 needle 為空字符串時，我們將返回 0。這與 C 的 strstr() 和 Java 的 indexOf() 一致。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: haystack = &quot;hello&quot;, needle = &quot;ll&quot;</span><br><span class=\"line\">Output: 2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: haystack = &quot;aaaaa&quot;, needle = &quot;bba&quot;</span><br><span class=\"line\">Output: -1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.先判斷是否為空及長度是否超過比對字串大小<br>2.haystack和needle第一個比對到最後一個都為一樣時才返回開始的index</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> strStr = <span class=\"keyword\">function</span> (<span class=\"params\">haystack, needle</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (needle == <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(needle.<span class=\"property\">length</span>&gt;haystack.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> start = -<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; haystack.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (haystack[i] === needle[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> judge = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt; needle.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (needle[j] !== haystack[i + j]) &#123;</span><br><span class=\"line\">                    judge = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (judge == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">                start = i;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> start;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#29) Divide Two Integers","url":"/leetcode/leetcode29/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given two integers dividend and divisor, divide two integers without using multiplication, division, and mod operator.</p>\n<p>The integer division should truncate toward zero, which means losing its fractional part. For example, 8.345 would be truncated to 8, and -2.7335 would be truncated to -2.</p>\n<p>Return the quotient after dividing dividend by divisor.</p>\n<p>Note: Assume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [−231, 231 − 1]. For this problem, if the quotient is strictly greater than 231 - 1, then return 231 - 1, and if the quotient is strictly less than -231, then return -231.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定兩個整數被除數和除數，在不使用乘法、除法和模運算符的情況下將兩個整數相除。</p>\n<p>整數除法應該向零截斷，這意味著丟失其小數部分。例如，8.345 將被截斷為 8，-2.7335 將被截斷為 -2。</p>\n<p>返回除以除數後的商。</p>\n<p>注意：假設我們正在處理的環境只能存儲 32 位有符號整數範圍內的整數：[−231, 231 − 1]。對於這個問題，如果商嚴格大於 231 - 1，則返回 231 - 1，如果商嚴格小於 -231，則返回 -231。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: dividend = 10, divisor = 3</span><br><span class=\"line\">Output: 3</span><br><span class=\"line\">Explanation: 10/3 = 3.33333.. which is truncated to 3.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: dividend = 7, divisor = -3</span><br><span class=\"line\">Output: -2</span><br><span class=\"line\">Explanation: 7/-3 = -2.33333.. which is truncated to -2.</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用減法求解</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> divide = <span class=\"keyword\">function</span>(<span class=\"params\">dividend, divisor</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (divisor === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> dividend;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (divisor === -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (dividend === -<span class=\"number\">2147483648</span>) ? <span class=\"number\">2147483647</span> : -dividend;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> count=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dividendsing=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> divisorsing=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(dividend&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        dividendsing=-<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(divisor&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        divisorsing=-<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(dividend)&gt;=<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(divisor))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> val=<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(dividend);</span><br><span class=\"line\">        dividend=val-<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(divisor);</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> final=count*dividendsing*divisorsing;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(final&gt;<span class=\"number\">2147483647</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">2147483647</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(final&lt;-<span class=\"number\">2147483648</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">2147483648</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> final;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(Leetcode#3) Longest Substring Without Repeating Characters","url":"/leetcode/leetcode3/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a string s, find the length of the longest substring without repeating characters.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個字串s，找到不重複字符的最長子串的長度</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;abcabcbb&quot;</span><br><span class=\"line\">Output: 3</span><br><span class=\"line\">Explanation: The answer is &quot;abc&quot;, with the length of 3.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;bbbbb&quot;</span><br><span class=\"line\">Output: 1</span><br><span class=\"line\">Explanation: The answer is &quot;b&quot;, with the length of 1.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;pwwkew&quot;</span><br><span class=\"line\">Output: 3</span><br><span class=\"line\">Explanation: The answer is &quot;wke&quot;, with the length of 3.</span><br><span class=\"line\">Notice that the answer must be a substring, &quot;pwke&quot; is a subsequence and not a substring.</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.如果字串長度為1時直接回傳長度</p>\n<p>2.定義一個暫存字串和紀錄最長的變數</p>\n<p>3.用迴圈跑字串，暫存字串不包含當下字浮，若不包含將字浮加到暫存字串裡，跟最大長度做比較，若包含將暫存字串切掉重複的字浮產生新的字浮。</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">lengthOfLongestSubstring</span>(<span class=\"params\">str</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (str.<span class=\"property\">length</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> chache = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> maxlength = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; str.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> curchar = str[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (chache.<span class=\"title function_\">indexOf</span>(curchar) == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            chache += curchar;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (maxlength &lt; chache.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">                maxlength = chache.<span class=\"property\">length</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            chache = chache.<span class=\"title function_\">substring</span>(chache.<span class=\"title function_\">indexOf</span>(curchar) + <span class=\"number\">1</span>);</span><br><span class=\"line\">            chache += curchar;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> maxlength;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>Code 2 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">lengthOfLongestSubstring</span>(<span class=\"params\">str</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (str.<span class=\"property\">length</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> maxlength = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> chache = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> endindex = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (endindex &lt; str.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> curchar = str[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (chache.<span class=\"title function_\">indexOf</span>(curchar) == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            chache += curchar;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (chache.<span class=\"property\">length</span> &gt; maxlength) &#123;</span><br><span class=\"line\">                maxlength = chache.<span class=\"property\">length</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            chache = chache.<span class=\"title function_\">substring</span>(chache.<span class=\"title function_\">indexOf</span>(curchar) + <span class=\"number\">1</span>);</span><br><span class=\"line\">            chache += curchar;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        endindex++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> maxlength;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#30)  Substring with Concatenation of All Words","url":"/leetcode/leetcode30/","content":"<p><strong>Difficult:Hard</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>You are given a string s and an array of strings words of the same length. Return all starting indices of substring(s) in s that is a concatenation of each word in words exactly once, in any order, and without any intervening characters.</p>\n<p>You can return the answer in any order.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給你一個字符串 s 和一個長度相同的字符串數組。返回 s 中子字符串的所有起始索引，它是單詞中每個單詞的連接，恰好一次，以任何順序，並且沒有任何中間字符。</p>\n<p>您可以按任何順序返回答案。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;barfoothefoobarman&quot;, words = [&quot;foo&quot;,&quot;bar&quot;]</span><br><span class=\"line\">Output: [0,9]</span><br><span class=\"line\">Explanation: Substrings starting at index 0 and 9 are &quot;barfoo&quot; and &quot;foobar&quot; respectively.</span><br><span class=\"line\">The output order does not matter, returning [9,0] is fine too.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;wordgoodgoodgoodbestword&quot;, words = [&quot;word&quot;,&quot;good&quot;,&quot;best&quot;,&quot;word&quot;]</span><br><span class=\"line\">Output: []</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;barfoofoobarthefoobarman&quot;, words = [&quot;bar&quot;,&quot;foo&quot;,&quot;the&quot;]</span><br><span class=\"line\">Output: [6,9,12]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.從s第一個字依序和words中的陣列配對是否符合</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> findSubstring = <span class=\"keyword\">function</span> (<span class=\"params\">s, words</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> len = words[<span class=\"number\">0</span>].<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> next = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s.<span class=\"property\">length</span>-i&lt;len*words.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> numbersCopy = [...words];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> judge = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        next = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> comparestr = s.<span class=\"title function_\">slice</span>(i + next, len + next + i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (numbersCopy.<span class=\"title function_\">indexOf</span>(comparestr) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                numbersCopy.<span class=\"title function_\">splice</span>(numbersCopy.<span class=\"title function_\">indexOf</span>(comparestr), <span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                judge = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            next += len;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (numbersCopy.<span class=\"property\">length</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (judge == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            arr.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Hard"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#32) Longest Valid Parentheses","url":"/leetcode/leetcode32/","content":"<p><strong>Difficult:Hard</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a string containing just the characters ‘(‘ and ‘)’, find the length of the longest valid (well-formed) parentheses substring.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個僅包含字符 ‘(‘ 和 ‘)’ 的字符串，找出最長有效（格式正確）括號子字符串的長度。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;(()&quot;</span><br><span class=\"line\">Output: 2</span><br><span class=\"line\">Explanation: The longest valid parentheses substring is &quot;()&quot;.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;)()())&quot;</span><br><span class=\"line\">Output: 4</span><br><span class=\"line\">Explanation: The longest valid parentheses substring is &quot;()()&quot;.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;&quot;</span><br><span class=\"line\">Output: 0</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.如果為(放入陣列裡<br>2.若為)時<br> 1.陣列裡面沒東西時將最後的位置移到那<br> 2.若拿掉陣列的(為空時將i-index去跟max比較<br> 3.若拿掉陣列的(為不空時去跟i-陣列[陣列.length-1]跟max比較</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> longestValidParentheses = <span class=\"keyword\">function</span> (<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> t = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> index = -<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; s.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s[i] == <span class=\"string\">&quot;(&quot;</span>)</span><br><span class=\"line\">            t.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (t.<span class=\"property\">length</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                index = i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                t.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (t.<span class=\"property\">length</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(max, i - index);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(max, i - t[t.<span class=\"property\">length</span> - <span class=\"number\">1</span>]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Hard"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#31) Next Permutation","url":"/leetcode/leetcode31/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>A permutation of an array of integers is an arrangement of its members into a sequence or linear order.</p>\n<p>For example, for arr &#x3D; [1,2,3], the following are considered permutations of arr: [1,2,3], [1,3,2], [3,1,2], [2,3,1].<br>The next permutation of an array of integers is the next lexicographically greater permutation of its integer. More formally, if all the permutations of the array are sorted in one container according to their lexicographical order, then the next permutation of that array is the permutation that follows it in the sorted container. If such arrangement is not possible, the array must be rearranged as the lowest possible order (i.e., sorted in ascending order).</p>\n<p>For example, the next permutation of arr &#x3D; [1,2,3] is [1,3,2].<br>Similarly, the next permutation of arr &#x3D; [2,3,1] is [3,1,2].<br>While the next permutation of arr &#x3D; [3,2,1] is [1,2,3] because [3,2,1] does not have a lexicographical larger rearrangement.<br>Given an array of integers nums, find the next permutation of nums.</p>\n<p>The replacement must be in place and use only constant extra memory.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>整數數組的排列是將其成員排列成序列或線性順序。</p>\n<p>例如，對於 arr &#x3D; [1,2,3]，以下被認為是 arr 的排列：[1,2,3], [1,3,2], [3,1,2], [2,3,1]。<br>整數數組的下一個排列是其整數的下一個字典序更大的排列。更正式地說，如果數組的所有排列都根據它們的字典順序在一個容器中排序，那麼該數組的下一個排列是在排序容器中跟隨它的排列。如果這種排列是不可能的，則必須將數組重新排列為盡可能低的順序（即按升序排序）。</p>\n<p>例如，arr &#x3D; [1,2,3] 的下一個排列是 [1,3,2]。<br>類似地，arr &#x3D; [2,3,1] 的下一個排列是 [3,1,2]。<br>而 arr &#x3D; [3,2,1] 的下一個排列是 [1,2,3] 因為 [3,2,1] 沒有更大的字典重排。<br>給定一個整數數組 nums，找到 nums 的下一個排列。</p>\n<p>替換必須就位並且僅使用恆定的額外內存。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;barfoothefoobarman&quot;, words = [&quot;foo&quot;,&quot;bar&quot;]</span><br><span class=\"line\">Output: [0,9]</span><br><span class=\"line\">Explanation: Substrings starting at index 0 and 9 are &quot;barfoo&quot; and &quot;foobar&quot; respectively.</span><br><span class=\"line\">The output order does not matter, returning [9,0] is fine too.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;wordgoodgoodgoodbestword&quot;, words = [&quot;word&quot;,&quot;good&quot;,&quot;best&quot;,&quot;word&quot;]</span><br><span class=\"line\">Output: []</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;barfoofoobarthefoobarman&quot;, words = [&quot;bar&quot;,&quot;foo&quot;,&quot;the&quot;]</span><br><span class=\"line\">Output: [6,9,12]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.從最後跟前面比較，若比前面大時將前面的數字給為較大它一點的值<br>2.將後面的值從小到最大依序填入</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> nextPermutation = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> curpos = -<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        arr.<span class=\"title function_\">push</span>(nums[i]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[i] &gt; nums[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            curpos = i - <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    arr = arr.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[curpos] &lt; arr[i]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> temp = arr[i];</span><br><span class=\"line\">            arr[i] = nums[curpos];</span><br><span class=\"line\">            nums[curpos] = temp;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    arr = arr.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        nums[i + curpos + <span class=\"number\">1</span>] = arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> nums;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#33) Search in Rotated Sorted Array","url":"/leetcode/leetcode33/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>There is an integer array nums sorted in ascending order (with distinct values).</p>\n<p>Prior to being passed to your function, nums is possibly rotated at an unknown pivot index k (1 &lt;&#x3D; k &lt; nums.length) such that the resulting array is [nums[k], nums[k+1], …, nums[n-1], nums[0], nums[1], …, nums[k-1]] (0-indexed). For example, [0,1,2,4,5,6,7] might be rotated at pivot index 3 and become [4,5,6,7,0,1,2].</p>\n<p>Given the array nums after the possible rotation and an integer target, return the index of target if it is in nums, or -1 if it is not in nums.</p>\n<p>You must write an algorithm with O(log n) runtime complexity.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>有一個整數數組 nums 按升序排序（具有不同的值）。</p>\n<p>在傳遞給您的函數之前，nums 可能會以未知的樞軸索引 k (1 &lt;&#x3D; k &lt; nums.length) 旋轉，使得結果數組為 [nums[k], nums[k+1], … , nums[n-1], nums[0], nums[1], …, nums[k-1]] (0-indexed)。例如，[0,1,2,4,5,6,7] 可能在樞軸索引 3 處旋轉並變為 [4,5,6,7,0,1,2]。</p>\n<p>給定可能的旋轉後的數組 nums 和一個整數目標，如果它在 nums 中，則返回目標的索引，如果它不在 nums 中，則返回 -1。</p>\n<p>您必須編寫一個具有 O(log n) 運行時復雜度的算法。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [4,5,6,7,0,1,2], target = 0</span><br><span class=\"line\">Output: 4</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [4,5,6,7,0,1,2], target = 3</span><br><span class=\"line\">Output: -1</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [1], target = 0</span><br><span class=\"line\">Output: -1</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.二分搜尋法邏輯</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> search = <span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> left = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> right = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(left&lt;=right) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> mid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(left+(right-left)/<span class=\"number\">2</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[mid] === target) <span class=\"keyword\">return</span> mid</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[left] &lt;= nums[mid]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[mid] &gt; target &amp;&amp; nums[left] &lt;= target) &#123;</span><br><span class=\"line\">                right = mid - <span class=\"number\">1</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                left = mid + <span class=\"number\">1</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[mid] &lt; target &amp;&amp; nums[right] &gt;= target ) &#123;</span><br><span class=\"line\">                left = mid + <span class=\"number\">1</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                right = mid - <span class=\"number\">1</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#34) Find First and Last Position of Element in Sorted Array","url":"/leetcode/leetcode34/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.</p>\n<p>If target is not found in the array, return [-1, -1].</p>\n<p>You must write an algorithm with O(log n) runtime complexity.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個按非降序排序的整數數組 nums，找到給定目標值的開始和結束位置。</p>\n<p>如果在數組中找不到目標，則返回 [-1, -1]。</p>\n<p>您必須編寫一個具有 O(log n) 運行時復雜度的算法。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [5,7,7,8,8,10], target = 8</span><br><span class=\"line\">Output: [3,4]</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [5,7,7,8,8,10], target = 6</span><br><span class=\"line\">Output: [-1,-1]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [], target = 0</span><br><span class=\"line\">Output: [-1,-1]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> searchRange = <span class=\"keyword\">function</span> (<span class=\"params\">nums, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> index = nums.<span class=\"title function_\">indexOf</span>(target);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [-<span class=\"number\">1</span>, -<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> end = index + <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[end] != target) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            end++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [index, end - <span class=\"number\">1</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#35) Search Insert Position","url":"/leetcode/leetcode35/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.</p>\n<p>You must write an algorithm with O(log n) runtime complexity.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個由不同整數組成的排序數組和一個目標值，如果找到目標，則返回索引。如果不是，則返回按順序插入的索引。</p>\n<p>您必須編寫一個具有 O(log n) 運行時復雜度的算法。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [1,3,5,6], target = 5</span><br><span class=\"line\">Output: 2</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [1,3,5,6], target = 2</span><br><span class=\"line\">Output: 1</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [1,3,5,6], target = 7</span><br><span class=\"line\">Output: 4</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.從陣列第一個數開始比較</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> searchInsert = <span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;nums.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(target&lt;=nums[i])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#36) Valid Sudoku","url":"/leetcode/leetcode36/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:</p>\n<p>1.Each row must contain the digits 1-9 without repetition.<br>2.Each column must contain the digits 1-9 without repetition.<br>3.Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.<br>Note:</p>\n<p>A Sudoku board (partially filled) could be valid but is not necessarily solvable.<br>Only the filled cells need to be validated according to the mentioned rules.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>確定 9 x 9 數獨板是否有效。只有填充的單元格需要根據以下規則進行驗證：</p>\n<p>每行必須包含數字 1-9，不得重複。<br>每列必須包含數字 1-9，不得重複。<br>網格的九個 3 x 3 子框中的每一個都必須包含數字 1-9，且不得重複。<br>筆記：</p>\n<p>數獨板（部分填充）可能是有效的，但不一定是可解的。<br>只有填充的單元格需要根據上述規則進行驗證。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: board = </span><br><span class=\"line\">[[&quot;5&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]</span><br><span class=\"line\">,[&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]</span><br><span class=\"line\">,[&quot;.&quot;,&quot;9&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;]</span><br><span class=\"line\">,[&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;3&quot;]</span><br><span class=\"line\">,[&quot;4&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;]</span><br><span class=\"line\">,[&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;]</span><br><span class=\"line\">,[&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;8&quot;,&quot;.&quot;]</span><br><span class=\"line\">,[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;.&quot;,&quot;.&quot;,&quot;5&quot;]</span><br><span class=\"line\">,[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;9&quot;]]</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: board = </span><br><span class=\"line\">[[&quot;8&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]</span><br><span class=\"line\">,[&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]</span><br><span class=\"line\">,[&quot;.&quot;,&quot;9&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;]</span><br><span class=\"line\">,[&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;3&quot;]</span><br><span class=\"line\">,[&quot;4&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;]</span><br><span class=\"line\">,[&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;]</span><br><span class=\"line\">,[&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;8&quot;,&quot;.&quot;]</span><br><span class=\"line\">,[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;.&quot;,&quot;.&quot;,&quot;5&quot;]</span><br><span class=\"line\">,[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;9&quot;]]</span><br><span class=\"line\">Output: false</span><br><span class=\"line\">Explanation: Same as Example 1, except with the 5 in the top left corner being modified to 8. Since there are two 8&#x27;s in the top left 3x3 sub-box, it is invalid.</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.直著檢查<br>2.橫的檢查<br>3.3x3方形檢查</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> isValidSudoku = <span class=\"keyword\">function</span> (<span class=\"params\">board</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> linearr = [];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (board[i][j] != <span class=\"string\">&#x27;.&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arr.<span class=\"title function_\">indexOf</span>(board[i][j]) == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                    arr.<span class=\"title function_\">push</span>(board[i][j]);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (board[j][i] != <span class=\"string\">&#x27;.&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (linearr.<span class=\"title function_\">indexOf</span>(board[j][i]) == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                    linearr.<span class=\"title function_\">push</span>(board[j][i]);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> outerx = <span class=\"number\">0</span>; outerx &lt; <span class=\"number\">3</span>; outerx++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> outery = <span class=\"number\">0</span>; outery &lt; <span class=\"number\">3</span>; outery++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> squarearr = [];</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> x = <span class=\"number\">0</span> + <span class=\"number\">3</span> * outerx; x &lt; <span class=\"number\">3</span> * outerx + <span class=\"number\">3</span>; x++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> y = <span class=\"number\">0</span> + <span class=\"number\">3</span> * outery; y &lt; <span class=\"number\">3</span> * outery + <span class=\"number\">3</span>; y++) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (board[y][x] != <span class=\"string\">&#x27;.&#x27;</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (squarearr.<span class=\"title function_\">indexOf</span>(board[y][x]) == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                            squarearr.<span class=\"title function_\">push</span>(board[y][x]);</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#38) Count and Say","url":"/leetcode/leetcode38/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>The count-and-say sequence is a sequence of digit strings defined by the recursive formula:</p>\n<p>countAndSay(1) &#x3D; “1”<br>countAndSay(n) is the way you would “say” the digit string from countAndSay(n-1), which is then converted into a different digit string.<br>To determine how you “say” a digit string, split it into the minimal number of substrings such that each substring contains exactly one unique digit. Then for each substring, say the number of digits, then say the digit. Finally, concatenate every said digit.</p>\n<p>For example, the saying and conversion for digit string “3322251”:</p>\n<p><img src=\"/../image/leetcode/leetcode38.jpg\" alt=\"example\" title=\"example\"></p>\n<p>Given a positive integer n, return the nth term of the count-and-say sequence.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>count-and-say 序列是由遞歸公式定義的數字字符串序列：</p>\n<p>countAndSay(1) &#x3D; “1”<br>countAndSay(n) 是您從 countAndSay(n-1) 中“說出”數字字符串的方式，然後將其轉換為不同的數字字符串。<br>要確定如何“說”一個數字字符串，請將其拆分為最少數量的子字符串，以使每個子字符串恰好包含一個唯一數字。然後對於每個子字符串，說出位數，然後說出數字。最後，連接每個所說的數字。</p>\n<p>例如數字字符串“3322251”的說法和轉換：</p>\n<p>給定一個正整數 n，返回 count-and-say 序列的第 n 項。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 1</span><br><span class=\"line\">Output: &quot;1&quot;</span><br><span class=\"line\">Explanation: This is the base case.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 4</span><br><span class=\"line\">Output: &quot;1211&quot;</span><br><span class=\"line\">Explanation:</span><br><span class=\"line\">countAndSay(1) = &quot;1&quot;</span><br><span class=\"line\">countAndSay(2) = say &quot;1&quot; = one 1 = &quot;11&quot;</span><br><span class=\"line\">countAndSay(3) = say &quot;11&quot; = two 1&#x27;s = &quot;21&quot;</span><br><span class=\"line\">countAndSay(4) = say &quot;21&quot; = one 2 + one 1 = &quot;12&quot; + &quot;11&quot; = &quot;1211&quot;</span><br><span class=\"line\">countAndSay(5) = say &quot;1211&quot; = one 2 + three 1 = &quot;12&quot; + &quot;31&quot; = &quot;1231&quot;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.將題目分成小問題<br>2.利用遞迴求解</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> countAndSay = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;1&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> before=<span class=\"title function_\">countAndSay</span>(n-<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> str=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> start=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> count=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(start&lt;before.<span class=\"property\">length</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(before[start]==before[start+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">                count++;</span><br><span class=\"line\">                </span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                str+=count+before[start];</span><br><span class=\"line\">                count=<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;       </span><br><span class=\"line\">            start++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> str;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#39)  Combination Sum","url":"/leetcode/leetcode39/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target. You may return the combinations in any order.</p>\n<p>The same number may be chosen from candidates an unlimited number of times. Two combinations are unique if the frequency of at least one of the chosen numbers is different.</p>\n<p>It is guaranteed that the number of unique combinations that sum up to target is less than 150 combinations for the given input.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個由不同整數候選者組成的數組和一個目標整數目標，返回一個包含所有唯一候選者組合的列表，其中所選數字總和為目標。您可以按任何順序返回組合。</p>\n<p>可以從候選人中無限次選擇相同的數字。如果至少一個所選數字的頻率不同，則兩個組合是唯一的。</p>\n<p>對於給定的輸入，保證總和為目標的唯一組合的數量少於 150 個組合。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: candidates = [2,3,6,7], target = 7</span><br><span class=\"line\">Output: [[2,2,3],[7]]</span><br><span class=\"line\">Explanation:</span><br><span class=\"line\">2 and 3 are candidates, and 2 + 2 + 3 = 7. Note that 2 can be used multiple times.</span><br><span class=\"line\">7 is a candidate, and 7 = 7.</span><br><span class=\"line\">These are the only two combinations.</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: candidates = [2,3,5], target = 8</span><br><span class=\"line\">Output: [[2,2,2,2],[2,3,3],[3,5]]</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: candidates = [2], target = 1</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.將題目分成小問題<br>2.利用遞迴求解</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> combinationSum = <span class=\"keyword\">function</span>(<span class=\"params\">candidates, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> outarr=[];</span><br><span class=\"line\">    <span class=\"keyword\">let</span>  fn=<span class=\"keyword\">function</span>(<span class=\"params\">newarr,start, target</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j=<span class=\"number\">0</span>;j&lt;newarr.<span class=\"property\">length</span>;j++)&#123;  </span><br><span class=\"line\">         sum+=newarr[j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sum==target)&#123;</span><br><span class=\"line\">            outarr.<span class=\"title function_\">push</span>(newarr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sum&gt;target)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> [];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=start;i&lt;candidates.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> innewarr=[...newarr];</span><br><span class=\"line\">            innewarr.<span class=\"title function_\">push</span>(candidates[i]);</span><br><span class=\"line\">            <span class=\"title function_\">fn</span>(innewarr,i,target);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;candidates.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> arr=[candidates[i]];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr==target)&#123;</span><br><span class=\"line\">            outarr.<span class=\"title function_\">push</span>(arr);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"title function_\">fn</span>(arr,i,target); </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">   <span class=\"keyword\">return</span> outarr;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(Leetcode#4) Median of Two Sorted Arrays","url":"/leetcode/leetcode4/","content":"<p><strong>Difficult:Hard</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.</p>\n<p>The overall run time complexity should be O(log (m+n)).</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定兩個大小分別為 m 和 n 的排序數組 nums1 和 nums2，返回兩個排序數組的中位數。</p>\n<p>總體運行時間複雜度應為 O(log (m+n))。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums1 = [1,3], nums2 = [2]</span><br><span class=\"line\">Output: 2.00000</span><br><span class=\"line\">Explanation: merged array = [1,2,3] and median is 2.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums1 = [1,2], nums2 = [3,4]</span><br><span class=\"line\">Output: 2.50000</span><br><span class=\"line\">Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.將兩個排序數組結合並重新排序成新的數組</p>\n<p>2.取出中間值，奇數時直接回傳中間值，偶數時回傳中間值和上一個值相加平均</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> findMedianSortedArrays = <span class=\"keyword\">function</span> (<span class=\"params\">nums1, nums2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [...nums1, ...nums2].<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> len = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(arr.<span class=\"property\">length</span> / <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> medium = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    medium = arr[len];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (arr.<span class=\"property\">length</span> % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        medium += arr[len - <span class=\"number\">1</span>];</span><br><span class=\"line\">        medium = medium / <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> medium;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Code 2:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> findMedianSortedArrays = <span class=\"keyword\">function</span> (<span class=\"params\">nums1, nums2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> newarr = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> nums1index = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> nums2index = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (newarr.<span class=\"property\">length</span> != nums1.<span class=\"property\">length</span> + nums2.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> num1val = nums1[nums1index];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> num2val = nums2[nums2index];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num1val &lt; num2val || num2val == <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">            newarr.<span class=\"title function_\">push</span>(num1val);</span><br><span class=\"line\">            nums1index++;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            newarr.<span class=\"title function_\">push</span>(num2val);</span><br><span class=\"line\">            nums2index++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> len = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(newarr.<span class=\"property\">length</span> / <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> medium = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    medium = newarr[len];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newarr.<span class=\"property\">length</span> % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        medium += newarr[len - <span class=\"number\">1</span>];</span><br><span class=\"line\">        medium = medium / <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> medium;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Hard"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#40)  Combination Sum II","url":"/leetcode/leetcode40/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sum to target.</p>\n<p>Each number in candidates may only be used once in the combination.</p>\n<p>Note: The solution set must not contain duplicate combinations.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一組候選編號（candidates）和一個目標編號（target），找出候選編號總和為 target 的所有唯一組合。</p>\n<p>候選中的每個數字在組合中只能使用一次。</p>\n<p>注意：解決方案集不得包含重複的組合。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: candidates = [10,1,2,7,6,1,5], target = 8</span><br><span class=\"line\">Output: </span><br><span class=\"line\">[</span><br><span class=\"line\">[1,1,6],</span><br><span class=\"line\">[1,2,5],</span><br><span class=\"line\">[1,7],</span><br><span class=\"line\">[2,6]</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: candidates = [2,5,2,1,2], target = 5</span><br><span class=\"line\">Output: </span><br><span class=\"line\">[</span><br><span class=\"line\">[1,2,2],</span><br><span class=\"line\">[5]</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.將題目分成小問題<br>2.利用遞迴求解</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">combinationSum2</span> = (<span class=\"params\">candidates, target</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = [];</span><br><span class=\"line\">    candidates.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a - b);</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">helper</span> = (<span class=\"params\">comb, t, i</span>) =&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (t === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> res.<span class=\"title function_\">push</span>(comb);</span><br><span class=\"line\">  </span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i; j &lt; candidates.<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j &gt; i &amp;&amp; candidates[j] === candidates[j - <span class=\"number\">1</span>]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (candidates[j] &lt;= t) <span class=\"title function_\">helper</span>([...comb, candidates[j]], t - candidates[j], j + <span class=\"number\">1</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"title function_\">helper</span>([], target, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">  &#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#41)  First Missing Positive","url":"/leetcode/leetcode41/","content":"<p><strong>Difficult:Hard</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an unsorted integer array nums, return the smallest missing positive integer.</p>\n<p>You must implement an algorithm that runs in O(n) time and uses constant extra space.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個未排序的整數數組 nums，返回最小的缺失正整數。</p>\n<p>您必須實現一個在 O(n) 時間內運行並使用恆定額外空間的算法。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [1,2,0]</span><br><span class=\"line\">Output: 3</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [3,4,-1,1]</span><br><span class=\"line\">Output: 2</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [7,8,9,11,12]</span><br><span class=\"line\">Output: 1</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>先把數組裡每個正整數從i位放到第i-1位上，這樣就形成了有序的序列，然後檢查每一下標index與當前元素值，就能知道當前下標所對應的正整數是否缺失，若缺失則返回下標index + 1即可。</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> firstMissingPositive = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> n = nums.<span class=\"property\">length</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i + <span class=\"number\">1</span> != nums[i] &amp;&amp; nums[i] != nums[nums[i] - <span class=\"number\">1</span>] &amp;&amp; nums[i] &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      temp = nums[i];</span><br><span class=\"line\">      nums[i] = nums[temp - <span class=\"number\">1</span>];</span><br><span class=\"line\">      nums[temp - <span class=\"number\">1</span>] = temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i + <span class=\"number\">1</span> != nums[i])</span><br><span class=\"line\">      <span class=\"keyword\">return</span> i + <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> n + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Hard"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#42)  Trapping Rain Water","url":"/leetcode/leetcode42/","content":"<p><strong>Difficult:Hard</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定 n 個非負整數，表示每個條的寬度為 1 的高程圖，計算下雨後它可以捕獲多少水。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode42.png\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]</span><br><span class=\"line\">Output: 6</span><br><span class=\"line\">Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: height = [4,2,0,3,2,5]</span><br><span class=\"line\">Output: 9</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.左右邊比較大小，較小的一方往前移動。</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> trap = <span class=\"keyword\">function</span>(<span class=\"params\">height</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> [l, r, lmax, rmax, max] = [<span class=\"number\">0</span>, height.<span class=\"property\">length</span>-<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(l &lt; r) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(height[l] &lt;= height[r]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(height[l] &gt;= lmax) &#123;</span><br><span class=\"line\">                lmax = height[l];</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                max += lmax-height[l];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            l++;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(height[r] &gt;= rmax) &#123;</span><br><span class=\"line\">                rmax = height[r];</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                max += rmax-height[r];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            r--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Code 2 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> trap = <span class=\"keyword\">function</span> (<span class=\"params\">height</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> start = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> end = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (start &lt; height.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (height[start] &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> secmax = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> secindex = -<span class=\"number\">1</span>;</span><br><span class=\"line\">      end = -<span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = start + <span class=\"number\">1</span>; i &lt; height.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (height[i] &gt;= height[start]) &#123;</span><br><span class=\"line\">          end = i;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          sum += height[i];</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (height[i] &gt; secmax) &#123;</span><br><span class=\"line\">            secmax = height[i];</span><br><span class=\"line\">            secindex = i;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (end != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> val = (end - start - <span class=\"number\">1</span>) * height[start] - sum;</span><br><span class=\"line\">        res += val;</span><br><span class=\"line\"></span><br><span class=\"line\">        start = end - <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (secindex - start &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> secsum = <span class=\"number\">0</span>;</span><br><span class=\"line\">          <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = start + <span class=\"number\">1</span>; i &lt; secindex; i++) &#123;</span><br><span class=\"line\">            secsum += height[i];</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> val = (secindex - start - <span class=\"number\">1</span>) * height[secindex] - secsum;</span><br><span class=\"line\">          res += val;</span><br><span class=\"line\">          start = secindex - <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    start++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Hard"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#45)  Jump Game II","url":"/leetcode/leetcode45/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an array of non-negative integers nums, you are initially positioned at the first index of the array.</p>\n<p>Each element in the array represents your maximum jump length at that position.</p>\n<p>Your goal is to reach the last index in the minimum number of jumps.</p>\n<p>You can assume that you can always reach the last index.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個非負整數數組 nums，您最初位於數組的第一個索引處。</p>\n<p>數組中的每個元素代表您在該位置的最大跳躍長度。</p>\n<p>您的目標是以最少的跳躍次數達到最後一個索引。</p>\n<p>您可以假設您始終可以到達最後一個索引。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [2,3,1,1,4]</span><br><span class=\"line\">Output: 2</span><br><span class=\"line\">Explanation: The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [2,3,0,1,4]</span><br><span class=\"line\">Output: 2</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.已知最佳路線為i+nums[i]為最大時</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> jump = <span class=\"keyword\">function</span> (<span class=\"params\">a</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> far = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> jump = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> current = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; a.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">    far = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(far, a[i] + i);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i === current) &#123;</span><br><span class=\"line\">      current = far;</span><br><span class=\"line\">      jump++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> jump;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Code 2:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> jump = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> len = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> min = <span class=\"title class_\">Infinity</span>;</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">step</span>(<span class=\"params\">n, curindex, len, sum</span>) &#123;</span><br><span class=\"line\">    sum++;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">0</span> || sum &gt;= min) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> maxindex = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> end = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> pos = curindex + i;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (pos &gt;= len) &#123;</span><br><span class=\"line\">        end = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[pos]+pos &gt; max) &#123;</span><br><span class=\"line\">          max = nums[pos]+pos;</span><br><span class=\"line\">          maxindex=pos;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (end == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">step</span>(nums[maxindex],maxindex, len, sum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">step</span>(nums[<span class=\"number\">0</span>], <span class=\"number\">0</span>, len, <span class=\"number\">0</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#43)  Multiply Strings","url":"/leetcode/leetcode43/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.</p>\n<p>Note: You must not use any built-in BigInteger library or convert the inputs to integer directly.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定兩個表示為字符串的非負整數 num1 和 num2，返回 num1 和 num2 的乘積，也表示為字符串。</p>\n<p>注意：您不得使用任何內置 BigInteger 庫或直接將輸入轉換為整數。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: num1 = &quot;2&quot;, num2 = &quot;3&quot;</span><br><span class=\"line\">Output: &quot;6&quot;</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: num1 = &quot;123&quot;, num2 = &quot;456&quot;</span><br><span class=\"line\">Output: &quot;56088&quot;</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> multiply = <span class=\"keyword\">function</span>(<span class=\"params\">num1, num2</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> m = num1.<span class=\"property\">length</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = num2.<span class=\"property\">length</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> c = <span class=\"number\">0</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> out = <span class=\"title class_\">Array</span>(m+n).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=m-<span class=\"number\">1</span>; i&gt;=<span class=\"number\">0</span>; i--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = n-<span class=\"number\">1</span>; j&gt;=<span class=\"number\">0</span>; j--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> p = num2[j] * num1[i]</span><br><span class=\"line\">            <span class=\"keyword\">let</span> index = m+n-<span class=\"number\">1</span>-(m-<span class=\"number\">1</span>-i+n-<span class=\"number\">1</span>-j)</span><br><span class=\"line\">            out[index] += p</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(out[index]&gt;<span class=\"number\">9</span>)&#123;</span><br><span class=\"line\">                out[index-<span class=\"number\">1</span>] += <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(out[index]/<span class=\"number\">10</span>)</span><br><span class=\"line\">                out[index] %= <span class=\"number\">10</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(out[<span class=\"number\">0</span>] == <span class=\"number\">0</span>) out.<span class=\"title function_\">shift</span>()</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> out.<span class=\"property\">length</span> == <span class=\"number\">0</span>?  <span class=\"string\">&#x27;0&#x27;</span> : out.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#46)  Permutations","url":"/leetcode/leetcode46/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個由不同整數組成的數組，返回所有可能的排列。您可以按任何順序返回答案。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [1,2,3]</span><br><span class=\"line\">Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [0,1]</span><br><span class=\"line\">Output: [[0,1],[1,0]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [1]</span><br><span class=\"line\">Output: [[1]]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.從最後跟前面比較，若比前面大時將前面的數字給為較大它一點的值<br>2.將後面的值從小到最大依序填入</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> permute = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> last=nums.<span class=\"title function_\">reverse</span>().<span class=\"title function_\">join</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr=[];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> newstr=<span class=\"title function_\">nextPermutation</span>(nums);</span><br><span class=\"line\">      arr.<span class=\"title function_\">push</span>([...newstr]);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(newstr.<span class=\"title function_\">join</span>(<span class=\"string\">&quot;&quot;</span>)==last)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nextPermutation = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> curpos = -<span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">      arr.<span class=\"title function_\">push</span>(nums[i]);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (nums[i] &gt; nums[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">          curpos = i - <span class=\"number\">1</span>;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  arr = arr.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (nums[curpos] &lt; arr[i]) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> temp = arr[i];</span><br><span class=\"line\">          arr[i] = nums[curpos];</span><br><span class=\"line\">          nums[curpos] = temp;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  arr = arr.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      nums[i + curpos + <span class=\"number\">1</span>] = arr[i];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> nums;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#47) Permutations II","url":"/leetcode/leetcode47/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a collection of numbers, nums, that might contain duplicates, return all possible unique permutations in any order.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個可能包含重複的數字集合 nums，以任何順序返回所有可能的唯一排列。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [1,1,2]</span><br><span class=\"line\">Output:</span><br><span class=\"line\">[[1,1,2],</span><br><span class=\"line\"> [1,2,1],</span><br><span class=\"line\"> [2,1,1]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [1,2,3]</span><br><span class=\"line\">Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.從最後跟前面比較，若比前面大時將前面的數字給為較大它一點的值<br>2.將後面的值從小到最大依序填入</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> permute = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> last=nums.<span class=\"title function_\">reverse</span>().<span class=\"title function_\">join</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr=[];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> newstr=<span class=\"title function_\">nextPermutation</span>(nums);</span><br><span class=\"line\">      arr.<span class=\"title function_\">push</span>([...newstr]);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(newstr.<span class=\"title function_\">join</span>(<span class=\"string\">&quot;&quot;</span>)==last)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nextPermutation = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> curpos = -<span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">      arr.<span class=\"title function_\">push</span>(nums[i]);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (nums[i] &gt; nums[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">          curpos = i - <span class=\"number\">1</span>;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  arr = arr.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (nums[curpos] &lt; arr[i]) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> temp = arr[i];</span><br><span class=\"line\">          arr[i] = nums[curpos];</span><br><span class=\"line\">          nums[curpos] = temp;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  arr = arr.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">      nums[i + curpos + <span class=\"number\">1</span>] = arr[i];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> nums;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#48) Rotate Image","url":"/leetcode/leetcode48/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).</p>\n<p>You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個表示圖像的 n x n 2D 矩陣，將圖像旋轉 90 度（順時針）。</p>\n<p>您必須就地旋轉圖像，這意味著您必須直接修改輸入的 2D 矩陣。不要分配另一個二維矩陣並進行旋轉。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode48_mat1.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]</span><br><span class=\"line\">Output: [[7,4,1],[8,5,2],[9,6,3]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:<br><img src=\"/../image/leetcode/leetcode48_mat2.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]</span><br><span class=\"line\">Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.規律 1到n的第1個index 從最後矩陣值依序填入<br>2.遵循規律繼續往前一個矩陣</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> rotate = <span class=\"keyword\">function</span>(<span class=\"params\">matrix</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> newarr= <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(matrix));</span><br><span class=\"line\">  <span class=\"keyword\">let</span> x=<span class=\"number\">0</span>,y;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;matrix.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">      y=matrix.<span class=\"property\">length</span>-<span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j=<span class=\"number\">0</span>;j&lt;matrix[i].<span class=\"property\">length</span>;j++)&#123;</span><br><span class=\"line\">        matrix[i][j]=newarr[y][x];</span><br><span class=\"line\">        y--;</span><br><span class=\"line\">       </span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      x++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> matrix;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#49) Group Anagrams","url":"/leetcode/leetcode49/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an array of strings strs, group the anagrams together. You can return the answer in any order.</p>\n<p>An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個字符串數組，將字謎組合在一起。您可以按任何順序返回答案。</p>\n<p>字謎是通過重新排列不同單詞或短語的字母而形成的單詞或短語，通常只使用所有原始字母一次。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: strs = [&quot;eat&quot;,&quot;tea&quot;,&quot;tan&quot;,&quot;ate&quot;,&quot;nat&quot;,&quot;bat&quot;]</span><br><span class=\"line\">Output: [[&quot;bat&quot;],[&quot;nat&quot;,&quot;tan&quot;],[&quot;ate&quot;,&quot;eat&quot;,&quot;tea&quot;]]</span><br></pre></td></tr></table></figure>\n\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: strs = [&quot;&quot;]</span><br><span class=\"line\">Output: [[&quot;&quot;]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: strs = [&quot;a&quot;]</span><br><span class=\"line\">Output: [[&quot;a&quot;]]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.設長度26內容為0的矩陣<br>2.字串中有的字母將0改為1<br>3.檢查map是否有這個群組</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> groupAnagrams = <span class=\"keyword\">function</span>(<span class=\"params\">strs</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arr=<span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;strs.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> a_zstr=<span class=\"title class_\">Array</span>(<span class=\"number\">26</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> str <span class=\"keyword\">of</span> strs[i])&#123;</span><br><span class=\"line\">       </span><br><span class=\"line\">        a_zstr[str.<span class=\"title function_\">charCodeAt</span>()-<span class=\"string\">&quot;a&quot;</span>.<span class=\"title function_\">charCodeAt</span>()]++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">      <span class=\"keyword\">const</span> key = a_zstr.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;-&#x27;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> val=arr.<span class=\"title function_\">has</span>(key)?arr.<span class=\"title function_\">get</span>(key):[];</span><br><span class=\"line\">      val.<span class=\"title function_\">push</span>(strs[i]);</span><br><span class=\"line\">      arr.<span class=\"title function_\">set</span>(key,val);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [...arr.<span class=\"title function_\">values</span>()];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(Leetcode#5) Longest Palindromic Substring","url":"/leetcode/leetcode5/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a string s, return the longest palindromic substring in s.</p>\n<span id=\"more\"></span>\n\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個字串s，返回 s 中最長的回文子串</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;babad&quot;</span><br><span class=\"line\">Output: &quot;bab&quot;</span><br><span class=\"line\">Explanation: &quot;aba&quot; is also a valid answer.</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;cbbd&quot;</span><br><span class=\"line\">Output: &quot;bb&quot;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.長度為1回傳str第一個char</p>\n<p>2.left位置的值與right值做比較，若中間還有值時，依照偶數和奇數做不同流程</p>\n<p>3.偶數時right和left依續往前比較，若都相同時傳回最終字串</p>\n<p>4.奇數時right和left依續往前比較，若中間剩一個值不再比較，若都相同時傳回最終字串</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">lengthOfLongestSubstring</span>(<span class=\"params\">str</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (str.<span class=\"property\">length</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> str;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> chache = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> maxstr = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> startindex = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> endindex = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> lt=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> rt=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (startindex != str.<span class=\"property\">length</span> - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (endindex == str.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            chache = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">            startindex++;</span><br><span class=\"line\">            endindex = startindex + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> cur = str[endindex];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (str[startindex] == cur &amp;&amp; startindex != endindex) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> sub=endindex - startindex;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (sub &gt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                lt=startindex;</span><br><span class=\"line\">                rt=endindex;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> judge=<span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">while</span>(lt!=rt&amp;&amp;rt&gt;lt)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">let</span> ltval=str[lt];</span><br><span class=\"line\">                    <span class=\"keyword\">let</span> rtval=str[rt];</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(ltval!=rtval)&#123;</span><br><span class=\"line\">                        judge=<span class=\"literal\">false</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    lt++;</span><br><span class=\"line\">                    rt--;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (judge==<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">                    chache=str.<span class=\"title function_\">substring</span>(startindex,endindex+<span class=\"number\">1</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (chache.<span class=\"property\">length</span> &gt; maxstr.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">                        maxstr = chache;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                chache=str.<span class=\"title function_\">substring</span>(startindex,endindex+<span class=\"number\">1</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (chache.<span class=\"property\">length</span> &gt; maxstr.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">                    maxstr = chache;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">           </span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        endindex++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> maxstr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> longestPalindrome = <span class=\"keyword\">function</span> (<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> longest = <span class=\"string\">&#x27;&#x27;</span>, c;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (c = <span class=\"number\">0</span>; c &lt; s.<span class=\"property\">length</span>; c++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((s.<span class=\"property\">length</span> - c) * <span class=\"number\">2</span> &lt;= longest.<span class=\"property\">length</span>) <span class=\"keyword\">break</span>;  <span class=\"comment\">// exit early if remaining can&#x27;t surpass largest found</span></span><br><span class=\"line\"></span><br><span class=\"line\">        longest = <span class=\"title function_\">scanOutward</span>(s, longest, c, c);   <span class=\"comment\">// odd length &quot;ata&quot;</span></span><br><span class=\"line\">        longest = <span class=\"title function_\">scanOutward</span>(s, longest, c + <span class=\"number\">1</span>, c); <span class=\"comment\">// even length &quot;atta&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> longest;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">scanOutward</span>(<span class=\"params\">s, longest, left, right</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (left &gt; <span class=\"number\">0</span> &amp;&amp; right &lt; s.<span class=\"property\">length</span> &amp;&amp; s[left - <span class=\"number\">1</span>] === s[right + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">scanOutward</span>(s, longest, left - <span class=\"number\">1</span>, right + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (right - left + <span class=\"number\">1</span> &gt;= longest.<span class=\"property\">length</span>) ? s.<span class=\"title function_\">substring</span>(left, right + <span class=\"number\">1</span>) : longest;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#51)  First Missing Positive","url":"/leetcode/leetcode51/","content":"<p><strong>Difficult:Hard</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other.</p>\n<p>Given an integer n, return all distinct solutions to the n-queens puzzle. You may return the answer in any order.</p>\n<p>Each solution contains a distinct board configuration of the n-queens’ placement, where ‘Q’ and ‘.’ both indicate a queen and an empty space, respectively.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>n-皇后謎題是在 n x n 棋盤上放置 n 個皇后以使沒有兩個皇后相互攻擊的問題。</p>\n<p>給定一個整數 n，返回 n-queens 謎題的所有不同解。您可以按任何順序返回答案。</p>\n<p>每個解決方案都包含一個獨特的 n-queens 佈局的電路板配置，其中“Q”和“.”。兩者分別表示一個皇后和一個空白空間。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode51.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 4</span><br><span class=\"line\">Output: [[&quot;.Q..&quot;,&quot;...Q&quot;,&quot;Q...&quot;,&quot;..Q.&quot;],[&quot;..Q.&quot;,&quot;Q...&quot;,&quot;...Q&quot;,&quot;.Q..&quot;]]</span><br><span class=\"line\">Explanation: There exist two distinct solutions to the 4-queens puzzle as shown above</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 1</span><br><span class=\"line\">Output: [[&quot;Q&quot;]]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","categories":["Leetcode","Leetcode Hard"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#53) Maximum Subarray","url":"/leetcode/leetcode53/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.</p>\n<p>A subarray is a contiguous part of an array.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個整數數組 nums，找到總和最大的連續子數組（至少包含一個數）並返回其總和。</p>\n<p>子數組是數組的連續部分。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [-2,1,-3,4,-1,2,1,-5,4]</span><br><span class=\"line\">Output: 6</span><br><span class=\"line\">Explanation: [4,-1,2,1] has the largest sum = 6.</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [1]</span><br><span class=\"line\">Output: 1</span><br></pre></td></tr></table></figure>\n\n<p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [5,4,-1,7,8]</span><br><span class=\"line\">Output: 23</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.相加若小於時，歸零不需要前面的數字，重新開始計算</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> maxSubArray = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> max = -<span class=\"title class_\">Infinity</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> cur = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> n <span class=\"keyword\">of</span> nums) &#123;</span><br><span class=\"line\">    cur = cur &lt; <span class=\"number\">0</span> ? <span class=\"number\">0</span> : cur;</span><br><span class=\"line\">    cur += n;</span><br><span class=\"line\">    max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(cur, max);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#54) Spiral Matrix","url":"/leetcode/leetcode54/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an m x n matrix, return all elements of the matrix in spiral order.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個 m x n 矩陣，以螺旋順序返回矩陣的所有元素。</p>\n<p>Example 1:<br><img src=\"/../image/leetcode/leetcode54_1.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]</span><br><span class=\"line\">Output: [1,2,3,6,9,8,7,4,5]</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:<br><img src=\"/../image/leetcode/leetcode54_2.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]</span><br><span class=\"line\">Output: [1,2,3,4,8,12,11,10,9,5,6,7]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.方向為右下左上，往右時上面會多一層，往下時右邊會多一層，往左時下面會多一層，往上時左邊會多層，以此類推</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> spiralOrder = <span class=\"keyword\">function</span> (<span class=\"params\">matrix</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> dir = <span class=\"string\">&quot;right&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> x = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> y = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> width = matrix[<span class=\"number\">0</span>].<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> rightcell = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> downcell = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> lefthell = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> topcell = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> height = matrix.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> val;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> count=<span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> sum=(width+<span class=\"number\">1</span>)*(height+<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (count&lt;sum) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(dir);</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (dir) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">&quot;right&quot;</span>:</span><br><span class=\"line\">        val = matrix[x][y];</span><br><span class=\"line\">        y++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (y &gt; width - rightcell) &#123;</span><br><span class=\"line\">          y = width - rightcell;</span><br><span class=\"line\">          topcell++;</span><br><span class=\"line\">          x = topcell;</span><br><span class=\"line\">          dir = <span class=\"string\">&quot;down&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        arr.<span class=\"title function_\">push</span>(val);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">&quot;down&quot;</span>:</span><br><span class=\"line\">        val = matrix[x][y];</span><br><span class=\"line\">        x++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &gt; height - downcell) &#123;</span><br><span class=\"line\">          x = height - downcell;</span><br><span class=\"line\">          rightcell++;</span><br><span class=\"line\">          y = width - rightcell;</span><br><span class=\"line\">          dir = <span class=\"string\">&quot;left&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        arr.<span class=\"title function_\">push</span>(val);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">&quot;left&quot;</span>:</span><br><span class=\"line\">        val = matrix[x][y];</span><br><span class=\"line\">        y--;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (y &lt; <span class=\"number\">0</span> + lefthell) &#123;</span><br><span class=\"line\">          y = <span class=\"number\">0</span> + lefthell;</span><br><span class=\"line\">          downcell++;</span><br><span class=\"line\">          x = height - downcell;</span><br><span class=\"line\">          dir = <span class=\"string\">&quot;top&quot;</span>;</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x,y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        arr.<span class=\"title function_\">push</span>(val);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">&quot;top&quot;</span>:</span><br><span class=\"line\">         val = matrix[x][y];</span><br><span class=\"line\">         x--;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &lt; <span class=\"number\">0</span> + topcell) &#123;</span><br><span class=\"line\">          x = <span class=\"number\">0</span> + topcell;</span><br><span class=\"line\">          lefthell++;</span><br><span class=\"line\">          y = lefthell;</span><br><span class=\"line\">          dir = <span class=\"string\">&quot;right&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        arr.<span class=\"title function_\">push</span>(val);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">    count++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#55) Jump Game","url":"/leetcode/leetcode55/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>You are given an integer array nums. You are initially positioned at the array’s first index, and each element in the array represents your maximum jump length at that position.</p>\n<p>Return true if you can reach the last index, or false otherwise.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給你一個整數數組 nums。您最初位於數組的第一個索引處，數組中的每個元素都代表您在該位置的最大跳躍長度。</p>\n<p>如果可以到達最後一個索引，則返回 true，否則返回 false。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [2,3,1,1,4]</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [3,2,1,0,4]</span><br><span class=\"line\">Output: false</span><br><span class=\"line\">Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.照著最佳路線判斷是否能走完全部。</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> canJump = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (nums.<span class=\"property\">length</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> len = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> min = <span class=\"title class_\">Infinity</span>;</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">step</span>(<span class=\"params\">n, curindex, len, sum</span>) &#123;</span><br><span class=\"line\">    sum++;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">0</span> || sum &gt;= min) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> maxindex = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> end = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> pos = curindex + i;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (pos &gt;= len) &#123;</span><br><span class=\"line\">        end = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[pos] + pos &gt; max) &#123;</span><br><span class=\"line\">          max = nums[pos] + pos;</span><br><span class=\"line\">          maxindex = pos;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (end == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">step</span>(nums[maxindex], maxindex, len, sum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> judge = <span class=\"title function_\">step</span>(nums[<span class=\"number\">0</span>], <span class=\"number\">0</span>, len, <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (judge == <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#56) Merge Intervals","url":"/leetcode/leetcode56/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an array of intervals where intervals[i] &#x3D; [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個區間數組，其中區間[i] &#x3D; [starti, endi]，合併所有重疊區間，並返回一個包含輸入中所有區間的非重疊區間數組。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: intervals = [[1,3],[2,6],[8,10],[15,18]]</span><br><span class=\"line\">Output: [[1,6],[8,10],[15,18]]</span><br><span class=\"line\">Explanation: Since intervals [1,3] and [2,6] overlap, merge them into [1,6].</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: intervals = [[1,4],[4,5]]</span><br><span class=\"line\">Output: [[1,5]]</span><br><span class=\"line\">Explanation: Intervals [1,4] and [4,5] are considered overlapping.</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.先將陣列重新排列<br>2.第二個陣列跟第一個陣列的範圍做比較</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"keyword\">function</span> (<span class=\"params\">intervals</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (intervals.<span class=\"property\">length</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> intervals;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  intervals = intervals.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a[<span class=\"number\">0</span>] - b[<span class=\"number\">0</span>];</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> merges = <span class=\"keyword\">function</span> (<span class=\"params\">merge, curpos</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (curpos &gt;= merge.<span class=\"property\">length</span> - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> firstleft = merge[curpos][<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> firstright = merge[curpos][<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> nextleft = merge[curpos + <span class=\"number\">1</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> nextright = merge[curpos + <span class=\"number\">1</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (firstleft &lt;= nextleft &amp;&amp; nextleft &lt;= firstright) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> min = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(firstleft, nextleft);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(firstright, nextright);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> arr = [min, max];</span><br><span class=\"line\">      merge.<span class=\"title function_\">splice</span>(curpos, <span class=\"number\">2</span>, arr);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      curpos++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">merges</span>(merge, curpos);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">merges</span>(intervals, <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> intervals;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#57) Insert Interval","url":"/leetcode/leetcode57/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>You are given an array of non-overlapping intervals intervals where intervals[i] &#x3D; [starti, endi] represent the start and the end of the ith interval and intervals is sorted in ascending order by starti. You are also given an interval newInterval &#x3D; [start, end] that represents the start and end of another interval.</p>\n<p>Insert newInterval into intervals such that intervals is still sorted in ascending order by starti and intervals still does not have any overlapping intervals (merge overlapping intervals if necessary).</p>\n<p>Return intervals after the insertion.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個非重疊區間的數組，其中 interval[i] &#x3D; [starti, endi] 表示第 i 個區間的開始和結束，區間按 starti 升序排序。您還會得到一個間隔 newInterval &#x3D; [start, end]，它表示另一個間隔的開始和結束。</p>\n<p>將 newInterval 插入到區間中，以便區間仍然按 starti 升序排序，並且區間仍然沒有任何重疊區間（如有必要，合併重疊區間）。</p>\n<p>插入後的返回間隔。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: intervals = [[1,3],[6,9]], newInterval = [2,5]</span><br><span class=\"line\">Output: [[1,5],[6,9]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]</span><br><span class=\"line\">Output: [[1,2],[3,10],[12,16]]</span><br><span class=\"line\">Explanation: Because the new interval [4,8] overlaps with [3,5],[6,7],[8,10].</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.將要插入的陣列跟原本的陣列做比較<br>2.紀錄開始的地方和要刪除的數量</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> insert = <span class=\"keyword\">function</span> (<span class=\"params\">intervals, newInterval</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (intervals.<span class=\"property\">length</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [newInterval];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> start = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; intervals.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newInterval[<span class=\"number\">0</span>] &gt;= intervals[i][<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (intervals[i][<span class=\"number\">0</span>] &lt;= newInterval[<span class=\"number\">0</span>] &amp;&amp; intervals[i][<span class=\"number\">1</span>] &gt;= newInterval[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        start = i;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(newInterval[<span class=\"number\">1</span>], intervals[i][<span class=\"number\">1</span>]);</span><br><span class=\"line\">        newInterval = [intervals[i][<span class=\"number\">0</span>], max];</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(newInterval);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        start = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (newInterval[<span class=\"number\">0</span>] &lt;= intervals[i][<span class=\"number\">0</span>] &amp;&amp; intervals[i][<span class=\"number\">0</span>] &lt;= newInterval[<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> max = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(newInterval[<span class=\"number\">1</span>], intervals[i][<span class=\"number\">1</span>]);</span><br><span class=\"line\">        newInterval = [newInterval[<span class=\"number\">0</span>], max];</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (start != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  intervals.<span class=\"title function_\">splice</span>(start, count, newInterval);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> intervals;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#58) Length of Last Word","url":"/leetcode/leetcode58/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a string s consisting of words and spaces, return the length of the last word in the string.</p>\n<p>A word is a maximal substring consisting of non-space characters only.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個由單詞和空格組成的字符串 s，返回字符串中最後一個單詞的長度。</p>\n<p>單詞是僅由非空格字符組成的最大子串。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;Hello World&quot;</span><br><span class=\"line\">Output: 5</span><br><span class=\"line\">Explanation: The last word is &quot;World&quot; with length 5.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;   fly me   to   the moon  &quot;</span><br><span class=\"line\">Output: 4</span><br><span class=\"line\">Explanation: The last word is &quot;moon&quot; with length 4.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;luffy is still joyboy&quot;</span><br><span class=\"line\">Output: 6</span><br><span class=\"line\">Explanation: The last word is &quot;joyboy&quot; with length 6.</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.從字串後面開始尋找<br>2.當找第一個非空白字元時開始記錄長度，再碰到空白字元時結束。</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> lengthOfLastWord = <span class=\"keyword\">function</span> (<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> len = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> judge = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = s.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s[i] == <span class=\"string\">&#x27; &#x27;</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (judge == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      len++;</span><br><span class=\"line\">      judge = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> len;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#59) Spiral Matrix II","url":"/leetcode/leetcode59/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個正整數 n，生成一個 n x n 矩陣，其中以螺旋順序填充從 1 到 n2 的元素。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1<br><img src=\"/../image/leetcode/leetcode59.jpg\" alt=\"Example\" title=\"Example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 3</span><br><span class=\"line\">Output: [[1,2,3],[8,9,4],[7,6,5]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 1</span><br><span class=\"line\">Output: [[1]]</span><br></pre></td></tr></table></figure>\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.先建立好n*n的矩陣<br>2.自訂4個方向，依序填入數字</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> generateMatrix = <span class=\"keyword\">function</span> (<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">    arr.<span class=\"title function_\">push</span>(<span class=\"title class_\">Array</span>(n).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> count = n * n;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> num = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> dir = <span class=\"string\">&quot;right&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (num &lt;= count) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dir == <span class=\"string\">&quot;right&quot;</span>) &#123;</span><br><span class=\"line\">      arr[i][j] = num;</span><br><span class=\"line\">      j++;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (j &gt;= n || arr[i][j] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        dir = <span class=\"string\">&quot;down&quot;</span>;</span><br><span class=\"line\">        j = j - <span class=\"number\">1</span>;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dir == <span class=\"string\">&quot;down&quot;</span>) &#123;</span><br><span class=\"line\">      arr[i][j] = num;</span><br><span class=\"line\">      i++;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i &gt;= n || arr[i][j] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        i = i - <span class=\"number\">1</span>;</span><br><span class=\"line\">        dir = <span class=\"string\">&quot;left&quot;</span>;</span><br><span class=\"line\">        j--;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dir == <span class=\"string\">&quot;left&quot;</span>) &#123;</span><br><span class=\"line\">      arr[i][j] = num;</span><br><span class=\"line\">      j--;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (j &lt; <span class=\"number\">0</span> || arr[i][j] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        j = j + <span class=\"number\">1</span>;</span><br><span class=\"line\">        dir = <span class=\"string\">&quot;top&quot;</span>;</span><br><span class=\"line\">        i--;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dir == <span class=\"string\">&quot;top&quot;</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      arr[i][j] = num;</span><br><span class=\"line\">      i--;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || arr[i][j] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        i = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">        dir = <span class=\"string\">&quot;right&quot;</span>;</span><br><span class=\"line\">        j++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    num++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#50) Pow(x, n)","url":"/leetcode/leetcode50/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Implement pow(x, n), which calculates x raised to the power n (i.e., xn).</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>實現 pow(x, n)，它計算 x 的 n 次冪（即 xn）。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: x = 2.00000, n = 10</span><br><span class=\"line\">Output: 1024.00000</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: x = 2.10000, n = 3</span><br><span class=\"line\">Output: 9.26100</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: x = 2.00000, n = -2</span><br><span class=\"line\">Output: 0.25000</span><br><span class=\"line\">Explanation: 2-2 = 1/22 = 1/4 = 0.25</span><br></pre></td></tr></table></figure>\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用遞迴將問題猜解<br>2.若為偶數不需乘X</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> myPow = <span class=\"keyword\">function</span>(<span class=\"params\">x, n</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(n&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">power</span>(<span class=\"number\">1</span>/x,-n);</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">power</span>(x,n);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">power</span>(<span class=\"params\">x, y</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (y === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> yBy2 = y / <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> pow = <span class=\"title function_\">power</span>(x, <span class=\"built_in\">parseInt</span>( yBy2, <span class=\"number\">10</span>) );</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (y % <span class=\"number\">2</span> === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pow * pow;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x * pow * pow;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(Leetcode#6) Zigzag Conversion","url":"/leetcode/leetcode6/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>The string “PAYPALISHIRING” is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">P   A   H   N</span><br><span class=\"line\">A P L S I I G</span><br><span class=\"line\">Y   I   R</span><br></pre></td></tr></table></figure>\n<p>And then read line by line: “PAHNAPLSIIGYIR”</p>\n<p>Write the code that will take a string and make this conversion given a number of rows:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">string convert(string s, int numRows);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>字符串”PAYPALISHIRING”在給定數量的行上以鋸齒形圖案寫入，如下所示：（您可能希望以固定字體顯示此圖案以提高可讀性）</p>\n<p>然後逐行閱讀：”PAHNAPLSIIGYIR”</p>\n<p>編寫將採用字符串並在給定行數的情況下進行此轉換的代碼：</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;PAYPALISHIRING&quot;, numRows = 3</span><br><span class=\"line\">Output: &quot;PAHNAPLSIIGYIR&quot;</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;PAYPALISHIRING&quot;, numRows = 4</span><br><span class=\"line\">Output: &quot;PINALSIGYAHRPI&quot;</span><br><span class=\"line\">Explanation:</span><br><span class=\"line\">P     I    N</span><br><span class=\"line\">A   L S  I G</span><br><span class=\"line\">Y A   H R</span><br><span class=\"line\">P     I</span><br></pre></td></tr></table></figure>\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;A&quot;, numRows = 1</span><br><span class=\"line\">Output: &quot;A&quot;</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.若numRows為1 回傳s<br>2.將字串塞入二維矩陣<br>3.印出二維矩陣裡的字串</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> convert = <span class=\"keyword\">function</span>(<span class=\"params\">s, numRows</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(numRows==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> outindex=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> strindex=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr=[];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(strindex&lt;=s.<span class=\"property\">length</span>-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;numRows;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> num=outindex%(numRows-<span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(strindex&gt;s.<span class=\"property\">length</span>-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> arr[i]!=<span class=\"string\">&quot;object&quot;</span>)&#123;</span><br><span class=\"line\">                arr[i]=[];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(num==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                arr[i][outindex]=s[strindex];</span><br><span class=\"line\">                strindex++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i==numRows-num-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                arr[i][outindex]=s[strindex];</span><br><span class=\"line\">                strindex++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                arr[i][outindex]=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">         </span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        outindex++;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> newarr=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;arr.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j=<span class=\"number\">0</span>;j&lt;arr[i].<span class=\"property\">length</span>;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(arr[i][j]!=<span class=\"string\">&quot;&quot;</span>)&#123;</span><br><span class=\"line\">                newarr+=arr[i][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newarr;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Code 2:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> convert = <span class=\"keyword\">function</span>(<span class=\"params\">s, numRows</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (numRows === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> calcRow = numRows - <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> base = calcRow * <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; numRows; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> start = base - (<span class=\"number\">2</span>* (i % calcRow))</span><br><span class=\"line\">        <span class=\"keyword\">const</span> gap = base - start || start;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> num = i</span><br><span class=\"line\">        <span class=\"keyword\">let</span> isEven = <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(s[num]) &#123;</span><br><span class=\"line\">            result += s[num];</span><br><span class=\"line\">            num += isEven ? start : gap</span><br><span class=\"line\">            isEven = !isEven;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#60)  Permutation Sequence","url":"/leetcode/leetcode60/","content":"<p><strong>Difficult:Hard</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>The set [1, 2, 3, …, n] contains a total of n! unique permutations.</p>\n<p>By listing and labeling all of the permutations in order, we get the following sequence for n &#x3D; 3:</p>\n<p>“123”<br>“132”<br>“213”<br>“231”<br>“312”<br>“321”<br>Given n and k, return the kth permutation sequence.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>集合 [1, 2, 3, …, n] 總共包含 n!獨特的排列。</p>\n<p>通過按順序列出和標記所有排列，我們得到以下 n &#x3D; 3 的序列：</p>\n<p>“123”<br>“132”<br>“213”<br>“231”<br>“312”<br>“321”<br>給定 n 和 k，返回第 k 個置換序列。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 3, k = 3</span><br><span class=\"line\">Output: &quot;213&quot;</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 4, k = 9</span><br><span class=\"line\">Output: &quot;2314&quot;</span><br></pre></td></tr></table></figure>\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 3, k = 1</span><br><span class=\"line\">Output: &quot;123&quot;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用遞迴算出結果</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> getPermutation = <span class=\"keyword\">function</span> (<span class=\"params\">n, k</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">    arr.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> prenum = <span class=\"keyword\">function</span> (<span class=\"params\">arr, k</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (k &lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> curpos = -<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> curval;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = n - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> cur = arr[i];</span><br><span class=\"line\">      <span class=\"keyword\">let</span> pre = arr[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (cur &gt; pre) &#123;</span><br><span class=\"line\">        curpos = i - <span class=\"number\">1</span>;</span><br><span class=\"line\">        curval = pre;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (curpos == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      arr = arr.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">prenum</span>(arr,k-<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> newarr = arr.<span class=\"title function_\">slice</span>(curpos);</span><br><span class=\"line\">      newarr = newarr.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> twoval = arr.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, curpos);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; newarr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newarr[i] &gt; curval) &#123;</span><br><span class=\"line\">          twoval.<span class=\"title function_\">push</span>(...newarr.<span class=\"title function_\">splice</span>(i, <span class=\"number\">1</span>));</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      twoval.<span class=\"title function_\">push</span>(...newarr);</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span>  <span class=\"title function_\">prenum</span>(twoval, k - <span class=\"number\">1</span>);</span><br><span class=\"line\">     </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">trampolines</span>(prenum)(arr,k).<span class=\"title function_\">join</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">trampolines</span> (fn) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">...args</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = <span class=\"title function_\">fn</span>(...args)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">typeof</span> result === <span class=\"string\">&#x27;function&#x27;</span>) result = <span class=\"title function_\">result</span>()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Hard"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#63) Unique Paths II","url":"/leetcode/leetcode63/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>You are given an m x n integer array grid. There is a robot initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m-1][n-1]). The robot can only move either down or right at any point in time.</p>\n<p>An obstacle and space are marked as 1 or 0 respectively in grid. A path that the robot takes cannot include any square that is an obstacle.</p>\n<p>Return the number of possible unique paths that the robot can take to reach the bottom-right corner.</p>\n<p>The testcases are generated so that the answer will be less than or equal to 2 * 109.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個 m x n 整數數組網格。最初有一個機器人位於左上角（即 grid[0][0]）。機器人試圖移動到右下角（即 grid[m-1][n-1]）。機器人只能在任何時間點向下或向右移動。</p>\n<p>障礙物和空間在網格中分別標記為 1 或 0。機器人走的路徑不能包括任何作為障礙物的正方形。</p>\n<p>返回機器人到達右下角可以走的唯一路徑的數量。</p>\n<p>生成測試用例以使答案小於或等於 2 * 109。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1<br><img src=\"/../image/leetcode/leetcode63_1.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: obstacleGrid = [[0,0,0],[0,1,0],[0,0,0]]</span><br><span class=\"line\">Output: 2</span><br><span class=\"line\">Explanation: There is one obstacle in the middle of the 3x3 grid above.</span><br><span class=\"line\">There are two ways to reach the bottom-right corner:</span><br><span class=\"line\">1. Right -&gt; Right -&gt; Down -&gt; Down</span><br><span class=\"line\">2. Down -&gt; Down -&gt; Right -&gt; Right</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2<br><img src=\"/../image/leetcode/leetcode63_2.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: obstacleGrid = [[0,1],[0,0]]</span><br><span class=\"line\">Output: 1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用動態規劃求解</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> uniquePathsWithObstacles = <span class=\"keyword\">function</span> (<span class=\"params\">obstacleGrid</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = obstacleGrid[<span class=\"number\">0</span>].<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> m = obstacleGrid.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obstacleGrid[m - <span class=\"number\">1</span>][n - <span class=\"number\">1</span>] == <span class=\"number\">1</span> || obstacleGrid[<span class=\"number\">0</span>][<span class=\"number\">0</span>] == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> xstone = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> ystone = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (obstacleGrid[i][j] == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                obstacleGrid[i][j] = <span class=\"string\">&#x27;X&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    ystone = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (j == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    xstone = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (j == <span class=\"number\">0</span> &amp;&amp; xstone == <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">                obstacleGrid[i][j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span> &amp;&amp; ystone == <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">                obstacleGrid[i][j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> val = obstacleGrid[i - <span class=\"number\">1</span>][j] == <span class=\"string\">&#x27;X&#x27;</span> ? <span class=\"number\">0</span> : obstacleGrid[i - <span class=\"number\">1</span>][j];</span><br><span class=\"line\">            <span class=\"keyword\">let</span> val2 = obstacleGrid[i][j - <span class=\"number\">1</span>] == <span class=\"string\">&#x27;X&#x27;</span> ? <span class=\"number\">0</span> : obstacleGrid[i][j - <span class=\"number\">1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (obstacleGrid[i][j] != <span class=\"string\">&#x27;X&#x27;</span>) &#123;</span><br><span class=\"line\">                obstacleGrid[i][j] = val + val2;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obstacleGrid[m - <span class=\"number\">1</span>][n - <span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#64) Minimum Path Sum","url":"/leetcode/leetcode64/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.</p>\n<p>Note: You can only move either down or right at any point in time.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個填充有非負數的 m x n 網格，找到一條從左上角到右下角的路徑，該路徑最小化沿其路徑的所有數字的總和。</p>\n<p>注意：您只能在任何時間點向下或向右移動。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1<br><img src=\"/../image/leetcode/leetcode64.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: grid = [[1,3,1],[1,5,1],[4,2,1]]</span><br><span class=\"line\">Output: 7</span><br><span class=\"line\">Explanation: Because the path 1 → 3 → 1 → 1 → 1 minimizes the sum.</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: grid = [[1,2,3],[4,5,6]]</span><br><span class=\"line\">Output: 12</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用動態規劃求解</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> minPathSum = <span class=\"keyword\">function</span> (<span class=\"params\">grid</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> x = grid[<span class=\"number\">0</span>].<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> y = grid.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; y; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> obj = [];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; x; j++) &#123;</span><br><span class=\"line\">            obj.<span class=\"title function_\">push</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        arr[i] = obj;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; y; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; x; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span> &amp;&amp; j == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                arr[i][j] = grid[i][j];</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> top = <span class=\"title class_\">Infinity</span>;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> left = <span class=\"title class_\">Infinity</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i - <span class=\"number\">1</span> &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    top = grid[i - <span class=\"number\">1</span>][j];</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (arr[i - <span class=\"number\">1</span>][j] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                        top = arr[i - <span class=\"number\">1</span>][j];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (j - <span class=\"number\">1</span> &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    left = grid[i][j - <span class=\"number\">1</span>];</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (arr[i][j - <span class=\"number\">1</span>] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                        left = arr[i][j - <span class=\"number\">1</span>];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> min = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(top, left);</span><br><span class=\"line\"></span><br><span class=\"line\">                arr[i][j] = grid[i][j] + min;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr[y - <span class=\"number\">1</span>][x - <span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#62) Unique Paths","url":"/leetcode/leetcode62/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>There is a robot on an m x n grid. The robot is initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m - 1][n - 1]). The robot can only move either down or right at any point in time.</p>\n<p>Given the two integers m and n, return the number of possible unique paths that the robot can take to reach the bottom-right corner.</p>\n<p>The test cases are generated so that the answer will be less than or equal to 2 * 109.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>在 m x n 網格上有一個機器人。機器人最初位於左上角（即 grid[0][0]）。機器人試圖移動到右下角（即 grid[m - 1][n - 1]）。機器人只能在任何時間點向下或向右移動。</p>\n<p>給定兩個整數 m 和 n，返回機器人可以到達右下角的可能唯一路徑的數量。</p>\n<p>生成測試用例以使答案小於或等於 2 * 109。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1<br><img src=\"/../image/leetcode/leetcode62.png\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: m = 3, n = 7</span><br><span class=\"line\">Output: 28</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: m = 3, n = 2</span><br><span class=\"line\">Output: 3</span><br><span class=\"line\">Explanation: From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:</span><br><span class=\"line\">1. Right -&gt; Down -&gt; Down</span><br><span class=\"line\">2. Down -&gt; Down -&gt; Right</span><br><span class=\"line\">3. Down -&gt; Right -&gt; Down</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用動態規劃求解</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> uniquePaths = <span class=\"keyword\">function</span>(<span class=\"params\">m, n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr=[];</span><br><span class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;m;i++)</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         arr[i]=[];</span><br><span class=\"line\">         <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j=<span class=\"number\">0</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">             <span class=\"keyword\">if</span>(j==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                 arr[i].<span class=\"title function_\">push</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                 arr[i].<span class=\"title function_\">push</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                 arr[i].<span class=\"title function_\">push</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">1</span>;i&lt;m;i++)</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j=<span class=\"number\">1</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">             arr[i][j]=arr[i-<span class=\"number\">1</span>][j]+arr[i][j-<span class=\"number\">1</span>];</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> arr[m-<span class=\"number\">1</span>][n-<span class=\"number\">1</span>];</span><br><span class=\"line\"> &#125;;</span><br></pre></td></tr></table></figure>\n\n\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#66) Plus One","url":"/leetcode/leetcode66/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0’s.</p>\n<p>Increment the large integer by one and return the resulting array of digits.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個表示為整數數組digits 的大整數，其中每個digits[i] 是整數的第i 個數字。數字按從左到右的順序從最高有效到最低有效排序。大整數不包含任何前導 0。</p>\n<p>將大整數加一併返回結果數字數組。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: digits = [1,2,3]</span><br><span class=\"line\">Output: [1,2,4]</span><br><span class=\"line\">Explanation: The array represents the integer 123.</span><br><span class=\"line\">Incrementing by one gives 123 + 1 = 124.</span><br><span class=\"line\">Thus, the result should be [1,2,4].</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: digits = [4,3,2,1]</span><br><span class=\"line\">Output: [4,3,2,2]</span><br><span class=\"line\">Explanation: The array represents the integer 4321.</span><br><span class=\"line\">Incrementing by one gives 4321 + 1 = 4322.</span><br><span class=\"line\">Thus, the result should be [4,3,2,2].</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: digits = [9]</span><br><span class=\"line\">Output: [1,0]</span><br><span class=\"line\">Explanation: The array represents the integer 9.</span><br><span class=\"line\">Incrementing by one gives 9 + 1 = 10.</span><br><span class=\"line\">Thus, the result should be [1,0].</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.從最後開始計算超過10進位</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> plusOne = <span class=\"keyword\">function</span>(<span class=\"params\">digits</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> end=<span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> len=digits.<span class=\"property\">length</span>-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(end)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> d=digits[len]+<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(d&gt;<span class=\"number\">9</span>)&#123;</span><br><span class=\"line\">            digits[len]=d%<span class=\"number\">10</span>;</span><br><span class=\"line\">            len--;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(len&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                digits.<span class=\"title function_\">unshift</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">                end=<span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            digits[len]=d;</span><br><span class=\"line\">            end=<span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> digits;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#69) Sqrt(x)","url":"/leetcode/leetcode69/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a non-negative integer x, compute and return the square root of x.</p>\n<p>Since the return type is an integer, the decimal digits are truncated, and only the integer part of the result is returned.</p>\n<p>Note: You are not allowed to use any built-in exponent function or operator, such as pow(x, 0.5) or x ** 0.5.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個非負整數 x，計算並返回 x 的平方根。</p>\n<p>由於返回類型是整數，所以十進制數字被截斷，只返回結果的整數部分。</p>\n<p>注意：您不能使用任何內置的指數函數或運算符，例如 pow(x, 0.5) 或 x ** 0.5。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: x = 4</span><br><span class=\"line\">Output: 2</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: x = 8</span><br><span class=\"line\">Output: 2</span><br><span class=\"line\">Explanation: The square root of 8 is 2.82842..., and since the decimal part is truncated, 2 is returned.</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.left和right取middle<br>2.middle<em>middle若大於x時將right&#x3D;middle<br>3.middle</em>middle若小於x時將left&#x3D;middle</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mySqrt = <span class=\"keyword\">function</span>(<span class=\"params\">x</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x &lt; <span class=\"number\">2</span>) <span class=\"keyword\">return</span> x</span><br><span class=\"line\">    <span class=\"keyword\">let</span> left = <span class=\"number\">0</span>, right = x</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(right - left &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> middle = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((left + right) / <span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">const</span> squrt = middle * middle</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(squrt &gt; x) &#123;</span><br><span class=\"line\">            right = middle</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (squrt &lt; x)&#123;</span><br><span class=\"line\">            left = middle</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> middle</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">return</span> left</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#61) Rotate List","url":"/leetcode/leetcode61/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the head of a linked list, rotate the list to the right by k places.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定鍊錶的頭部，將鍊錶向右旋轉 k 位。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1<br><img src=\"/../image/leetcode/leetcode61_1.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1,2,3,4,5], k = 2</span><br><span class=\"line\">Output: [4,5,1,2,3]</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2<br><img src=\"/../image/leetcode/leetcode61_2.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [0,1,2], k = 4</span><br><span class=\"line\">Output: [2,0,1]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.先算出node長度<br>2.反轉node將最後的依序往前</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> rotateRight = <span class=\"keyword\">function</span> (<span class=\"params\">head, k</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (head == <span class=\"literal\">null</span> || head.<span class=\"property\">next</span> == <span class=\"literal\">null</span> || k == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> headnode = head;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> curnode = headnode;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> prenode;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> length = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (curnode.<span class=\"property\">next</span> != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        prenode = curnode;</span><br><span class=\"line\">        curnode = curnode.<span class=\"property\">next</span>;</span><br><span class=\"line\">        length++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    prenode.<span class=\"property\">next</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    curnode.<span class=\"property\">next</span> = headnode;</span><br><span class=\"line\">    headnode = curnode;</span><br><span class=\"line\">    k = (k - <span class=\"number\">1</span>) % length;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; k; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (curnode.<span class=\"property\">next</span> != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            prenode = curnode;</span><br><span class=\"line\">            curnode = curnode.<span class=\"property\">next</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        prenode.<span class=\"property\">next</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        curnode.<span class=\"property\">next</span> = headnode;</span><br><span class=\"line\">        headnode = curnode;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> curnode;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(Leetcode#7) Reverse Integer","url":"/leetcode/leetcode7/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-2^31, 2^31 - 1], then return 0.</p>\n<p>Assume the environment does not allow you to store 64-bit integers (signed or unsigned).</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個帶符號的 32 位整數 x，返回 x 的數字反轉。如果反轉 x 導致值超出有符號的 32 位整數範圍 [-2^31, 2^31 - 1]，則返回 0。</p>\n<p>假設環境不允許您存儲 64 位整數（有符號或無符號）</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: x = 123</span><br><span class=\"line\">Output: 321</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: x = -123</span><br><span class=\"line\">Output: -321</span><br></pre></td></tr></table></figure>\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: x = 120</span><br><span class=\"line\">Output: 21</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.將數字變成字串<br>2.判斷是否為負的整數<br>3.把負值提出再跑反向迴圈<br>4.判定是否超出範圍</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reverse = <span class=\"keyword\">function</span>(<span class=\"params\">x</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> k=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        k=-<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> str=<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(x).<span class=\"title function_\">toString</span>();</span><br><span class=\"line\">    <span class=\"keyword\">let</span> tempstr=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=str.<span class=\"property\">length</span>-<span class=\"number\">1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">         tempstr+=str[i];</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"title class_\">Number</span>(tempstr)&gt;(<span class=\"title class_\">Math</span>.<span class=\"title function_\">pow</span>(<span class=\"number\">2</span>,<span class=\"number\">31</span>)-<span class=\"number\">1</span>)?<span class=\"number\">0</span>:tempstr*k;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"> &#125;;</span><br></pre></td></tr></table></figure>\n\n\n<p>Code 2 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reverse = <span class=\"keyword\">function</span>(<span class=\"params\">x</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> k =<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">     k=-<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> res = <span class=\"title class_\">Number</span>(<span class=\"title class_\">String</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(x)).<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">reverse</span>().<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&#x27;</span>));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res&gt;<span class=\"title class_\">Math</span>.<span class=\"title function_\">pow</span>(<span class=\"number\">2</span>,<span class=\"number\">31</span>)?<span class=\"number\">0</span>:res*k;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#70) Climbing Stairs","url":"/leetcode/leetcode70/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>You are climbing a staircase. It takes n steps to reach the top.</p>\n<p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>你正在爬樓梯。到達頂峰需要 n 步。</p>\n<p>每次您可以爬 1 或 2 級台階。你可以通過多少種不同的方式爬上頂峰？</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 2</span><br><span class=\"line\">Output: 2</span><br><span class=\"line\">Explanation: There are two ways to climb to the top.</span><br><span class=\"line\">1. 1 step + 1 step</span><br><span class=\"line\">2. 2 steps</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 3</span><br><span class=\"line\">Output: 3</span><br><span class=\"line\">Explanation: There are three ways to climb to the top.</span><br><span class=\"line\">1. 1 step + 1 step + 1 step</span><br><span class=\"line\">2. 1 step + 2 steps</span><br><span class=\"line\">3. 2 steps + 1 step</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.動態規劃 走到N的走法為n-1或n-2得出f(n)&#x3D;f(n-1)+f(n-2)</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr=[];</span><br><span class=\"line\"><span class=\"keyword\">var</span> climbStairs = <span class=\"keyword\">function</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">     </span><br><span class=\"line\">     <span class=\"keyword\">if</span>(!arr[n]) arr[n]=<span class=\"title function_\">climbStairs</span>(n-<span class=\"number\">2</span>)+<span class=\"title function_\">climbStairs</span>(n-<span class=\"number\">1</span>);</span><br><span class=\"line\">     <span class=\"keyword\">return</span> arr[n];</span><br><span class=\"line\"> </span><br><span class=\"line\"> &#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#71) Simplify Path","url":"/leetcode/leetcode71/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given a string path, which is an absolute path (starting with a slash ‘&#x2F;‘) to a file or directory in a Unix-style file system, convert it to the simplified canonical path.</p>\n<p>In a Unix-style file system, a period ‘.’ refers to the current directory, a double period ‘..’ refers to the directory up a level, and any multiple consecutive slashes (i.e. ‘&#x2F;&#x2F;‘) are treated as a single slash ‘&#x2F;‘. For this problem, any other format of periods such as ‘…’ are treated as file&#x2F;directory names.</p>\n<p>The canonical path should have the following format:</p>\n<p>The path starts with a single slash ‘&#x2F;‘.<br>Any two directories are separated by a single slash ‘&#x2F;‘.<br>The path does not end with a trailing ‘&#x2F;‘.<br>The path only contains the directories on the path from the root directory to the target file or directory (i.e., no period ‘.’ or double period ‘..’)<br>Return the simplified canonical path.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個字符串路徑，它是 Unix 風格文件系統中文件或目錄的絕對路徑（以斜杠 ‘&#x2F;‘ 開頭），將其轉換為簡化的規範路徑。</p>\n<p>在 Unix 風格的文件系統中，句點 ‘.’表示當前目錄，雙句點“..”表示上一級目錄，任何多個連續斜杠（即“&#x2F;&#x2F;”）都被視為單個斜杠“&#x2F;”。對於此問題，任何其他格式的句點（例如“…”）都被視為文件&#x2F;目錄名稱。</p>\n<p>規範路徑應具有以下格式：</p>\n<p>路徑以單斜杠“&#x2F;”開頭。<br>任何兩個目錄都由一個斜杠“&#x2F;”分隔。<br>路徑不以尾隨“&#x2F;”結尾。<br>該路徑僅包含從根目錄到目標文件或目錄的路徑上的目錄（即沒有句點“.”或雙句點“..”）<br>返回簡化的規範路徑。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: path = &quot;/home/&quot;</span><br><span class=\"line\">Output: &quot;/home&quot;</span><br><span class=\"line\">Explanation: Note that there is no trailing slash after the last directory name.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: path = &quot;/../&quot;</span><br><span class=\"line\">Output: &quot;/&quot;</span><br><span class=\"line\">Explanation: Going one level up from the root directory is a no-op, as the root level is the highest level you can go.</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: path = &quot;/home//foo/&quot;</span><br><span class=\"line\">Output: &quot;/home/foo&quot;</span><br><span class=\"line\">Explanation: In the canonical path, multiple consecutive slashes are replaced by a single one.</span><br></pre></td></tr></table></figure>\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.用一個陣列將路徑存在裡面<br>2.當’..&#x2F;‘或是’..’結束時移掉一個路徑</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> simplifyPath = <span class=\"keyword\">function</span> (<span class=\"params\">path</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> str = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; path.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (path[i] == <span class=\"string\">&#x27;.&#x27;</span>) &#123;</span><br><span class=\"line\">            num++;</span><br><span class=\"line\">            str += <span class=\"string\">&quot;.&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (path[i] != <span class=\"string\">&#x27;.&#x27;</span> &amp;&amp; path[i] != <span class=\"string\">&#x27;/&#x27;</span>) &#123;</span><br><span class=\"line\">            str += path[i];</span><br><span class=\"line\">            num = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (path[i] == <span class=\"string\">&#x27;/&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (num == <span class=\"number\">1</span> &amp;&amp; str.<span class=\"property\">length</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                num = <span class=\"number\">0</span>;</span><br><span class=\"line\">                str = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (num == <span class=\"number\">2</span> &amp;&amp; str.<span class=\"property\">length</span> == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                arr.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">                num = <span class=\"number\">0</span>;</span><br><span class=\"line\">                str = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (str != <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">                arr.<span class=\"title function_\">push</span>(str);</span><br><span class=\"line\">                num = <span class=\"number\">0</span>;</span><br><span class=\"line\">                str = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num == <span class=\"number\">1</span> &amp;&amp; str.<span class=\"property\">length</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        num = <span class=\"number\">0</span>;</span><br><span class=\"line\">        str = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (num == <span class=\"number\">2</span> &amp;&amp; str.<span class=\"property\">length</span> == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        arr.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">        num = <span class=\"number\">0</span>;</span><br><span class=\"line\">        str = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (str != <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">        arr.<span class=\"title function_\">push</span>(str);</span><br><span class=\"line\">        num = <span class=\"number\">0</span>;</span><br><span class=\"line\">        str = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;/&quot;</span> + arr.<span class=\"title function_\">join</span>(<span class=\"string\">&quot;/&quot;</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#73) Set Matrix Zeroes","url":"/leetcode/leetcode73/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0’s.</p>\n<p>You must do it in place.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個 m x n 整數矩陣矩陣，如果一個元素為 0，則將其整行和整列設置為 0。</p>\n<p>你必須在原地做。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1<br><img src=\"/../image/leetcode/leetcode73_1.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]</span><br><span class=\"line\">Output: [[1,0,1],[0,0,0],[1,0,1]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2<br><img src=\"/../image/leetcode/leetcode73_2.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]</span><br><span class=\"line\">Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><ol>\n<li>將零的位置記錄起來</li>\n<li>將有零的位置橫和縱都改為0</li>\n</ol>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> setZeroes = <span class=\"keyword\">function</span> (<span class=\"params\">matrix</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> m = matrix[<span class=\"number\">0</span>].<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = matrix.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> x = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> y = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (matrix[i][j] == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!x.<span class=\"title function_\">includes</span>(j)) &#123;</span><br><span class=\"line\">                    x.<span class=\"title function_\">push</span>(j);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!y.<span class=\"title function_\">includes</span>(i)) &#123;</span><br><span class=\"line\">                    y.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (x.<span class=\"title function_\">includes</span>(j)) &#123;</span><br><span class=\"line\">                matrix[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (y.<span class=\"title function_\">includes</span>(i)) &#123;</span><br><span class=\"line\">                matrix[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> matrix;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#67) Add Binary","url":"/leetcode/leetcode67/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given two binary strings a and b, return their sum as a binary string.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定兩個二進製字符串 a 和 b，將它們的和作為二進製字符串返回。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: a = &quot;11&quot;, b = &quot;1&quot;</span><br><span class=\"line\">Output: &quot;100&quot;</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: a = &quot;1010&quot;, b = &quot;1011&quot;</span><br><span class=\"line\">Output: &quot;10101&quot;</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.從最後開始計算超過2進位</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> addBinary = <span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> len = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(a.<span class=\"property\">length</span> - <span class=\"number\">1</span>, b.<span class=\"property\">length</span> - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> lens = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> str = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (lens &lt;= len || n == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> aval = <span class=\"built_in\">parseInt</span>(a[a.<span class=\"property\">length</span> - <span class=\"number\">1</span> - lens]) || <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> bval = <span class=\"built_in\">parseInt</span>(b[b.<span class=\"property\">length</span> - <span class=\"number\">1</span> - lens]) || <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> sum = aval + bval + n;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sum &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            n = <span class=\"number\">1</span>;</span><br><span class=\"line\">            sum %= <span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            n = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        str.<span class=\"title function_\">unshift</span>(sum);</span><br><span class=\"line\">        lens++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str.<span class=\"title function_\">join</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#74) Search a 2D Matrix","url":"/leetcode/leetcode74/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:</p>\n<p>Integers in each row are sorted from left to right.<br>The first integer of each row is greater than the last integer of the previous row.</p>\n<span id=\"more\"></span>\n\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>編寫一個在 m x n 整數矩陣矩陣中搜索值目標的高效算法。該矩陣具有以下性質：</p>\n<p>每行中的整數從左到右排序。<br>每行的第一個整數大於前一行的最後一個整數。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1<br><img src=\"/../image/leetcode/leetcode74_1.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n\n\n<p>Example 2<br><img src=\"/../image/leetcode/leetcode74_2.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用二分法求解</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> searchMatrix = <span class=\"keyword\">function</span>(<span class=\"params\">matrix, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> m=matrix[<span class=\"number\">0</span>].<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n=matrix.<span class=\"property\">length</span>-<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> x=m-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> y=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(x&gt;=<span class=\"number\">0</span>&amp;&amp;y&lt;=n)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> val=matrix[y][x];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(target==val)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(target&gt;val)&#123;</span><br><span class=\"line\">            y++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(target&lt;val)&#123;</span><br><span class=\"line\">            x--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#75) Sort Colors","url":"/leetcode/leetcode75/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.</p>\n<p>We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.</p>\n<p>You must solve this problem without using the library’s sort function.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個數組 nums，其中有 n 個對象，顏色為紅色、白色或藍色，就地對它們進行排序，使相同顏色的對象相鄰，顏色按紅色、白色和藍色的順序排列。</p>\n<p>我們將使用整數 0、1 和 2 分別表示紅色、白色和藍色。</p>\n<p>您必須在不使用庫的排序功能的情況下解決此問題。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [2,0,2,1,1,0]</span><br><span class=\"line\">Output: [0,0,1,1,2,2]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [2,0,1]</span><br><span class=\"line\">Output: [0,1,2]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用泡沫排序法求解</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> sortColors = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;nums.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j=i+<span class=\"number\">1</span>;j&lt;nums.<span class=\"property\">length</span>;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i]&gt;nums[j])&#123;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> temp=nums[i];</span><br><span class=\"line\">                nums[i]=nums[j];</span><br><span class=\"line\">                nums[j]=temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#77) Combinations","url":"/leetcode/leetcode77/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given two integers n and k, return all possible combinations of k numbers chosen from the range [1, n].</p>\n<p>You may return the answer in any order.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定兩個整數 n 和 k，返回從範圍 [1, n] 中選擇的 k 個數字的所有可能組合。</p>\n<p>您可以按任何順序返回答案。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 4, k = 2</span><br><span class=\"line\">Output: [[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]]</span><br><span class=\"line\">Explanation: There are 4 choose 2 = 6 total combinations.</span><br><span class=\"line\">Note that combinations are unordered, i.e., [1,2] and [2,1] are considered to be the same combination.</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 1, k = 1</span><br><span class=\"line\">Output: [[1]]</span><br><span class=\"line\">Explanation: There is 1 choose 1 = 1 total combination.</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.已知n為1-n個數字，k為抓取的數量<br>2 將k個數量放入陣列裡[0,…k]<br>3.排列組合由最後一個陣列位置依序往後到最後時前一個數字位置往後一個，依此規則循環直到第一個數字位置無法前進時返回結果</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> combine = <span class=\"keyword\">function</span> (<span class=\"params\">n, k</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> index = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        arr.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; k; i++) &#123;</span><br><span class=\"line\">        index.<span class=\"title function_\">push</span>(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index, n - k);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> last = index.<span class=\"property\">length</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> curpos = <span class=\"keyword\">function</span> (<span class=\"params\">arr, pos</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> inarr = [];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; index.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> indexs = index[i];</span><br><span class=\"line\">            inarr.<span class=\"title function_\">push</span>(arr[indexs]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(inarr);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index[<span class=\"number\">0</span>] == n - k) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            index[pos]++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (index[pos] &gt; n - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> next = pos;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (index[next] &gt; n - (pos - next) - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                    next--;</span><br><span class=\"line\">                    index[next]++;</span><br><span class=\"line\">                    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(index[next]);</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = next; i &lt; index.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">                    index[i] = index[next] + (i - next);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"title function_\">curpos</span>(arr, pos);</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"title function_\">curpos</span>(arr, pos);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">curpos</span>(arr, last);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#78) Subsets","url":"/leetcode/leetcode78/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an integer array nums of unique elements, return all possible subsets (the power set).</p>\n<p>The solution set must not contain duplicate subsets. Return the solution in any order.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個包含唯一元素的整數數組 nums，返回所有可能的子集（冪集）。</p>\n<p>解決方案集不得包含重複的子集。以任何順序返回解決方案。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [1,2,3]</span><br><span class=\"line\">Output: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [0]</span><br><span class=\"line\">Output: [[],[0]]</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.依動態編成求解</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> subsets = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = [[nums[<span class=\"number\">0</span>]]];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> curr = nums[i];</span><br><span class=\"line\">        res.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">a</span> =&gt;</span> res.<span class=\"title function_\">push</span>([...a, curr]));</span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>([curr]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    res.<span class=\"title function_\">unshift</span>([]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#79) Word Search","url":"/leetcode/leetcode79/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an m x n grid of characters board and a string word, return true if word exists in the grid.</p>\n<p>The word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個 m x n 的字符板網格和一個字符串單詞，如果單詞存在於網格中，則返回 true。</p>\n<p>單詞可以由順序相鄰單元格的字母構成，其中相鄰單元格水平或垂直相鄰。同一個字母單元格不能多次使用。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1<br><img src=\"/../image/leetcode/leetcode79_1.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: board = [[&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;E&quot;],[&quot;S&quot;,&quot;F&quot;,&quot;C&quot;,&quot;S&quot;],[&quot;A&quot;,&quot;D&quot;,&quot;E&quot;,&quot;E&quot;]], word = &quot;ABCCED&quot;</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 2<br><img src=\"/../image/leetcode/leetcode79_2.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: board = [[&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;E&quot;],[&quot;S&quot;,&quot;F&quot;,&quot;C&quot;,&quot;S&quot;],[&quot;A&quot;,&quot;D&quot;,&quot;E&quot;,&quot;E&quot;]], word = &quot;SEE&quot;</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 3<br><img src=\"/../image/leetcode/leetcode79_3.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: board = [[&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;E&quot;],[&quot;S&quot;,&quot;F&quot;,&quot;C&quot;,&quot;S&quot;],[&quot;A&quot;,&quot;D&quot;,&quot;E&quot;,&quot;E&quot;]], word = &quot;ABCB&quot;</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用遞迴求解</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">exist</span> = (<span class=\"params\">B, W</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; B.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; B[i].<span class=\"property\">length</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (W[<span class=\"number\">0</span>]==B[i][j]&amp;&amp;<span class=\"title function_\">search</span>(B, W, i, j, <span class=\"number\">0</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">search</span> = (<span class=\"params\">B, W, row, col, wIdx</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (wIdx === W.<span class=\"property\">length</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (row &lt; <span class=\"number\">0</span> || row &gt;= B.<span class=\"property\">length</span> || col &lt; <span class=\"number\">0</span> || col &gt;= B[row].<span class=\"property\">length</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (W[wIdx] === B[row][col]) &#123;</span><br><span class=\"line\">        B[row][col] = <span class=\"string\">&#x27;#&#x27;</span>; <span class=\"comment\">// Visited</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (</span><br><span class=\"line\">            <span class=\"title function_\">search</span>(B, W, row + <span class=\"number\">1</span>, col, wIdx + <span class=\"number\">1</span>) ||</span><br><span class=\"line\">            <span class=\"title function_\">search</span>(B, W, row - <span class=\"number\">1</span>, col, wIdx + <span class=\"number\">1</span>) ||</span><br><span class=\"line\">            <span class=\"title function_\">search</span>(B, W, row, col + <span class=\"number\">1</span>, wIdx + <span class=\"number\">1</span>) ||</span><br><span class=\"line\">            <span class=\"title function_\">search</span>(B, W, row, col - <span class=\"number\">1</span>, wIdx + <span class=\"number\">1</span>)</span><br><span class=\"line\">        )</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        B[row][col] = W[wIdx];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(Leetcode#8) String to Integer (atoi)","url":"/leetcode/leetcode8/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Implement atoi to convert a string to an integer.</p>\n<p>Hint: Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself what are the possible input cases.</p>\n<p>Notes: It is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible to gather all the input requirements up front.</p>\n<p>Requirements for atoi:<br>The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.</p>\n<p>The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.</p>\n<p>If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.</p>\n<p>If no valid conversion could be performed, a zero value is returned. If the correct value is out of the range of representable values, INT_MAX (2147483647) or INT_MIN (-2147483648) is returned.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>實作atoi將字串轉成int。</p>\n<p>提示：小心仔細的考慮所有可能的輸入，如果你想挑戰自己，不要看下面的文字，直接想可能的輸入有哪些就可以開始寫了。</p>\n<p>注意：這題目的輸入值有各種組合，你要先收集任何可能的輸入。</p>\n<p>atoi的需求：<br>首先輸入的開頭可能是一連串的空白，因此要先找到第一個非空白字元。然後從這個字元開始可能會有正負號在數字的前面，將這些字串轉換成數字。</p>\n<p>如果在數字後面有出現其他非數字的符號，因為他們對值沒有影響，可以忽略這些符號。</p>\n<p>如果第一個非空白字元不是一個合法的int整數，或者字串裡面都是空白字元，那也視為不合法的輸入。</p>\n<p>不合法的輸入回傳0，如果轉換後的數字num &gt; INT_MAX (2147483647) 回傳2147483647， num &lt; INT_MIN (-2147483648) 回傳 -2147483648</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;42&quot;</span><br><span class=\"line\">Output: 42</span><br><span class=\"line\">Explanation: The underlined characters are what is read in, the caret is the current reader position.</span><br><span class=\"line\">Step 1: &quot;42&quot; (no characters read because there is no leading whitespace)</span><br><span class=\"line\">         ^</span><br><span class=\"line\">Step 2: &quot;42&quot; (no characters read because there is neither a &#x27;-&#x27; nor &#x27;+&#x27;)</span><br><span class=\"line\">         ^</span><br><span class=\"line\">Step 3: &quot;42&quot; (&quot;42&quot; is read in)</span><br><span class=\"line\">           ^</span><br><span class=\"line\">The parsed integer is 42.</span><br><span class=\"line\">Since 42 is in the range [-2^31, 2^31 - 1], the final result is 42.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;   -42&quot;</span><br><span class=\"line\">Output: -42</span><br><span class=\"line\">Explanation:</span><br><span class=\"line\">Step 1: &quot;   -42&quot; (leading whitespace is read and ignored)</span><br><span class=\"line\">            ^</span><br><span class=\"line\">Step 2: &quot;   -42&quot; (&#x27;-&#x27; is read, so the result should be negative)</span><br><span class=\"line\">             ^</span><br><span class=\"line\">Step 3: &quot;   -42&quot; (&quot;42&quot; is read in)</span><br><span class=\"line\">               ^</span><br><span class=\"line\">The parsed integer is -42.</span><br><span class=\"line\">Since -42 is in the range [-2^31, 2^31 - 1], the final result is -42.</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;4193 with words&quot;</span><br><span class=\"line\">Output: 4193</span><br><span class=\"line\">Explanation:</span><br><span class=\"line\">Step 1: &quot;4193 with words&quot; (no characters read because there is no leading whitespace)</span><br><span class=\"line\">         ^</span><br><span class=\"line\">Step 2: &quot;4193 with words&quot; (no characters read because there is neither a &#x27;-&#x27; nor &#x27;+&#x27;)</span><br><span class=\"line\">         ^</span><br><span class=\"line\">Step 3: &quot;4193 with words&quot; (&quot;4193&quot; is read in; reading stops because the next character is a non-digit)</span><br><span class=\"line\">             ^</span><br><span class=\"line\">The parsed integer is 4193.</span><br><span class=\"line\">Since 4193 is in the range [-2^31, 2^31 - 1], the final result is 4193.</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.判定是否為空白如是空白繼續前進<br>2.判斷正負號<br>3.判定是否為數字<br>4.非數字時直接跳出迴圈<br>5.判定是否超出範圍</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> myAtoi = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> reg=<span class=\"regexp\">/[0-9]/</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> k=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> str=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(s[num]==<span class=\"string\">&#x27; &#x27;</span>)&#123;</span><br><span class=\"line\">        num++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    s=s.<span class=\"title function_\">slice</span>(num);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s[<span class=\"number\">0</span>]==<span class=\"string\">&#x27;-&#x27;</span>||s[<span class=\"number\">0</span>]==<span class=\"string\">&quot;+&quot;</span>)&#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s[<span class=\"number\">0</span>]==<span class=\"string\">&quot;-&quot;</span>)&#123;</span><br><span class=\"line\">            k=-<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        s=s.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;s.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(reg.<span class=\"title function_\">test</span>(s[i]))&#123;</span><br><span class=\"line\">            str+=s[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> val=str*k;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(str==<span class=\"string\">&quot;&quot;</span>)&#123;</span><br><span class=\"line\">        val=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(val&gt;<span class=\"title class_\">Math</span>.<span class=\"title function_\">pow</span>(<span class=\"number\">2</span>,<span class=\"number\">31</span>)-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        val=<span class=\"title class_\">Math</span>.<span class=\"title function_\">pow</span>(<span class=\"number\">2</span>,<span class=\"number\">31</span>)-<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(val&lt;-<span class=\"title class_\">Math</span>.<span class=\"title function_\">pow</span>(<span class=\"number\">2</span>,<span class=\"number\">31</span>))&#123;</span><br><span class=\"line\">        val=-<span class=\"title class_\">Math</span>.<span class=\"title function_\">pow</span>(<span class=\"number\">2</span>,<span class=\"number\">31</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> val;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#81) Search in Rotated Sorted Array II","url":"/leetcode/leetcode81/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>There is an integer array nums sorted in non-decreasing order (not necessarily with distinct values).</p>\n<p>Before being passed to your function, nums is rotated at an unknown pivot index k (0 &lt;&#x3D; k &lt; nums.length) such that the resulting array is [nums[k], nums[k+1], …, nums[n-1], nums[0], nums[1], …, nums[k-1]] (0-indexed). For example, [0,1,2,4,4,4,5,6,6,7] might be rotated at pivot index 5 and become [4,5,6,6,7,0,1,2,4,4].</p>\n<p>Given the array nums after the rotation and an integer target, return true if target is in nums, or false if it is not in nums.</p>\n<p>You must decrease the overall operation steps as much as possible.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>有一個整數數組 nums 以非遞減順序排序（不一定具有不同的值）。</p>\n<p>在傳遞給您的函數之前，nums 在未知的樞軸索引 k (0 &lt;&#x3D; k &lt; nums.length) 處旋轉，使得結果數組為 [nums[k], nums[k+1], …, nums [n-1], nums[0], nums[1], …, nums[k-1]] (0-indexed)。例如，[0,1,2,4,4,4,5,6,6,7] 可能在樞軸索引 5 處旋轉並變為 [4,5,6,6,7,0,1,2, 4,4]。</p>\n<p>給定旋轉後的數組 nums 和一個整數目標，如果目標在 nums 中，則返回 true，如果不在 nums 中，則返回 false。</p>\n<p>您必須盡可能減少整體操作步驟。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [2,5,6,0,0,1,2], target = 0</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [2,5,6,0,0,1,2], target = 3</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.如果比頭小時，從尾巴開始搜尋</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> search = <span class=\"keyword\">function</span> (<span class=\"params\">nums, target</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> start = <span class=\"string\">&quot;head&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (target &lt; nums[nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        start = <span class=\"string\">&quot;end&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (start == <span class=\"string\">&quot;head&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt;= nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (target == nums[i]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (start == <span class=\"string\">&quot;end&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = nums.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (target == nums[i]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#83) Remove Duplicates from Sorted List","url":"/leetcode/leetcode83/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定排序鍊錶的頭部，刪除所有重複項，使每個元素只出現一次。返回排序好的鍊錶。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode83_1.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1,1,2]</span><br><span class=\"line\">Output: [1,2]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:<br><img src=\"/../image/leetcode/leetcode83_2.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1,1,2,3,3]</span><br><span class=\"line\">Output: [1,2,3]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.設當前及存放開頭的變數<br>2.當遇到相同值時，依序往前比較</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> deleteDuplicates = <span class=\"keyword\">function</span> (<span class=\"params\">head</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cur = head;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> headnode = head;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (cur != <span class=\"literal\">null</span>&amp;&amp;cur.<span class=\"property\">next</span>!=<span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> curval = cur.<span class=\"property\">val</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (curval == cur.<span class=\"property\">next</span>.<span class=\"property\">val</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> next = cur.<span class=\"property\">next</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (next != <span class=\"literal\">null</span> &amp;&amp; next.<span class=\"property\">val</span> == curval) &#123;</span><br><span class=\"line\">                next = next.<span class=\"property\">next</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            cur.<span class=\"property\">next</span>=next;</span><br><span class=\"line\">            cur=next;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            cur=cur.<span class=\"property\">next</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> headnode;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#82)  Remove Duplicates from Sorted List II","url":"/leetcode/leetcode82/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list. Return the linked list sorted as well.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個排序鍊錶的頭部，刪除所有具有重複數字的節點，只留下原始鍊錶中不同的數字。返回排序好的鍊錶。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode82_1.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1,2,3,3,4,4,5]</span><br><span class=\"line\">Output: [1,2,5]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:<br><img src=\"/../image/leetcode/leetcode82_2.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1,1,1,2,3]</span><br><span class=\"line\">Output: [2,3]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.設當前及上一個node和存放開頭的變數<br>2.當遇到相同值時，依序往前比較<br>3.如pre還是空時，將開頭直接等於next</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> deleteDuplicates = <span class=\"keyword\">function</span> (<span class=\"params\">head</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (head == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cur = head;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> headnode = head;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> pre = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (cur != <span class=\"literal\">null</span> &amp;&amp; cur.<span class=\"property\">next</span> != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cur.<span class=\"property\">val</span> == cur.<span class=\"property\">next</span>.<span class=\"property\">val</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> next = cur.<span class=\"property\">next</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (next != <span class=\"literal\">null</span> &amp;&amp; next.<span class=\"property\">val</span> == cur.<span class=\"property\">val</span>) &#123;</span><br><span class=\"line\">                next = next.<span class=\"property\">next</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (pre == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                headnode = next;</span><br><span class=\"line\">                cur = next;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                pre.<span class=\"property\">next</span> = next;</span><br><span class=\"line\">                cur = next;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            pre = cur;</span><br><span class=\"line\">            cur = cur.<span class=\"property\">next</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> headnode;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#86)  Partition List","url":"/leetcode/leetcode86/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the head of a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.</p>\n<p>You should preserve the original relative order of the nodes in each of the two partitions.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定鍊錶的頭部和值 x，將其分區，使得所有小於 x 的節點都在大於或等於 x 的節點之前。</p>\n<p>您應該保留兩個分區中每個分區中節點的原始相對順序。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode86.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1,4,3,2,5,2], x = 3</span><br><span class=\"line\">Output: [1,2,2,4,3,5]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [2,1], x = 2</span><br><span class=\"line\">Output: [1,2]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.當小於x的node放到minhead裡<br>2.當大於等於的node放到maxhead裡<br>3 最後再將minhead和maxhead連結</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> partition = <span class=\"keyword\">function</span> (<span class=\"params\">head, x</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cur = head;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> minhead = head;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> maxhead;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> minnode;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> maxnode;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (cur != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cur.<span class=\"property\">val</span> &lt; x) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (minnode == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                minnode = cur;</span><br><span class=\"line\">                headnode = cur;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                minnode.<span class=\"property\">next</span> = cur;</span><br><span class=\"line\">                minnode = minnode.<span class=\"property\">next</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (maxnode == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                maxnode = cur;</span><br><span class=\"line\">                maxhead = cur;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                maxnode.<span class=\"property\">next</span> = cur;</span><br><span class=\"line\">                maxnode = maxnode.<span class=\"property\">next</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cur = cur.<span class=\"property\">next</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (minnode != <span class=\"literal\">null</span> &amp;&amp; maxnode != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        minnode.<span class=\"property\">next</span> = maxhead;</span><br><span class=\"line\">        maxnode.<span class=\"property\">next</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> minhead;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#88)  Merge Sorted Array","url":"/leetcode/leetcode88/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.</p>\n<p>Merge nums1 and nums2 into a single array sorted in non-decreasing order.</p>\n<p>The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定兩個整數數組 nums1 和 nums2，按非遞減順序排序，以及兩個整數 m 和 n，分別表示 nums1 和 nums2 中的元素個數。</p>\n<p>將 nums1 和 nums2 合併為一個按非降序排序的數組。</p>\n<p>最終的排序數組不應由函數返回，而是存儲在數組 nums1 中。為了適應這一點，nums1 的長度為 m + n，其中前 m 個元素表示應該合併的元素，最後 n 個元素設置為 0 並且應該被忽略。 nums2 的長度為 n。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3</span><br><span class=\"line\">Output: [1,2,2,3,5,6]</span><br><span class=\"line\">Explanation: The arrays we are merging are [1,2,3] and [2,5,6].</span><br><span class=\"line\">The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums1 = [1], m = 1, nums2 = [], n = 0</span><br><span class=\"line\">Output: [1]</span><br><span class=\"line\">Explanation: The arrays we are merging are [1] and [].</span><br><span class=\"line\">The result of the merge is [1].</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums1 = [0], m = 0, nums2 = [1], n = 1</span><br><span class=\"line\">Output: [1]</span><br><span class=\"line\">Explanation: The arrays we are merging are [] and [1].</span><br><span class=\"line\">The result of the merge is [1].</span><br><span class=\"line\">Note that because m = 0, there are no elements in nums1. The 0 is only there to ensure the merge result can fit in nums1.</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.先將nums1和nums2合併<br>2.再將nums1排序</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"keyword\">function</span>(<span class=\"params\">nums1, m, nums2, n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=m;i&lt;m+n;i++)&#123;</span><br><span class=\"line\">        nums1[i]=nums2[i-m];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    nums1=nums1.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a-b;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#89)  Gray Code","url":"/leetcode/leetcode89/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>An n-bit gray code sequence is a sequence of 2n integers where:</p>\n<p>Every integer is in the inclusive range [0, 2n - 1],<br>The first integer is 0,<br>An integer appears no more than once in the sequence,<br>The binary representation of every pair of adjacent integers differs by exactly one bit, and<br>The binary representation of the first and last integers differs by exactly one bit.<br>Given an integer n, return any valid n-bit gray code sequence.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>n 位格雷碼序列是 2n 個整數的序列，其中：</p>\n<p>每個整數都在 [0, 2n - 1] 範圍內，<br>第一個整數是0，<br>一個整數在序列中出現的次數不超過一次，<br>每對相鄰整數的二進製表示正好相差一位，並且<br>第一個和最後一個整數的二進製表示正好相差一位。<br>給定一個整數 n，返回任何有效的 n 位格雷碼序列。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 2</span><br><span class=\"line\">Output: [0,1,3,2]</span><br><span class=\"line\">Explanation:</span><br><span class=\"line\">The binary representation of [0,1,3,2] is [00,01,11,10].</span><br><span class=\"line\">- 00 and 01 differ by one bit</span><br><span class=\"line\">- 01 and 11 differ by one bit</span><br><span class=\"line\">- 11 and 10 differ by one bit</span><br><span class=\"line\">- 10 and 00 differ by one bit</span><br><span class=\"line\">[0,2,3,1] is also a valid gray code sequence, whose binary representation is [00,10,11,01].</span><br><span class=\"line\">- 00 and 10 differ by one bit</span><br><span class=\"line\">- 10 and 11 differ by one bit</span><br><span class=\"line\">- 11 and 01 differ by one bit</span><br><span class=\"line\">- 01 and 00 differ by one bit</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: n = 1</span><br><span class=\"line\">Output: [0,1]</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用遞迴解</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> grayCode = <span class=\"keyword\">function</span> (<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr=<span class=\"title function_\">changebit</span>(n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;arr.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        arr[i]=<span class=\"built_in\">parseInt</span>(arr[i],<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changebit</span>(<span class=\"params\">n</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [<span class=\"number\">0</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> one = <span class=\"title function_\">changebit</span>(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> two = [...one].<span class=\"title function_\">reverse</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; one.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            one[i] = <span class=\"string\">&quot;0&quot;</span> + one[i];</span><br><span class=\"line\">            two[i] = <span class=\"string\">&quot;1&quot;</span> + two[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        one.<span class=\"title function_\">push</span>(...two);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> one;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#80) Word Search","url":"/leetcode/leetcode80/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an integer array nums sorted in non-decreasing order, remove some duplicates in-place such that each unique element appears at most twice. The relative order of the elements should be kept the same.</p>\n<p>Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the first part of the array nums. More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result. It does not matter what you leave beyond the first k elements.</p>\n<p>Return k after placing the final result in the first k slots of nums.</p>\n<p>Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.</p>\n<p>Custom Judge:</p>\n<p>The judge will test your solution with the following code:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">int[] nums = [...]; // Input array</span><br><span class=\"line\">int[] expectedNums = [...]; // The expected answer with correct length</span><br><span class=\"line\"></span><br><span class=\"line\">int k = removeDuplicates(nums); // Calls your implementation</span><br><span class=\"line\"></span><br><span class=\"line\">assert k == expectedNums.length;</span><br><span class=\"line\">for (int i = 0; i &lt; k; i++) &#123;</span><br><span class=\"line\">    assert nums[i] == expectedNums[i];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>If all assertions pass, then your solution will be accepted.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個按非遞減順序排序的整數數組 nums，就地刪除一些重複項，以使每個唯一元素最多出現兩次。元素的相對順序應保持不變。</p>\n<p>由於在某些語言中無法更改數組的長度，因此您必須將結果放在數組 nums 的第一部分。更正式地說，如果刪除重複項後有 k 個元素，則 nums 的前 k 個元素應該保存最終結果。在前 k 個元素之外留下什麼並不重要。</p>\n<p>將最終結果放入 nums 的前 k 個槽後返回 k。</p>\n<p>不要為另一個數組分配額外的空間。您必須通過使用 O(1) 額外內存就地修改輸入數組來做到這一點。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [1,1,1,2,2,3]</span><br><span class=\"line\">Output: 5, nums = [1,1,2,2,3,_]</span><br><span class=\"line\">Explanation: Your function should return k = 5, with the first five elements of nums being 1, 1, 2, 2 and 3 respectively.</span><br><span class=\"line\">It does not matter what you leave beyond the returned k (hence they are underscores).</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [0,0,1,1,1,1,2,3,3]</span><br><span class=\"line\">Output: 7, nums = [0,0,1,1,2,3,3,_,_]</span><br><span class=\"line\">Explanation: Your function should return k = 7, with the first seven elements of nums being 0, 0, 1, 1, 2, 3 and 3 respectively.</span><br><span class=\"line\">It does not matter what you leave beyond the returned k (hence they are underscores).</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.檢查重複次數是否超過2次<br>2.超過時將它刪除</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> removeDuplicates = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> num = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> key = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> start = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (start &lt; nums.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[start] == key) &#123;</span><br><span class=\"line\">            num++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (num &gt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                nums.<span class=\"title function_\">splice</span>(start, <span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                start++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            key = nums[start];</span><br><span class=\"line\">            num = <span class=\"number\">1</span>;</span><br><span class=\"line\">            start++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(Leetcode#9) Palindrome Number","url":"/leetcode/leetcode9/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an integer x, return true if x is palindrome integer.</p>\n<p>An integer is a palindrome when it reads the same backward as forward.</p>\n<p>For example, 121 is a palindrome while 123 is not.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個整數 x，如果 x 是回文整數，則返回 true。</p>\n<p>當一個整數向後讀和向前讀一樣時，它就是一個回文數。</p>\n<p>例如，121 是回文，而 123 不是。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: x = 121</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: 121 reads as 121 from left to right and from right to left.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: x = -121</span><br><span class=\"line\">Output: false</span><br><span class=\"line\">Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: x = 10</span><br><span class=\"line\">Output: false</span><br><span class=\"line\">Explanation: Reads 01 from right to left. Therefore it is not a palindrome.</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.小於0直接回傳false<br>2.建立一個右和左變數，兩個變數依序往前和往後比較<br>3.若有不相同時直接返回false,都相同時返回true<br>4.數字為偶數時，只需比到相差為1<br>5.奇數時，需比較相同位置</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>Code 1 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> isPalindrome = <span class=\"keyword\">function</span>(<span class=\"params\">x</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"number\">0</span>&gt;x)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> right;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> left=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> judge=<span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> str=x.<span class=\"title function_\">toString</span>();</span><br><span class=\"line\">    right=str.<span class=\"property\">length</span>-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(str[left]!=str[right])&#123;</span><br><span class=\"line\">            judge=<span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(left==right&amp;&amp;str.<span class=\"property\">length</span>%<span class=\"number\">2</span>==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(left+<span class=\"number\">1</span>==right&amp;&amp;str.<span class=\"property\">length</span>%<span class=\"number\">2</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        left++;</span><br><span class=\"line\">        right--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> judge;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Code 2 :</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> isPalindrome = <span class=\"keyword\">function</span>(<span class=\"params\">x</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x.<span class=\"title function_\">toString</span>()===x.<span class=\"title function_\">toString</span>().<span class=\"title function_\">split</span>(<span class=\"string\">&quot;&quot;</span>).<span class=\"title function_\">reverse</span>().<span class=\"title function_\">join</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#90)  Subsets II","url":"/leetcode/leetcode90/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an integer array nums that may contain duplicates, return all possible subsets (the power set).</p>\n<p>The solution set must not contain duplicate subsets. Return the solution in any order.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個可能包含重複項的整數數組 nums，返回所有可能的子集（冪集）。</p>\n<p>解決方案集不得包含重複的子集。以任何順序返回解決方案。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [1,2,2]</span><br><span class=\"line\">Output: [[],[1],[1,2],[1,2,2],[2],[2,2]]</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [0]</span><br><span class=\"line\">Output: [[],[0]]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用遞迴解</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> subsetsWithDup = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> track = [];  </span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">backtrack</span> = (<span class=\"params\">nums, start</span>)=&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> sorted = nums.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a, b</span>)=&gt;</span>a-b)    </span><br><span class=\"line\">        res.<span class=\"title function_\">push</span>(track.<span class=\"title function_\">slice</span>());</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = start; i &lt; nums.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i] === nums[i-<span class=\"number\">1</span>] &amp;&amp; i &gt; start) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            track.<span class=\"title function_\">push</span>(nums[i]);</span><br><span class=\"line\">            <span class=\"title function_\">backtrack</span>(nums, i+<span class=\"number\">1</span>);</span><br><span class=\"line\">            track.<span class=\"title function_\">pop</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">backtrack</span>(nums, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#91)  Decode Ways","url":"/leetcode/leetcode91/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>A message containing letters from A-Z can be encoded into numbers using the following mapping:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;A&#x27; -&gt; &quot;1&quot;</span><br><span class=\"line\">&#x27;B&#x27; -&gt; &quot;2&quot;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#x27;Z&#x27; -&gt; &quot;26&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>To decode an encoded message, all the digits must be grouped then mapped back into letters using the reverse of the mapping above (there may be multiple ways). For example, “11106” can be mapped into:</p>\n<p>“AAJF” with the grouping (1 1 10 6)<br>“KJF” with the grouping (11 10 6)<br>Note that the grouping (1 11 06) is invalid because “06” cannot be mapped into ‘F’ since “6” is different from “06”.</p>\n<p>Given a string s containing only digits, return the number of ways to decode it.</p>\n<p>The test cases are generated so that the answer fits in a 32-bit integer.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>可以使用以下映射將包含 A-Z 字母的消息編碼為數字：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27;A&#x27; -&gt; “1”</span><br><span class=\"line\">“B”-&gt;“2”</span><br><span class=\"line\">...</span><br><span class=\"line\">“Z”-&gt;“26”</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>要解碼編碼消息，必須將所有數字分組，然後使用上述映射的反向映射回字母（可能有多種方式）。例如，“11106”可以映射為：</p>\n<p>“AAJF”與分組 (1 1 10 6)<br>“KJF”與分組（11 10 6）<br>請注意，分組 (1 11 06) 無效，因為“06”不能映射到“F”，因為“6”與“06”不同。</p>\n<p>給定一個只包含數字的字符串 s，返回解碼它的方法數。</p>\n<p>生成測試用例以使答案適合 32 位整數。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;12&quot;</span><br><span class=\"line\">Output: 2</span><br><span class=\"line\">Explanation: &quot;12&quot; could be decoded as &quot;AB&quot; (1 2) or &quot;L&quot; (12).</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;226&quot;</span><br><span class=\"line\">Output: 3</span><br><span class=\"line\">Explanation: &quot;226&quot; could be decoded as &quot;BZ&quot; (2 26), &quot;VF&quot; (22 6), or &quot;BBF&quot; (2 2 6).</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;06&quot;</span><br><span class=\"line\">Output: 0</span><br><span class=\"line\">Explanation: &quot;06&quot; cannot be mapped to &quot;F&quot; because of the leading zero (&quot;6&quot; is different from &quot;06&quot;).</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用Dp演算法求解</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numDecodings = <span class=\"keyword\">function</span> (<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (s.<span class=\"property\">length</span> === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">   <span class=\"keyword\">let</span> N = s.<span class=\"property\">length</span>;</span><br><span class=\"line\">   <span class=\"keyword\">let</span> dp = <span class=\"title class_\">Array</span>(N + <span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">   dp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">   dp[<span class=\"number\">1</span>] = s[<span class=\"number\">0</span>] === <span class=\"string\">&#x27;0&#x27;</span> ? <span class=\"number\">0</span> : <span class=\"number\">1</span>;</span><br><span class=\"line\">   <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (s[i - <span class=\"number\">1</span>] !== <span class=\"string\">&#x27;0&#x27;</span>) &#123;</span><br><span class=\"line\">         dp[i] += dp[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (s[i - <span class=\"number\">2</span>] === <span class=\"string\">&#x27;1&#x27;</span> || s[i - <span class=\"number\">2</span>] === <span class=\"string\">&#x27;2&#x27;</span> &amp;&amp; s[i - <span class=\"number\">1</span>] &lt;= <span class=\"string\">&#x27;6&#x27;</span>) &#123;</span><br><span class=\"line\">         dp[i] += dp[i - <span class=\"number\">2</span>];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> dp[N];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#92)  Reverse Linked List II","url":"/leetcode/leetcode92/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the head of a singly linked list and two integers left and right where left &lt;&#x3D; right, reverse the nodes of the list from position left to position right, and return the reversed list.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定單鍊錶的頭部和左右兩個整數，其中left &lt;&#x3D; right，將列表的節點從左到右反轉，並返回反轉後的列表。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode92.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1,2,3,4,5], left = 2, right = 4</span><br><span class=\"line\">Output: [1,4,3,2,5]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [5], left = 1, right = 1</span><br><span class=\"line\">Output: [5]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.反轉N個元素</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reverseBetween = <span class=\"keyword\">function</span>(<span class=\"params\">head, left, right</span>) &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> headnode = <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(<span class=\"number\">0</span>, head); </span><br><span class=\"line\">    <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> curnode = headnode;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i &lt; right)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &lt; left-<span class=\"number\">1</span>)&#123;curnode = curnode.<span class=\"property\">next</span>;&#125; </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i == left - <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> start = curnode; <span class=\"comment\">// start reverse 2</span></span><br><span class=\"line\">            curnode = curnode.<span class=\"property\">next</span>; </span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i &gt;= left)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> last = curnode.<span class=\"property\">next</span>; </span><br><span class=\"line\">            curnode.<span class=\"property\">next</span> = curnode.<span class=\"property\">next</span>.<span class=\"property\">next</span>; </span><br><span class=\"line\">            last.<span class=\"property\">next</span> = start.<span class=\"property\">next</span>; </span><br><span class=\"line\">            start.<span class=\"property\">next</span> = last; <span class=\"comment\">// do not go to the next as the next has been move to the front</span></span><br><span class=\"line\">        &#125;        </span><br><span class=\"line\">        i++; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> headnode.<span class=\"property\">next</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#93)  Restore IP Addresses","url":"/leetcode/leetcode93/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>A valid IP address consists of exactly four integers separated by single dots. Each integer is between 0 and 255 (inclusive) and cannot have leading zeros.</p>\n<p>For example, “0.1.2.201” and “192.168.1.1” are valid IP addresses, but “0.011.255.245”, “192.168.1.312” and “<a href=\"mailto:&#49;&#57;&#50;&#46;&#x31;&#x36;&#56;&#64;&#49;&#x2e;&#49;\">&#49;&#57;&#50;&#46;&#x31;&#x36;&#56;&#64;&#49;&#x2e;&#49;</a>“ are invalid IP addresses.<br>Given a string s containing only digits, return all possible valid IP addresses that can be formed by inserting dots into s. You are not allowed to reorder or remove any digits in s. You may return the valid IP addresses in any order.</p>\n<span id=\"more\"></span>\n\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>一個有效的 IP 地址正好由四個由單點分隔的整數組成。每個整數介於 0 和 255（含）之間，並且不能有前導零。</p>\n<p>例如，“0.1.2.201”和“192.168.1.1”是有效的IP地址，但“0.011.255.245”、“192.168.1.312”和“<a href=\"mailto:&#49;&#57;&#x32;&#x2e;&#49;&#54;&#x38;&#64;&#49;&#46;&#x31;\">&#49;&#57;&#x32;&#x2e;&#49;&#54;&#x38;&#64;&#49;&#46;&#x31;</a>”是無效的IP地址。<br>給定一個只包含數字的字符串 s，返回所有可能的有效 IP 地址，這些地址可以通過在 s 中插入點來形成。您不得重新排序或刪除 s 中的任何數字。您可以按任何順序返回有效的 IP 地址。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;25525511135&quot;</span><br><span class=\"line\">Output: [&quot;255.255.11.135&quot;,&quot;255.255.111.35&quot;]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;0000&quot;</span><br><span class=\"line\">Output: [&quot;0.0.0.0&quot;]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;101023&quot;</span><br><span class=\"line\">Output: [&quot;1.0.10.23&quot;,&quot;1.0.102.3&quot;,&quot;10.1.0.23&quot;,&quot;10.10.2.3&quot;,&quot;101.0.2.3&quot;]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.先把數組長度的所有排列組合組出來<br>2.寫一個判定是否符合0-255及0不為前導的函數<br>3.將結果返回</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> restoreIpAddresses = <span class=\"keyword\">function</span> (<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> len = s.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">    <span class=\"title function_\">numarr</span>(len, <span class=\"string\">&quot;&quot;</span>, <span class=\"number\">0</span>, arr);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> finalarr = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> judgeval = <span class=\"keyword\">function</span> (<span class=\"params\">judgearr</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> start = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; judgearr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> val = s.<span class=\"title function_\">slice</span>(start, start + <span class=\"built_in\">parseInt</span>(judgearr[i]));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (val &lt; <span class=\"number\">0</span> || val &gt; <span class=\"number\">255</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (val[<span class=\"number\">0</span>] == <span class=\"number\">0</span> &amp;&amp; val.<span class=\"property\">length</span> &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            start += <span class=\"built_in\">parseInt</span>(judgearr[i]);</span><br><span class=\"line\">            arr.<span class=\"title function_\">push</span>(val);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr.<span class=\"title function_\">join</span>(<span class=\"string\">&quot;.&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> str = <span class=\"title function_\">judgeval</span>(arr[i]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (str != <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">            finalarr.<span class=\"title function_\">push</span>(str);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> finalarr;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">numarr</span>(<span class=\"params\">len, str, number, arr</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (number &gt; <span class=\"number\">4</span> || len &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> one = str + <span class=\"string\">&quot;1&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> two = str + <span class=\"string\">&quot;2&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> three = str + <span class=\"string\">&quot;3&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (len - <span class=\"number\">1</span> &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">numarr</span>(len - <span class=\"number\">1</span>, one, number + <span class=\"number\">1</span>, arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (len - <span class=\"number\">2</span> &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">numarr</span>(len - <span class=\"number\">2</span>, two, number + <span class=\"number\">1</span>, arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (len - <span class=\"number\">3</span> &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">numarr</span>(len - <span class=\"number\">3</span>, three, number + <span class=\"number\">1</span>, arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (number == <span class=\"number\">4</span> &amp;&amp; len == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        arr.<span class=\"title function_\">push</span>(str.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#94) Binary Tree Inorder Traversal","url":"/leetcode/leetcode94/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the root of a binary tree, return the inorder traversal of its nodes’ values.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定二叉樹的根，返回其節點值的中序遍歷。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode94.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [1,null,2,3]</span><br><span class=\"line\">Output: [1,3,2]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = []</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [1]</span><br><span class=\"line\">Output: [1]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用遞迴解</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> inorderTraversal = <span class=\"keyword\">function</span> (<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">    <span class=\"title function_\">traversal</span>(root, arr);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">traversal</span>(<span class=\"params\">node, arr</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (node == <span class=\"literal\">null</span> || node == <span class=\"literal\">undefined</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"title function_\">traversal</span>(node.<span class=\"property\">left</span>);</span><br><span class=\"line\">    arr.<span class=\"title function_\">push</span>(node.<span class=\"property\">val</span>);</span><br><span class=\"line\">    <span class=\"title function_\">traversal</span>(node.<span class=\"property\">right</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#98)  Validate Binary Search Tree","url":"/leetcode/leetcode98/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the root of a binary tree, determine if it is a valid binary search tree (BST).</p>\n<p>A valid BST is defined as follows:</p>\n<p>The left subtree of a node contains only nodes with keys less than the node’s key.<br>The right subtree of a node contains only nodes with keys greater than the node’s key.<br>Both the left and right subtrees must also be binary search trees.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定二叉樹的根，確定它是否是有效的二叉搜索樹 (BST)。</p>\n<p>有效的 BST 定義如下：</p>\n<p>節點的左子樹僅包含鍵小於節點鍵的節點。<br>節點的右子樹只包含鍵大於節點鍵的節點。<br>左右子樹也必須是二叉搜索樹。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode98_1.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [2,1,3]</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:<br><img src=\"/../image/leetcode/leetcode98_2.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [5,1,4,null,null,3,6]</span><br><span class=\"line\">Output: false</span><br><span class=\"line\">Explanation: The root node&#x27;s value is 5 but its right child&#x27;s value is 4.</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用動態規劃<br>2.已知條件1.左邊比中間小及右邊比中間大</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> isValidBST = <span class=\"keyword\">function</span>(<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"title function_\">isValidBSTHelper</span>(root, -<span class=\"title class_\">Infinity</span>, <span class=\"title class_\">Infinity</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">isValidBSTHelper</span> = (<span class=\"params\">root, low, high</span>) =&gt; &#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!root) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> root.<span class=\"property\">val</span> &gt; low &amp;&amp; root.<span class=\"property\">val</span> &lt; high &amp;&amp;</span><br><span class=\"line\">       <span class=\"title function_\">isValidBSTHelper</span>(root.<span class=\"property\">left</span>, low, root.<span class=\"property\">val</span>) &amp;&amp;</span><br><span class=\"line\">       <span class=\"title function_\">isValidBSTHelper</span>(root.<span class=\"property\">right</span>, root.<span class=\"property\">val</span>, high);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#97)  Interleaving String","url":"/leetcode/leetcode97/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given strings s1, s2, and s3, find whether s3 is formed by an interleaving of s1 and s2.</p>\n<p>An interleaving of two strings s and t is a configuration where s and t are divided into n and m non-empty substrings respectively, such that:</p>\n<p>s &#x3D; s1 + s2 + … + sn<br>t &#x3D; t1 + t2 + … + tm<br>|n - m| &lt;&#x3D; 1<br>The interleaving is s1 + t1 + s2 + t2 + s3 + t3 + … or t1 + s1 + t2 + s2 + t3 + s3 + …<br>Note: a + b is the concatenation of strings a and b.</p>\n<span id=\"more\"></span>\n\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定字符串 s1、s2 和 s3，找出 s3 是否由 s1 和 s2 交織而成。</p>\n<p>兩個字符串 s 和 t 的交錯是一種配置，其中 s 和 t 分別分為 n 和 m 個非空子字符串，使得：</p>\n<p>s &#x3D; s1 + s2 + … + sn<br>t &#x3D; t1 + t2 + … + tm<br>|n - m| &lt;&#x3D; 1<br>交織是 s1 + t1 + s2 + t2 + s3 + t3 + … 或 t1 + s1 + t2 + s2 + t3 + s3 + …<br>注意：a + b 是字符串 a 和 b 的連接。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p><img src=\"/../image/leetcode/leetcode97.jpg\" alt=\"example\" title=\"example\"><br>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s1 = &quot;aabcc&quot;, s2 = &quot;dbbca&quot;, s3 = &quot;aadbbcbcac&quot;</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: One way to obtain s3 is:</span><br><span class=\"line\">Split s1 into s1 = &quot;aa&quot; + &quot;bc&quot; + &quot;c&quot;, and s2 into s2 = &quot;dbbc&quot; + &quot;a&quot;.</span><br><span class=\"line\">Interleaving the two splits, we get &quot;aa&quot; + &quot;dbbc&quot; + &quot;bc&quot; + &quot;a&quot; + &quot;c&quot; = &quot;aadbbcbcac&quot;.</span><br><span class=\"line\">Since s3 can be obtained by interleaving s1 and s2, we return true.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s1 = &quot;aabcc&quot;, s2 = &quot;dbbca&quot;, s3 = &quot;aadbbbaccc&quot;</span><br><span class=\"line\">Output: false</span><br><span class=\"line\">Explanation: Notice how it is impossible to interleave s2 with any other string to obtain s3.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s1 = &quot;&quot;, s2 = &quot;&quot;, s3 = &quot;&quot;</span><br><span class=\"line\">Output: true</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.利用DP來解<br>2.obj紀錄以跑過的狀態減少時間</p>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> isInterleave = <span class=\"keyword\">function</span> (<span class=\"params\">s1, s2, s3</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (s1.<span class=\"property\">length</span> + s2.<span class=\"property\">length</span> != s3.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">let</span> obj = &#123;&#125;;</span><br><span class=\"line\">   <span class=\"keyword\">let</span> dps = <span class=\"keyword\">function</span> (<span class=\"params\">pos1, pos2</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (obj[[pos1, pos2]] != <span class=\"literal\">undefined</span>) <span class=\"keyword\">return</span> obj[[pos1, pos2]];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (pos1 == s1.<span class=\"property\">length</span> &amp;&amp; pos2 == s2.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (s1[pos1] === s3[pos1+pos2] &amp;&amp; pos1 &lt; s1.<span class=\"property\">length</span> &amp;&amp; <span class=\"title function_\">dps</span>(pos1+<span class=\"number\">1</span>, pos2)) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (s2[pos2] === s3[pos1+pos2] &amp;&amp; pos2 &lt; s2.<span class=\"property\">length</span> &amp;&amp; <span class=\"title function_\">dps</span>(pos1, pos2+<span class=\"number\">1</span>)) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      obj[[pos1, pos2]] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"title function_\">dps</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Vue_Pinia(簡易使用)","url":"/vue/vue-pinia/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>在開發中小型專案時由於vuex會造成程式碼太過攏長不夠直覺，因此我們能使用pinia來取代vuex當作data store</p>\n<span id=\"more\"></span>\n<h1 id=\"安裝環境\"><a href=\"#安裝環境\" class=\"headerlink\" title=\"安裝環境\"></a>安裝環境</h1><p>1.Vue3<br>2.Pinia<br>3.Vue devtool</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.vue create my-project</span><br><span class=\"line\">2.cd my-project</span><br><span class=\"line\">3.npm install pinia</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"架構圖\"><a href=\"#架構圖\" class=\"headerlink\" title=\"架構圖\"></a>架構圖</h1><h2 style=\"color:red\">Vuex 架構圖</h2>\n\n<p><img src=\"/../image/vue/vuexstruct.webp\" alt=\"result\" title=\"result\"></p>\n<h2 style=\"color:red\">pinia 架構圖</h2>\n\n<p><img src=\"/../image/vue/piniastruct.webp\" alt=\"result\" title=\"result\"></p>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><h2 style=\"color:red\">修改main.js</h2>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./router&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./store&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createPinia &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> pinia = <span class=\"title function_\">createPinia</span>()</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(pinia)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(store).<span class=\"title function_\">use</span>(router).<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 style=\"color:red\">在store裡建立一個pinia.js</h2>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; defineStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useStore=<span class=\"title function_\">defineStore</span>(<span class=\"string\">&#x27;main&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"title function_\">state</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">        <span class=\"attr\">message</span>:<span class=\"string\">&quot;Hello Pinia&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">getters</span>: &#123;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 style=\"color:red\">修改componets 元件</h2>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;hello&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>  &#123;&#123;plusOne&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;plusOne&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">   </span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">import</span> &#123; useStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../store/pinia&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">import</span> &#123;computed&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;HelloWorld&#x27;</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"title function_\">setup</span>(<span class=\"params\"></span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">const</span> common = <span class=\"title function_\">useStore</span>();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">const</span> plusOne = <span class=\"title function_\">computed</span>(&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">get</span>: <span class=\"function\">() =&gt;</span> common.<span class=\"property\">message</span>,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"attr\">set</span>: <span class=\"function\">(<span class=\"params\">val</span>) =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">       common.<span class=\"property\">message</span>=val;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"keyword\">return</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      plusOne</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"attr\">props</span>: &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">    <span class=\"attr\">msg</span>: <span class=\"title class_\">String</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"result\"><a href=\"#result\" class=\"headerlink\" title=\"result\"></a>result</h1><p><img src=\"/../image/vue/piniaview.PNG\" alt=\"result\" title=\"result\"></p>\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><p>1.pinia去掉mutation，支持直接導入使用，配合vue3 setup，讓資料管理更方便。</p>\n","categories":["Vue"],"tags":["Vue","Pinia"]},{"title":"Javascript(leetcode#137) Single Number II","url":"/leetcode/leetcode137/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an integer array nums where every element appears three times except for one, which appears exactly once. Find the single element and return it.</p>\n<p>You must implement a solution with a linear runtime complexity and use only constant extra space.</p>\n<span id=\"more\"></span>\n\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個整數數組 nums，其中每個元素都出現了 3 次，只有一個元素只出現了一次。找到單個元素並將其返回。</p>\n<p>您必須實現具有線性運行時復雜性的解決方案，並且只使用恆定的額外空間。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [2,2,3,2]</span><br><span class=\"line\">Output: 3</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [0,1,0,1,0,1,99]</span><br><span class=\"line\">Output: 99</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.定義一個obj將第一次出現的數字填入arr<br>2.若出現重複的數將它從arr中移除</p>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> singleNumber = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> obj = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!obj[nums[i]]) &#123;</span><br><span class=\"line\">            obj[nums[i]] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            arr.<span class=\"title function_\">push</span>(nums[i]);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            obj[nums[i]]++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arr.<span class=\"title function_\">indexOf</span>(nums[i]) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                arr.<span class=\"title function_\">splice</span>(arr.<span class=\"title function_\">indexOf</span>(nums[i]), <span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr[<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#138) Copy List with Random Pointer","url":"/leetcode/leetcode138/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>A linked list of length n is given such that each node contains an additional random pointer, which could point to any node in the list, or null.</p>\n<p>Construct a deep copy of the list. The deep copy should consist of exactly n brand new nodes, where each new node has its value set to the value of its corresponding original node. Both the next and random pointer of the new nodes should point to new nodes in the copied list such that the pointers in the original list and copied list represent the same list state. None of the pointers in the new list should point to nodes in the original list.</p>\n<p>For example, if there are two nodes X and Y in the original list, where X.random –&gt; Y, then for the corresponding two nodes x and y in the copied list, x.random –&gt; y.</p>\n<p>Return the head of the copied linked list.</p>\n<p>The linked list is represented in the input&#x2F;output as a list of n nodes. Each node is represented as a pair of [val, random_index] where:</p>\n<p>val: an integer representing Node.val<br>random_index: the index of the node (range from 0 to n-1) that the random pointer points to, or null if it does not point to any node.<br>Your code will only be given the head of the original linked list.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個長度為 n 的鍊錶，使得每個節點都包含一個額外的隨機指針，該指針可以指向列表中的任何節點，或者為空。</p>\n<p>構造列表的深層副本。深拷貝應該由恰好 n 個全新節點組成，其中每個新節點的值都設置為其對應的原始節點的值。新節點的 next 和 random 指針都應該指向複製列表中的新節點，以便原始列表和復制列表中的指針表示相同的列表狀態。新列表中的任何指針都不應指向原始列表中的節點。</p>\n<p>例如，如果原始列表中有兩個節點 X 和 Y，其中 X.random –&gt; Y，那麼對於復制的列表中對應的兩個節點 x 和 y，x.random –&gt; y。</p>\n<p>返回複製的鍊錶的頭部。</p>\n<p>鍊錶在輸入&#x2F;輸出中表示為 n 個節點的列表。每個節點都表示為一對 [val, random_index] 其中：</p>\n<p>val：表示Node.val的整數<br>random_index：隨機指針指向的節點的索引（範圍從0到n-1），如果它不指向任何節點，則為null。<br>您的代碼只會被賦予原始鍊錶的頭部。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [[7,null],[13,0],[11,4],[10,2],[1,0]]</span><br><span class=\"line\">Output: [[7,null],[13,0],[11,4],[10,2],[1,0]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [[1,1],[2,1]]</span><br><span class=\"line\">Output: [[1,1],[2,1]]</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [[3,null],[3,0],[3,null]]</span><br><span class=\"line\">Output: [[3,null],[3,0],[3,null]]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.用一個map將結點存入<br>2.結果重複時，回傳有的節點</p>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> copyRandomList = <span class=\"keyword\">function</span> (<span class=\"params\">head, clonemap = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>()</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (head == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (clonemap.<span class=\"title function_\">has</span>(head)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> clonemap.<span class=\"title function_\">get</span>(head);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> node = <span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>(head.<span class=\"property\">val</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">    clonemap.<span class=\"title function_\">set</span>(head, node);</span><br><span class=\"line\">    node.<span class=\"property\">next</span> = <span class=\"title function_\">copyRandomList</span>(head.<span class=\"property\">next</span>, clonemap);</span><br><span class=\"line\">    node.<span class=\"property\">random</span> = <span class=\"title function_\">copyRandomList</span>(head.<span class=\"property\">random</span>, clonemap);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> node;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#139) Word Break","url":"/leetcode/leetcode139/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>Given a string s and a dictionary of strings wordDict, return true if s can be segmented into a space-separated sequence of one or more dictionary words.</p>\n<p>Note that the same word in the dictionary may be reused multiple times in the segmentation.</p>\n<span id=\"more\"></span>\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個字符串 s 和一個字符串字典 wordDict，如果 s 可以分割成一個或多個字典單詞的空格分隔序列，則返回 true。</p>\n<p>請注意，字典中的同一個詞可能會在分詞中重複使用多次。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Exampele 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;leetcode&quot;, wordDict = [&quot;leet&quot;,&quot;code&quot;]</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: Return true because &quot;leetcode&quot; can be segmented as &quot;leet code&quot;.</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;applepenapple&quot;, wordDict = [&quot;apple&quot;,&quot;pen&quot;]</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: Return true because &quot;applepenapple&quot; can be segmented as &quot;apple pen apple&quot;.</span><br><span class=\"line\">Note that you are allowed to reuse a dictionary word.</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;catsandog&quot;, wordDict = [&quot;cats&quot;,&quot;dog&quot;,&quot;sand&quot;,&quot;and&quot;,&quot;cat&quot;]</span><br><span class=\"line\">Output: false</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><ol>\n<li>str為空和set有值時回傳true</li>\n<li>map有值返回map裡面的值</li>\n</ol>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> wordBreak = <span class=\"keyword\">function</span>(<span class=\"params\">s, wordDict</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> set = <span class=\"keyword\">new</span> <span class=\"title class_\">Set</span>(wordDict);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dp  = <span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">solve</span> = (<span class=\"params\">str = s</span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(str == <span class=\"string\">&#x27;&#x27;</span> || set.<span class=\"title function_\">has</span>(str)) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(dp.<span class=\"title function_\">has</span>(str)) <span class=\"keyword\">return</span> dp.<span class=\"title function_\">get</span>(str);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">let</span> temp = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; str.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            temp += str[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(set.<span class=\"title function_\">has</span>(temp)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(<span class=\"title function_\">solve</span>(str.<span class=\"title function_\">slice</span>(i + <span class=\"number\">1</span>))) &#123;</span><br><span class=\"line\">                    dp.<span class=\"title function_\">set</span>(str, <span class=\"literal\">true</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        dp.<span class=\"title function_\">set</span>(str, <span class=\"literal\">false</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_\">solve</span>();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#141)  Linked List Cycle","url":"/leetcode/leetcode141/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given head, the head of a linked list, determine if the linked list has a cycle in it.</p>\n<p>There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail’s next pointer is connected to. Note that pos is not passed as a parameter.</p>\n<p>Return true if there is a cycle in the linked list. Otherwise, return false.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定head，鍊錶的頭，判斷鍊表中是否有環。</p>\n<p>如果鍊錶中有某個節點可以通過不斷跟隨next指針再次到達，則鍊錶中存在一個循環。 在內部，pos 用於表示 tail 的 next 指針所連接的節點的索引。 請注意， pos 不作為參數傳遞。</p>\n<p>如果鍊錶中存在循環，則返回 true。 否則，返回假。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode141_1.png\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [3,2,0,-4], pos = 1</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:<br><img src=\"/../image/leetcode/leetcode141_2.png\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1,2], pos = 0</span><br><span class=\"line\">Output: true</span><br><span class=\"line\">Explanation: There is a cycle in the linked list, where the tail connects to the 0th node.</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 3:<br><img src=\"/../image/leetcode/leetcode141_3.png\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1], pos = -1</span><br><span class=\"line\">Output: false</span><br><span class=\"line\">Explanation: There is no cycle in the linked list.</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><ol>\n<li>利用龜兔賽跑演算法求解</li>\n<li>設slow和fast兩個變數 slow一次走一步 fast一次走兩步 若兩個相遇時表示為circle link list</li>\n<li>若走到為空時表示非circle link list</li>\n</ol>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> hasCycle = <span class=\"keyword\">function</span>(<span class=\"params\">head</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span>(head==<span class=\"literal\">null</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">let</span> fast=head;</span><br><span class=\"line\">   <span class=\"keyword\">let</span> slow=head;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(fast!==<span class=\"literal\">null</span>&amp;&amp;fast.<span class=\"property\">next</span>!==<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        fast=fast.<span class=\"property\">next</span>.<span class=\"property\">next</span>;</span><br><span class=\"line\">        slow=slow.<span class=\"property\">next</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(fast==slow)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#142)  Linked List Cycle II","url":"/leetcode/leetcode142/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the head of a linked list, return the node where the cycle begins. If there is no cycle, return null.</p>\n<p>There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail’s next pointer is connected to (0-indexed). It is -1 if there is no cycle. Note that pos is not passed as a parameter.</p>\n<p>Do not modify the linked list.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定鍊錶的頭部，返回循環開始的節點。 如果沒有循環，則返回 null。</p>\n<p>如果鍊錶中有某個節點可以通過不斷跟隨next指針再次到達，則鍊錶中存在一個循環。 在內部，pos 用於表示tail 的next 指針連接到的節點的索引（0-indexed）。 如果沒有循環，則為 -1。 請注意， pos 不作為參數傳遞。</p>\n<p>不要修改鍊錶。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode141_1.png\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [3,2,0,-4], pos = 1</span><br><span class=\"line\">Output: tail connects to node index 1</span><br><span class=\"line\">Explanation: There is a cycle in the linked list, where tail connects to the second node.</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:<br><img src=\"/../image/leetcode/leetcode141_2.png\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1,2], pos = 0</span><br><span class=\"line\">Output: tail connects to node index 0</span><br><span class=\"line\">Explanation: There is a cycle in the linked list, where tail connects to the first node.</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 3:<br><img src=\"/../image/leetcode/leetcode141_3.png\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1], pos = -1</span><br><span class=\"line\">Output: no cycle</span><br><span class=\"line\">Explanation: There is no cycle in the linked list.</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><ol>\n<li>利用龜兔賽跑演算法求解</li>\n<li>若走到為空時表示非circle link list</li>\n<li>設slow和fast兩個變數 slow一次走一步 fast一次走兩步 若兩個相遇時，利用龜兔賽跑演算法中的定義，將slow設為head，相遇的點和slow等速前進，再次相遇時就是cirlce link list的起點</li>\n</ol>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> detectCycle = <span class=\"keyword\">function</span>(<span class=\"params\">head</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> slow = head</span><br><span class=\"line\">    <span class=\"keyword\">let</span> fast = head </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(fast &amp;&amp; fast.<span class=\"property\">next</span> &amp;&amp; fast.<span class=\"property\">next</span>.<span class=\"property\">next</span>) &#123;</span><br><span class=\"line\">        slow = slow.<span class=\"property\">next</span>;</span><br><span class=\"line\">        fast = fast.<span class=\"property\">next</span>.<span class=\"property\">next</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(slow === fast)&#123;</span><br><span class=\"line\">            slow = head; </span><br><span class=\"line\">            <span class=\"keyword\">while</span>(slow !== fast)&#123;</span><br><span class=\"line\">                slow = slow.<span class=\"property\">next</span>;</span><br><span class=\"line\">                fast = fast.<span class=\"property\">next</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> slow;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#143)  Reorder List","url":"/leetcode/leetcode143/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>You are given the head of a singly linked-list. The list can be represented as:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">L0 → L1 → … → Ln - 1 → Ln</span><br></pre></td></tr></table></figure>\n\n<p>Reorder the list to be on the following form:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">L0 → Ln → L1 → Ln - 1 → L2 → Ln - 2 → …</span><br></pre></td></tr></table></figure>\n<p>You may not modify the values in the list’s nodes. Only nodes themselves may be changed.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給你一個單鍊錶的頭部。 該列表可以表示為：</p>\n<p>將列表重新排序為以下形式：</p>\n<p>您不能修改列表節點中的值。 只有節點本身可以改變。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode143_1.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1,2,3,4]</span><br><span class=\"line\">Output: [1,4,2,3]</span><br></pre></td></tr></table></figure>\n\n<p>Example 2:<br><img src=\"/../image/leetcode/leetcode143_2.jpg\" alt=\"example\" title=\"example\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [1,2,3,4,5]</span><br><span class=\"line\">Output: [1,5,2,4,3]</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><ol>\n<li>找到link list的中間將它分為兩半分別存入first及second</li>\n<li>將second反轉</li>\n<li>再將first及second合併</li>\n</ol>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reorderList = <span class=\"keyword\">function</span> (<span class=\"params\">head</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> slow = head;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> fast = head;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (fast &amp;&amp; fast.<span class=\"property\">next</span>) &#123;</span><br><span class=\"line\">        fast = fast.<span class=\"property\">next</span>.<span class=\"property\">next</span>;</span><br><span class=\"line\">        slow = slow.<span class=\"property\">next</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> secondHead = slow.<span class=\"property\">next</span>;</span><br><span class=\"line\">    slow.<span class=\"property\">next</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> pre = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (secondHead) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> temp = secondHead.<span class=\"property\">next</span>;</span><br><span class=\"line\">        secondHead.<span class=\"property\">next</span> = pre;</span><br><span class=\"line\">        pre = secondHead;</span><br><span class=\"line\">        secondHead = temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> first = head;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> second = pre;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (second) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> temp = first.<span class=\"property\">next</span>;</span><br><span class=\"line\">        first.<span class=\"property\">next</span> = second;</span><br><span class=\"line\">        second = second.<span class=\"property\">next</span>;</span><br><span class=\"line\">        first.<span class=\"property\">next</span>.<span class=\"property\">next</span> = temp;</span><br><span class=\"line\">        first = first.<span class=\"property\">next</span>.<span class=\"property\">next</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#144)  Binary Tree Preorder Traversal","url":"/leetcode/leetcode144/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the root of a binary tree, return the preorder traversal of its nodes’ values.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定二叉樹的根，返回其節點值的前序遍歷。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>![example](..&#x2F;image&#x2F;leetcode&#x2F;leetcode144.jpg “example)<br>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [1,null,2,3]</span><br><span class=\"line\">Output: [1,2,3]</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = []</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [1]</span><br><span class=\"line\">Output: [1]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><ol>\n<li>已知前序遍布中-&gt;左-&gt;右的方式</li>\n<li>利用遞迴求解</li>\n<li>依序由中-&gt;左-&gt;右的條件找出樹的值</li>\n</ol>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> preorderTraversal = <span class=\"keyword\">function</span>(<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr=[];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp=<span class=\"keyword\">function</span>(<span class=\"params\">root</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root==<span class=\"literal\">null</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        arr.<span class=\"title function_\">push</span>(root.<span class=\"property\">val</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root.<span class=\"property\">left</span>!=<span class=\"literal\">null</span>)<span class=\"title function_\">dp</span>(root.<span class=\"property\">left</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root.<span class=\"property\">right</span>!=<span class=\"literal\">null</span>)<span class=\"title function_\">dp</span>(root.<span class=\"property\">right</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">dp</span>(root);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#145)  Binary Tree Postorder Traversal","url":"/leetcode/leetcode145/","content":"<p><strong>Difficult:Easy</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the root of a binary tree, return the postorder traversal of its nodes’ values.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定二叉樹的根，返回其節點值的後序遍歷。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>![example](..&#x2F;image&#x2F;leetcode&#x2F;leetcode144.jpg “example)<br>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [1,null,2,3]</span><br><span class=\"line\">Output: [3,2,1]</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = []</span><br><span class=\"line\">Output: []</span><br></pre></td></tr></table></figure>\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: root = [1]</span><br><span class=\"line\">Output: [1]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><ol>\n<li>已知後序遍布左-&gt;右-&gt;中的方式</li>\n<li>利用遞迴求解</li>\n<li>依序由左-&gt;右-&gt;中的條件找出樹的值</li>\n</ol>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> preorderTraversal = <span class=\"keyword\">function</span>(<span class=\"params\">root</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr=[];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp=<span class=\"keyword\">function</span>(<span class=\"params\">root</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root==<span class=\"literal\">null</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root.<span class=\"property\">left</span>!=<span class=\"literal\">null</span>)<span class=\"title function_\">dp</span>(root.<span class=\"property\">left</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root.<span class=\"property\">right</span>!=<span class=\"literal\">null</span>)<span class=\"title function_\">dp</span>(root.<span class=\"property\">right</span>);</span><br><span class=\"line\">        arr.<span class=\"title function_\">push</span>(root.<span class=\"property\">val</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">dp</span>(root);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Easy"],"tags":["Leetcode","Javascript"]},{"title":"設計模式 Design Pattern (二) 抽象工廠模式(Factory Pattern)","url":"/designpattern/designpattern-abstractfactory/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>抽象工廠模式介紹，以品牌建立各個產品來實作抽象工廠模式<br>抽象工廠模式算是比較少用的工廠模式，抽象工廠模式會將各個產品分成一個種類，此工廠可以產生種類的任一產品</p>\n<span id=\"more\"></span>\n\n<h1 id=\"實作工廠模式\"><a href=\"#實作工廠模式\" class=\"headerlink\" title=\"實作工廠模式\"></a>實作工廠模式</h1><h1 id=\"流程介紹\"><a href=\"#流程介紹\" class=\"headerlink\" title=\"流程介紹\"></a>流程介紹</h1><p><img src=\"/../image/designpattern/designpattern_factory_3_1.PNG\" alt=\"result\" title=\"result\"></p>\n<p>1.建立抽象Mouse和Keyboard</p>\n<p>2.建立實體品牌Intel和Acer的Mouse及Keyboard</p>\n<p>3.建立抽象Factory</p>\n<p>4.建立實體品牌Intel和Acer的Factory</p>\n<p>5.產生兩個品牌的產品</p>\n<h1 id=\"程式碼呈現\"><a href=\"#程式碼呈現\" class=\"headerlink\" title=\"程式碼呈現\"></a>程式碼呈現</h1><h2 style=\"color:red\">abstract 滑鼠和abstract 鍵盤</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title\">Mouse</span> &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">MouseInfo</span>()</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title\">Keyboard</span> &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">KeyboardInfo</span>()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 style=\"color:red\">實作intel及acer的滑鼠和鍵盤</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">IntelMouse</span> : <span class=\"title\">Mouse</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">MouseInfo</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">&quot;Intel滑鼠&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">AcerMouse</span> : <span class=\"title\">Mouse</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">MouseInfo</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">&quot;Acer滑鼠&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">IntelKeyboard</span> : <span class=\"title\">Keyboard</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">KeyboardInfo</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">&quot;Intel鍵盤&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">AcerKeyboard</span> : <span class=\"title\">Keyboard</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">KeyboardInfo</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">&quot;Acer鍵盤&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 style=\"color:red\">abstract 工廠</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title\">Factory</span>&#123;</span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> Keyboard <span class=\"title\">createKeyboard</span>()</span>;</span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> Mouse <span class=\"title\">createMouse</span>()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 style=\"color:red\">實作intel及acer工廠</h2>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">IntelFactoy</span> : <span class=\"title\">Factory</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> Keyboard <span class=\"title\">createKeyboard</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> IntelKeyboard();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> Mouse <span class=\"title\">createMouse</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> IntelMouse();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">AcerFactoy</span> : <span class=\"title\">Factory</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> Keyboard <span class=\"title\">createKeyboard</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> AcerKeyboard();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">override</span> Mouse <span class=\"title\">createMouse</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> AcerMouse();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 style=\"color:red\">產生兩個品牌產品</h3>\n\n\n<figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    IntelFactoy IntelFactoy = <span class=\"keyword\">new</span> IntelFactoy();</span><br><span class=\"line\">    AcerFactoy acerFactoy = <span class=\"keyword\">new</span> AcerFactoy();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> intelkeyboard=IntelFactoy.createKeyboard();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> intelmouse=IntelFactoy.createMouse();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> acerkeyboard = acerFactoy.createKeyboard();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> acermouse = acerFactoy.createMouse();</span><br><span class=\"line\">    intelkeyboard.KeyboardInfo();</span><br><span class=\"line\">    intelmouse.MouseInfo();    </span><br><span class=\"line\">    acerkeyboard.KeyboardInfo();</span><br><span class=\"line\">    acermouse.MouseInfo();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 style=\"color:red\">顯示結果</h3>\n\n<p><img src=\"/../image/designpattern/designpattern_factory_3_2.PNG\" alt=\"result\" title=\"result\"></p>\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><h2 id=\"優點：\"><a href=\"#優點：\" class=\"headerlink\" title=\"優點：\"></a>優點：</h2><p>1.改善了工廠模式每建立一個產品需再建立一個工廠</p>\n<h2 id=\"缺點：\"><a href=\"#缺點：\" class=\"headerlink\" title=\"缺點：\"></a>缺點：</h2><p>抽象模式對新增新產品不符合開閉原則。如要生產顯示器，不僅要新增顯示器抽象類和顯示器具體類，還需要修改Factory,在抽象工廠中新增一個CreateDisplay抽象方法（或介面），intel工廠和acer工廠也要實現新增的抽象方法(或者介面）。</p>\n","categories":["C#","Design Pattern"],"tags":["C#","Design Pattern","oop","創建模式","工廠模式"]},{"title":"Javascript(leetcode#147) Insertion Sort List","url":"/leetcode/leetcode147/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given the head of a singly linked list, sort the list using insertion sort, and return the sorted list’s head.</p>\n<p>The steps of the insertion sort algorithm:</p>\n<p>Insertion sort iterates, consuming one input element each repetition and growing a sorted output list.<br>At each iteration, insertion sort removes one element from the input data, finds the location it belongs within the sorted list and inserts it there.<br>It repeats until no input elements remain.<br>The following is a graphical example of the insertion sort algorithm. The partially sorted list (black) initially contains only the first element in the list. One element (red) is removed from the input data and inserted in-place into the sorted list with each iteration.</p>\n<p><img src=\"/../image/leetcode/leetcode147_1.gif\" alt=\"leetcode147\" title=\"leetcode147\"></p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定單鍊錶的頭部，使用插入排序對列表進行排序，並返回排序後的列表的頭部。</p>\n<p>插入排序算法的步驟：</p>\n<p>插入排序迭代，每次重複消耗一個輸入元素並增長一個排序的輸出列表。<br>在每次迭代中，插入排序從輸入數據中刪除一個元素，在排序列表中找到它所屬的位置並將其插入那裡。<br>它重複直到沒有輸入元素。<br>以下是插入排序算法的圖形示例。 部分排序的列表（黑色）最初只包含列表中的第一個元素。 每次迭代都會從輸入數據中刪除一個元素（紅色）並就地插入到排序列表中。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:<br><img src=\"/../image/leetcode/leetcode147_2.jpg\" alt=\"leetcode147\" title=\"leetcode147\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [4,2,1,3]</span><br><span class=\"line\">Output: [1,2,3,4]</span><br></pre></td></tr></table></figure>\n\n\n\n<p>Example 2:<br><img src=\"/../image/leetcode/leetcode147_3.jpg\" alt=\"leetcode147\" title=\"leetcode147\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: head = [-1,5,3,4,0]</span><br><span class=\"line\">Output: [-1,0,3,4,5]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><ol>\n<li>插入演算法由第一個位置依序往下插入</li>\n<li>若比遇到的大時繼續往下比較，碰到比自己的值時，插入在他的前面</li>\n</ol>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> insertionSortList = <span class=\"keyword\">function</span> (<span class=\"params\">head</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> link = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (head) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (link == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            link = <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(head.<span class=\"property\">val</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            link = <span class=\"title function_\">insert</span>(head.<span class=\"property\">val</span>, link);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        head = head.<span class=\"property\">next</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">insert</span>(<span class=\"params\">val, link</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> pre = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> head = link;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (link) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (val &lt; link.<span class=\"property\">val</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> root = <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(val);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (pre == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    root.<span class=\"property\">next</span> = link;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">let</span> temp = pre.<span class=\"property\">next</span>;</span><br><span class=\"line\">                    pre.<span class=\"property\">next</span> = root;</span><br><span class=\"line\">                    root.<span class=\"property\">next</span> = temp;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            pre = link;</span><br><span class=\"line\">            link = link.<span class=\"property\">next</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        pre.<span class=\"property\">next</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(val);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> link;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#150) Evaluate Reverse Polish Notation","url":"/leetcode/leetcode150/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Evaluate the value of an arithmetic expression in Reverse Polish Notation.</p>\n<p>Valid operators are +, -, *, and &#x2F;. Each operand may be an integer or another expression.</p>\n<p>Note that division between two integers should truncate toward zero.</p>\n<p>It is guaranteed that the given RPN expression is always valid. That means the expression would always evaluate to a result, and there will not be any division by zero operation.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>用逆波蘭表示法計算算術表達式的值。</p>\n<p>有效的運算符是 +、-、* 和 &#x2F;。 每個操作數可以是整數或另一個表達式。</p>\n<p>請注意，兩個整數之間的除法應該向零截斷。</p>\n<p>保證給定的 RPN 表達式始終有效。 這意味著表達式將始終計算結果，並且不會有任何除以零操作。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: tokens = [&quot;2&quot;,&quot;1&quot;,&quot;+&quot;,&quot;3&quot;,&quot;*&quot;]</span><br><span class=\"line\">Output: 9</span><br><span class=\"line\">Explanation: ((2 + 1) * 3) = 9</span><br></pre></td></tr></table></figure>\n\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: tokens = [&quot;4&quot;,&quot;13&quot;,&quot;5&quot;,&quot;/&quot;,&quot;+&quot;]</span><br><span class=\"line\">Output: 6</span><br><span class=\"line\">Explanation: (4 + (13 / 5)) = 6</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: tokens = [&quot;10&quot;,&quot;6&quot;,&quot;9&quot;,&quot;3&quot;,&quot;+&quot;,&quot;-11&quot;,&quot;*&quot;,&quot;/&quot;,&quot;*&quot;,&quot;17&quot;,&quot;+&quot;,&quot;5&quot;,&quot;+&quot;]</span><br><span class=\"line\">Output: 22</span><br><span class=\"line\">Explanation: ((10 * (6 / ((9 + 3) * -11))) + 17) + 5</span><br><span class=\"line\">= ((10 * (6 / (12 * -11))) + 17) + 5</span><br><span class=\"line\">= ((10 * (6 / -132)) + 17) + 5</span><br><span class=\"line\">= ((10 * 0) + 17) + 5</span><br><span class=\"line\">= (0 + 17) + 5</span><br><span class=\"line\">= 17 + 5</span><br><span class=\"line\">= 22</span><br></pre></td></tr></table></figure>\n\n\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><ol>\n<li>逆波蘭表示法(後綴表示法)</li>\n<li>例如：<br>a+b &#x3D;&gt; a b +<br>a+(b-c) &#x3D;&gt; a b c - +<br>a+d*(b-c) &#x3D;&gt; a d b c - * +<br>a&#x3D;1+3 &#x3D;&gt; a 1 3 + &#x3D;</li>\n<li>依上面規則寫出判斷</li>\n</ol>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> evalRPN = <span class=\"keyword\">function</span> (<span class=\"params\">tokens</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; tokens.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> val = tokens[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">isNaN</span>(val)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> one = <span class=\"built_in\">parseInt</span>(arr.<span class=\"title function_\">pop</span>());</span><br><span class=\"line\">            <span class=\"keyword\">let</span> two = <span class=\"built_in\">parseInt</span>(arr.<span class=\"title function_\">pop</span>());</span><br><span class=\"line\">            <span class=\"keyword\">let</span> newval = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (val) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;*&quot;</span>:</span><br><span class=\"line\">                    newval = two * one;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;-&quot;</span>:</span><br><span class=\"line\">                    newval = two - one;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;/&quot;</span>:</span><br><span class=\"line\">                    newval = two / one;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;+&quot;</span>:</span><br><span class=\"line\">                    newval = two + one;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            arr.<span class=\"title function_\">push</span>(newval);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            arr.<span class=\"title function_\">push</span>(val);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">parseInt</span>(arr[<span class=\"number\">0</span>]);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"設計模式 Design Pattern (五) 原型模式(Prototype Pattern)","url":"/designpattern/designpattern-prototype/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>一、原型模式的作用？<br>1、基本就是你需要從A的實例得到一份與A內容相同，但是又互不干擾的實例的話，就需要使用原型模式。<br>2、用原型實例指定創建對象的種類，並且通過拷貝這些原型創建新的對象。這個其實和C++的拷貝構造函數的作用是相似的（但不相同），實際上就是動態抽取 當前對象 運行時 的 狀態。<br>3、當然有的時候，如果我們並不需要基於現有的對象複製新的對象，或者我們需要的就是一個乾淨的空對象，那麼我的首先還是工廠模式或者抽象工廠模式。</p>\n<p>二、為什麼需要原型模式？<br>1、為什麼不用new直接新建對象，而要用原型模式？<br>首先，用new新建對像不能獲取當前對象運行時的狀態，其次就算new了新對象，在將當前對象的值複製給新對象，效率也不如原型模式高。<br>2、為什麼不直接使用拷貝構造函數，而要使用原型模式？<br>原型模式與拷貝構造函數是不同的概念，拷貝構造函數涉及的類是已知的，原型模式涉及的類可以是未知的（基類的拷貝構造函數只能複制得到基類的對象）。<br>原型模式生成的新對象可能是一個派生類。拷貝構造函數生成的新對像只能是類本身。原型模式是描述了一個通用方法(或概念)，它不管是如何實現的，而拷貝構造則是描述了一個具體實現方法。</p>\n<span id=\"more\"></span>\n<h1 id=\"UML\"><a href=\"#UML\" class=\"headerlink\" title=\"UML\"></a>UML</h1><p><img src=\"/../image/designpattern/prototype.png\" alt=\"&quot;prototype&quot;\" title=\"prototype\"></p>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><h1 id=\"淺拷貝\"><a href=\"#淺拷貝\" class=\"headerlink\" title=\"淺拷貝\"></a>淺拷貝</h1><figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> Prototype Design Pattern</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ConcreteCar concreteCar = <span class=\"keyword\">new</span> ConcreteCar(<span class=\"string\">&quot;Benz&quot;</span>, <span class=\"number\">100</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        ConcreteCar concreteCar1 = (ConcreteCar)concreteCar.Clone();</span><br><span class=\"line\">        concreteCar1.Model = <span class=\"string\">&quot;Toyoto&quot;</span>;</span><br><span class=\"line\">        concreteCar.Show();</span><br><span class=\"line\">        concreteCar1.Show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteCar</span> : <span class=\"title\">ICloneable</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> model;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">int</span> speend;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">int</span> wheel;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ConcreteCar</span>(<span class=\"params\"><span class=\"built_in\">string</span> _model, <span class=\"built_in\">int</span> _speend, <span class=\"built_in\">int</span> _wheel</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        model = _model;</span><br><span class=\"line\">        speend = _speend;</span><br><span class=\"line\">        wheel = _wheel;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Model</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> model; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span> &#123; model = <span class=\"keyword\">value</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Show</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">$&quot;車子品牌:<span class=\"subst\">&#123;model&#125;</span>,速度:<span class=\"subst\">&#123;speend&#125;</span>KM,輪子:<span class=\"subst\">&#123;wheel&#125;</span>&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Create a shallow copy</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">object</span> <span class=\"title\">Clone</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.MemberwiseClone();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"輸出結果\"><a href=\"#輸出結果\" class=\"headerlink\" title=\"輸出結果\"></a>輸出結果</h1><p><img src=\"/../image/designpattern/designpattern-prototype-1.png\" alt=\"&quot;prototype&quot;\" title=\"prototype\"></p>\n<h1 id=\"深拷貝\"><a href=\"#深拷貝\" class=\"headerlink\" title=\"深拷貝\"></a>深拷貝</h1><figure class=\"highlight c#\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> Prototype Design Pattern</span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ConcreteWheel concreteWheel = <span class=\"keyword\">new</span> ConcreteWheel(<span class=\"number\">4</span>, <span class=\"string\">&quot;380&quot;</span>);</span><br><span class=\"line\">        ConcreteCar concreteCar = <span class=\"keyword\">new</span> ConcreteCar(<span class=\"string\">&quot;Benz&quot;</span>, <span class=\"number\">100</span>, concreteWheel);</span><br><span class=\"line\"></span><br><span class=\"line\">        ConcreteCar shallowconcreteCar = (ConcreteCar)concreteCar.Clone();</span><br><span class=\"line\">        ConcreteCar deepconcreteCar = (ConcreteCar)concreteCar.DeepClone();</span><br><span class=\"line\"></span><br><span class=\"line\">   </span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">&quot;=====未更改的原形======&quot;</span>);</span><br><span class=\"line\">        concreteCar.Show();</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">&quot;=====淺拷貝更改======&quot;</span>);</span><br><span class=\"line\">        shallowconcreteCar.ConcreteWheel.Wheel = <span class=\"number\">10</span>;</span><br><span class=\"line\">        shallowconcreteCar.Show();</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">&quot;=====被更改的原形======&quot;</span>);</span><br><span class=\"line\">        concreteCar.Show();</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">&quot;=====深拷貝更改======&quot;</span>);</span><br><span class=\"line\">        deepconcreteCar.ConcreteWheel.Wheel = <span class=\"number\">200</span>;</span><br><span class=\"line\">        deepconcreteCar.Show();</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">&quot;====未被改的原形======&quot;</span>);</span><br><span class=\"line\">        concreteCar.Show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteCar</span> : <span class=\"title\">ICloneable</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> model;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">int</span> speend;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ConcreteWheel concreteWheel;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ConcreteCar</span>(<span class=\"params\"><span class=\"built_in\">string</span> _model, <span class=\"built_in\">int</span> _speend, ConcreteWheel _concreteWheel</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        model = _model;</span><br><span class=\"line\">        speend = _speend;</span><br><span class=\"line\">        concreteWheel = _concreteWheel;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Model</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> model; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span> &#123; model = <span class=\"keyword\">value</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Show</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">$&quot;車子品牌:<span class=\"subst\">&#123;model&#125;</span>,車速:<span class=\"subst\">&#123;speend&#125;</span>,車子輪子<span class=\"subst\">&#123;concreteWheel.Show()&#125;</span>&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ConcreteWheel ConcreteWheel</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> concreteWheel;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span> &#123; concreteWheel = <span class=\"keyword\">value</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Create a deep copy</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">object</span> <span class=\"title\">DeepClone</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ConcreteCar concreteCar = <span class=\"keyword\">new</span> ConcreteCar(model, speend, concreteWheel.newClone());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> concreteCar;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Create a shallow copy</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">object</span> <span class=\"title\">Clone</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.MemberwiseClone();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteWheel</span> : <span class=\"title\">ICloneable</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">int</span> wheel;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> motor;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ConcreteWheel</span>(<span class=\"params\"><span class=\"built_in\">int</span> _wheel, <span class=\"built_in\">string</span> _motor</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        wheel = _wheel;</span><br><span class=\"line\">        motor = _motor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span>  <span class=\"title\">Show</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">$&quot;車子輪數:<span class=\"subst\">&#123;wheel&#125;</span>,車子馬達:<span class=\"subst\">&#123;motor&#125;</span>&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Wheel</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> wheel; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span> &#123; wheel = <span class=\"keyword\">value</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">object</span> <span class=\"title\">Clone</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.MemberwiseClone();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ConcreteWheel <span class=\"title\">newClone</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ConcreteWheel(wheel, motor);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"輸出結果-1\"><a href=\"#輸出結果-1\" class=\"headerlink\" title=\"輸出結果\"></a>輸出結果</h1><p><img src=\"/../image/designpattern/designpattern-prototype-2.png\" alt=\"&quot;prototype&quot;\" title=\"prototype\"></p>\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><h1 id=\"優缺點\"><a href=\"#優缺點\" class=\"headerlink\" title=\"優缺點\"></a>優缺點</h1><h1 id=\"優點：\"><a href=\"#優點：\" class=\"headerlink\" title=\"優點：\"></a>優點：</h1><p>原型模式向客戶隱藏了建立新例項的複雜性<br>原型模式允許動態增加或較少產品類。<br>原型模式簡化了例項的建立結構，工廠方法模式需要有一個與產品類等級結構相同的等級結構，而原型模式不需要這樣。<br>產品類不需要事先確定產品的等級結構，因為原型模式適用於任何的等級結構</p>\n<h1 id=\"缺點：\"><a href=\"#缺點：\" class=\"headerlink\" title=\"缺點：\"></a>缺點：</h1><p>每個類必須配備一個克隆方法。<br>配備克隆方法需要對類的功能進行通盤考慮，這對於全新的類不是很難，但對於已有的類不一定很容易，特別當一個類引用不支援序列化的間接物件，或者引用含有迴圈結構的時候。</p>\n","categories":["C#","Design Pattern"],"tags":["C#","Design Pattern","oop","創建模式","原型模式"]},{"title":"Javascript(leetcode#151) Reverse Words in a String","url":"/leetcode/leetcode151/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an input string s, reverse the order of the words.</p>\n<p>A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.</p>\n<p>Return a string of the words in reverse order concatenated by a single space.</p>\n<p>Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個輸入字符串 s，顛倒單詞的順序。</p>\n<p>單詞被定義為一系列非空格字符。 s 中的單詞將至少用一個空格分隔。</p>\n<p>以相反的順序返回由單個空格連接的單詞字符串。</p>\n<p>請注意， s 可能包含前導或尾隨空格或兩個單詞之間的多個空格。返回的字符串應該只有一個空格分隔單詞。不要包含任何額外的空格。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;the sky is blue&quot;</span><br><span class=\"line\">Output: &quot;blue is sky the&quot;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;  hello world  &quot;</span><br><span class=\"line\">Output: &quot;world hello&quot;</span><br><span class=\"line\">Explanation: Your reversed string should not contain leading or trailing spaces.</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 3:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: s = &quot;a good   example&quot;</span><br><span class=\"line\">Output: &quot;example good a&quot;</span><br><span class=\"line\">Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.</span><br></pre></td></tr></table></figure>\n\n\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.設一個儲存陣列arr<br>2.若非空白時將它加入字串str，若遇到空白時結束並加入arr並將str&#x3D;” “<br>3.迴圈結束將arr組合成字串</p>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reverseWords = <span class=\"keyword\">function</span> (<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arr = [];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> str = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = s.<span class=\"property\">length</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> char = s[i];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (char != <span class=\"string\">&quot; &quot;</span>) &#123;</span><br><span class=\"line\">      str = char + str;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (str != <span class=\"string\">&quot;&quot;</span> &amp;&amp; char == <span class=\"string\">&quot; &quot;</span>) &#123;</span><br><span class=\"line\">      arr.<span class=\"title function_\">push</span>(str);</span><br><span class=\"line\">      str = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (str != <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">    arr.<span class=\"title function_\">push</span>(str);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr.<span class=\"title function_\">join</span>(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]},{"title":"Javascript(leetcode#152) Maximum Product Subarray","url":"/leetcode/leetcode152/","content":"<p><strong>Difficult:Medium</strong></p>\n<h1 id=\"題目\"><a href=\"#題目\" class=\"headerlink\" title=\"題目\"></a>題目</h1><p>Given an integer array nums, find a contiguous non-empty subarray within the array that has the largest product, and return the product.</p>\n<p>The test cases are generated so that the answer will fit in a 32-bit integer.</p>\n<p>A subarray is a contiguous subsequence of the array.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"翻譯\"><a href=\"#翻譯\" class=\"headerlink\" title=\"翻譯\"></a>翻譯</h1><p>給定一個整數數組 nums，在數組中找到一個具有最大乘積的連續非空子數組，並返回該乘積。</p>\n<p>生成測試用例以使答案適合 32 位整數。</p>\n<p>子數組是數組的連續子序列。</p>\n<h1 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h1><p>Example 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [2,3,-2,4]</span><br><span class=\"line\">Output: 6</span><br><span class=\"line\">Explanation: [2,3] has the largest product 6.</span><br></pre></td></tr></table></figure>\n\n\n<p>Example 2:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Input: nums = [-2,0,-1]</span><br><span class=\"line\">Output: 0</span><br><span class=\"line\">Explanation: The result cannot be 2, because [-2,-1] is not a subarray.</span><br></pre></td></tr></table></figure>\n\n\n\n\n<h1 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h1><p>1.設三個變數min,max,res<br>2.當nums[i]&lt;0時將max跟min做交換，由於負成負會變成正的<br>3.將res和max做比較</p>\n<h1 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> maxProduct = <span class=\"keyword\">function</span> (<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> res = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> min = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> max = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; nums.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    max *= nums[i];</span><br><span class=\"line\">    min *= nums[i];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums[i] &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> temp = max;</span><br><span class=\"line\">      max = min;</span><br><span class=\"line\">      min = temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    max=<span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(max,nums[i]);</span><br><span class=\"line\">    min=<span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(min,nums[i]);</span><br><span class=\"line\">    res=<span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(res,max);</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n","categories":["Leetcode","Leetcode Medium"],"tags":["Leetcode","Javascript"]}]